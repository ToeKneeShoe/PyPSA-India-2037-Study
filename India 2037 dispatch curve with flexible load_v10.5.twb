<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10500.18.0305.1200                               -->
<workbook original-version='18.1' source-build='10.5.2 (10500.18.0305.1200)' source-platform='win' version='10.5' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='tab_dam_generator_power' inline='true' name='federated.0b38ofp1aw3qe718dqabr05dqt0h' version='10.5'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='tab_dam_generator_power' name='textscan.130sa4l06pyoof129wqru1vvaoai'>
            <connection class='textscan' directory='H:/Power Systems/V2-7-9-2019/output_scenarios/default-08-06-2019/demand-response/tableau_output' filename='tab_dam_generator_power_combined.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation all='true' name='Union' type='union'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='Zone' />
            <column datatype='string' name='Attribute' />
            <column datatype='real' name='Value' />
            <column datatype='string' name='Timeblock' />
            <column datatype='string' name='Scenario' />
            <column datatype='string' name='Resource' />
            <column datatype='string' name='Table Name' />
          </columns>
          <relation connection='textscan.130sa4l06pyoof129wqru1vvaoai' name='tab_dam_demand_response_load_combined.csv' table='[tab_dam_demand_response_load_combined#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='Zone' ordinal='0' />
              <column datatype='string' name='Attribute' ordinal='1' />
              <column datatype='real' name='Value' ordinal='2' />
              <column datatype='string' name='Timeblock' ordinal='3' />
              <column datatype='string' name='Scenario' ordinal='4' />
            </columns>
          </relation>
          <relation connection='textscan.130sa4l06pyoof129wqru1vvaoai' name='tab_dam_generator_power_combined.csv' table='[tab_dam_generator_power_combined#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='Resource' ordinal='0' />
              <column datatype='integer' name='Zone' ordinal='1' />
              <column datatype='string' name='Attribute' ordinal='2' />
              <column datatype='real' name='Value' ordinal='3' />
              <column datatype='string' name='Timeblock' ordinal='4' />
              <column datatype='string' name='Scenario' ordinal='5' />
            </columns>
          </relation>
          <relation connection='textscan.130sa4l06pyoof129wqru1vvaoai' name='tab_dam_storage_unit_power_combined.csv' table='[tab_dam_storage_unit_power_combined#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='Resource' ordinal='0' />
              <column datatype='integer' name='Zone' ordinal='1' />
              <column datatype='string' name='Attribute' ordinal='2' />
              <column datatype='real' name='Value' ordinal='3' />
              <column datatype='string' name='Timeblock' ordinal='4' />
              <column datatype='string' name='Scenario' ordinal='5' />
            </columns>
          </relation>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Union]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Zone</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Zone]</local-name>
            <parent-name>[Union]</parent-name>
            <remote-alias>Zone</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Attribute</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Attribute]</local-name>
            <parent-name>[Union]</parent-name>
            <remote-alias>Attribute</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Value]</local-name>
            <parent-name>[Union]</parent-name>
            <remote-alias>Value</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Timeblock</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Timeblock]</local-name>
            <parent-name>[Union]</parent-name>
            <remote-alias>Timeblock</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Scenario</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Scenario]</local-name>
            <parent-name>[Union]</parent-name>
            <remote-alias>Scenario</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Resource</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Resource]</local-name>
            <parent-name>[Union]</parent-name>
            <remote-alias>Resource</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Table Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Table Name]</local-name>
            <parent-name>[Union]</parent-name>
            <remote-alias>Table Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Attribute1' datatype='string' name='[Attribute]' role='dimension' type='nominal' />
      <column caption='Inflexible Load' datatype='real' name='[Calculation_1157425121073844224]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_demand_response_load_combined.csv&quot; THEN&#13;&#10;  -1*[Value]&#13;&#10;ELSE&#13;&#10;  [Value]&#13;&#10;END' />
      </column>
      <column caption='Weights' datatype='real' name='[Calculation_318911165499232256]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Timeblock]&#13;&#10;  WHEN &quot;t1&quot; THEN 36&#13;&#10;  WHEN &quot;t2&quot; THEN 14&#13;&#10;  WHEN &quot;t3&quot; THEN 9.18368717&#13;&#10;  ELSE 13&#13;&#10;END' />
      </column>
      <column caption='Weighted Load' datatype='real' name='[Calculation_318911165501034498]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Inflexible Load (copy)]*[Calculation_318911165499232256]' />
      </column>
      <column caption='Time Interval' datatype='string' name='[Calculation_42502738358603776]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Timeblock]==&quot;t1&quot; THEN&#13;&#10;  [Attribute]&#13;&#10;ELSEIF [Timeblock]==&quot;t2&quot; THEN&#13;&#10;  &quot;t&quot;+STR(120+INT(RIGHT([Attribute],LEN([Attribute])-1)))&#13;&#10;ELSEIF [Timeblock]==&quot;t3&quot; THEN&#13;&#10;  &quot;t&quot;+STR(240+INT(RIGHT([Attribute],LEN([Attribute])-1)))&#13;&#10;ELSE&#13;&#10;  &quot;t&quot;+STR(360+INT(RIGHT([Attribute],LEN([Attribute])-1)))&#13;&#10;END' />
      </column>
      <column caption='GW Weighted Load' datatype='real' name='[Calculation_832884476106674176]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_318911165501034498] / 1000' />
      </column>
      <column caption='Total Load' datatype='real' name='[Inflexible Load (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_demand_response_load_combined.csv&quot; THEN&#13;&#10;  0*[Value]&#13;&#10;ELSE&#13;&#10;  [Value]&#13;&#10;END' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Resource1 (group) 1]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Resource]' new-bin='true'>
          <bin default-name='true' value='&quot;Coal new &amp; Coal Old&quot;'>
            <value>&quot;Coal new&quot;</value>
            <value>&quot;Coal Old&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Nuclear New &amp; Nuclear Old&quot;'>
            <value>&quot;Nuclear New&quot;</value>
            <value>&quot;Nuclear Old&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Resource1 (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Resource]' new-bin='true'>
          <bin default-name='true' value='&quot;CCGT New &amp; CCGT Old&quot;'>
            <value>&quot;CCGT New&quot;</value>
            <value>&quot;CCGT Old&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Coal new &amp; Coal Old&quot;'>
            <value>&quot;Coal new&quot;</value>
            <value>&quot;Coal Old&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Hydro Reservoir, Hydro Run of River, Pumped Hydro Storage&quot;'>
            <value>&quot;Hydro Reservoir&quot;</value>
            <value>&quot;Hydro Run of River&quot;</value>
            <value>&quot;Pumped Hydro Storage&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Nuclear New &amp; Nuclear Old&quot;'>
            <value>&quot;Nuclear New&quot;</value>
            <value>&quot;Nuclear Old&quot;</value>
          </bin>
        </calculation>
      </column>
      <column caption='Resource1' datatype='string' name='[Resource]' role='dimension' type='nominal' />
      <column caption='Net Load' datatype='real' name='[Total Load (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_demand_response_load_combined.csv&quot; THEN&#13;&#10;  0*[Value]&#13;&#10;ELSEIF ([Resource]==&quot;Solar&quot;) OR ([Resource]==&quot;Wind&quot;) THEN&#13;&#10;  0*[Value]&#13;&#10;ELSE&#13;&#10;  [Value]&#13;&#10;END' />
      </column>
      <column datatype='real' name='[Value]' role='measure' type='quantitative' />
      <column-instance column='[Resource]' derivation='None' name='[none:Resource:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_318911165501034498]' derivation='Sum' name='[pcto:sum:Calculation_318911165501034498:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_318911165501034498]' derivation='Sum' name='[pcto:sum:Calculation_318911165501034498:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Inflexible Load (copy)]' derivation='Sum' name='[pcto:sum:Inflexible Load (copy):qk:3]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' type='PctTotal' />
      </column-instance>
      <column-instance column='[Inflexible Load (copy)]' derivation='Sum' name='[pcto:sum:Inflexible Load (copy):qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_1157425121073844224]' derivation='Sum' name='[sum:Calculation_1157425121073844224:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_318911165501034498]' derivation='Sum' name='[sum:Calculation_318911165501034498:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Inflexible Load (copy)]' derivation='Sum' name='[sum:Inflexible Load (copy):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total Load (copy)]' derivation='Sum' name='[sum:Total Load (copy):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Value]' derivation='Sum' name='[sum:Value:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.473552' measure-ordering='alphabetic' measure-percentage='0.526448' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#000000'>
              <bucket>&quot;[federated.0b38ofp1aw3qe718dqabr05dqt0h].[pcto:sum:Calculation_318911165501034498:qk:2]&quot;</bucket>
            </map>
            <map to='#000000'>
              <bucket>&quot;[federated.0b38ofp1aw3qe718dqabr05dqt0h].[pcto:sum:Calculation_318911165501034498:qk]&quot;</bucket>
            </map>
            <map to='#000000'>
              <bucket>&quot;[federated.0b38ofp1aw3qe718dqabr05dqt0h].[pcto:sum:Inflexible Load (copy):qk:3]&quot;</bucket>
            </map>
            <map to='#000000'>
              <bucket>&quot;[federated.0b38ofp1aw3qe718dqabr05dqt0h].[pcto:sum:Inflexible Load (copy):qk]&quot;</bucket>
            </map>
            <map to='#000000'>
              <bucket>&quot;[federated.0b38ofp1aw3qe718dqabr05dqt0h].[sum:Calculation_318911165501034498:qk]&quot;</bucket>
            </map>
            <map to='#000000'>
              <bucket>&quot;[federated.0b38ofp1aw3qe718dqabr05dqt0h].[sum:Inflexible Load (copy):qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0b38ofp1aw3qe718dqabr05dqt0h].[sum:Value:qk]&quot;</bucket>
            </map>
            <map to='#848e93'>
              <bucket>&quot;[federated.0b38ofp1aw3qe718dqabr05dqt0h].[sum:Calculation_1157425121073844224:qk]&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;[federated.0b38ofp1aw3qe718dqabr05dqt0h].[sum:Total Load (copy):qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Resource:nk]' type='palette'>
            <map to='#2a5783'>
              <bucket>&quot;Pumped Hydro Storage&quot;</bucket>
            </map>
            <map to='#2b7c40'>
              <bucket>&quot;Biomass&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Hydro Reservoir&quot;</bucket>
            </map>
            <map to='#49525e'>
              <bucket>&quot;Diesel Old&quot;</bucket>
            </map>
            <map to='#67737c'>
              <bucket>&quot;Diesel New&quot;</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>&quot;Hydro Run of River&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Batteries&quot;</bucket>
            </map>
            <map to='#7c4d79'>
              <bucket>&quot;Nuclear Old&quot;</bucket>
            </map>
            <map to='#7dc370'>
              <bucket>&quot;Wind&quot;</bucket>
            </map>
            <map to='#926591'>
              <bucket>&quot;Nuclear New&quot;</bucket>
            </map>
            <map to='#92c0df'>
              <bucket>&quot;Mini Hydro&quot;</bucket>
            </map>
            <map to='#b4b7b7'>
              <bucket>&quot;Backup&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Coal new&quot;</bucket>
            </map>
            <map to='#ce8451'>
              <bucket>&quot;Coal Old&quot;</bucket>
            </map>
            <map to='#de9d5a'>
              <bucket>&quot;Coal New&quot;</bucket>
            </map>
            <map to='#e96b20'>
              <bucket>&quot;CCGT Old&quot;</bucket>
            </map>
            <map to='#f59c3c'>
              <bucket>&quot;CCGT New&quot;</bucket>
            </map>
            <map to='#ffda66'>
              <bucket>&quot;Solar&quot;</bucket>
            </map>
            <map to='#ffffff'>
              <bucket>%null%</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Resource1 (group)]' type='palette'>
            <map to='#2a5783'>
              <bucket>&quot;Pumped Hydro Storage&quot;</bucket>
            </map>
            <map to='#2b7c40'>
              <bucket>&quot;Biomass&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Hydro Reservoir&quot;</bucket>
            </map>
            <map to='#49525e'>
              <bucket>&quot;Diesel Old&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hydro Reservoir, Hydro Run of River, Pumped Hydro Storage&quot;</bucket>
            </map>
            <map to='#67737c'>
              <bucket>&quot;Diesel New&quot;</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>&quot;Hydro Run of River&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Batteries&quot;</bucket>
            </map>
            <map to='#7c4d79'>
              <bucket>&quot;Nuclear Old&quot;</bucket>
            </map>
            <map to='#7dc370'>
              <bucket>&quot;Wind&quot;</bucket>
            </map>
            <map to='#926591'>
              <bucket>&quot;Nuclear New&quot;</bucket>
            </map>
            <map to='#92c0df'>
              <bucket>&quot;Mini Hydro&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Coal new &amp; Coal Old&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nuclear New &amp; Nuclear Old&quot;</bucket>
            </map>
            <map to='#b4b7b7'>
              <bucket>&quot;Backup&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Coal new&quot;</bucket>
            </map>
            <map to='#ce8451'>
              <bucket>&quot;Coal Old&quot;</bucket>
            </map>
            <map to='#de9d5a'>
              <bucket>&quot;Coal New&quot;</bucket>
            </map>
            <map to='#e96b20'>
              <bucket>&quot;CCGT Old&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;CCGT New &amp; CCGT Old&quot;</bucket>
            </map>
            <map to='#f59c3c'>
              <bucket>&quot;CCGT New&quot;</bucket>
            </map>
            <map to='#ffda66'>
              <bucket>&quot;Solar&quot;</bucket>
            </map>
            <map to='#ffffff'>
              <bucket>%null%</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Resource1 (group) 1]' type='palette'>
            <map to='#2a5783'>
              <bucket>&quot;Pumped Hydro Storage&quot;</bucket>
            </map>
            <map to='#2b7c40'>
              <bucket>&quot;Biomass&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Hydro Reservoir&quot;</bucket>
            </map>
            <map to='#49525e'>
              <bucket>&quot;Diesel Old&quot;</bucket>
            </map>
            <map to='#67737c'>
              <bucket>&quot;Diesel New&quot;</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>&quot;Hydro Run of River&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Batteries&quot;</bucket>
            </map>
            <map to='#7c4d79'>
              <bucket>&quot;Nuclear Old&quot;</bucket>
            </map>
            <map to='#7dc370'>
              <bucket>&quot;Wind&quot;</bucket>
            </map>
            <map to='#926591'>
              <bucket>&quot;Nuclear New&quot;</bucket>
            </map>
            <map to='#92c0df'>
              <bucket>&quot;Mini Hydro&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Coal new &amp; Coal Old&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nuclear New &amp; Nuclear Old&quot;</bucket>
            </map>
            <map to='#b4b7b7'>
              <bucket>&quot;Backup&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Coal new&quot;</bucket>
            </map>
            <map to='#ce8451'>
              <bucket>&quot;Coal Old&quot;</bucket>
            </map>
            <map to='#de9d5a'>
              <bucket>&quot;Coal New&quot;</bucket>
            </map>
            <map to='#e96b20'>
              <bucket>&quot;CCGT Old&quot;</bucket>
            </map>
            <map to='#f59c3c'>
              <bucket>&quot;CCGT New&quot;</bucket>
            </map>
            <map to='#ffda66'>
              <bucket>&quot;Solar&quot;</bucket>
            </map>
            <map to='#ffffff'>
              <bucket>%null%</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Dispatch'>
      <table>
        <view>
          <datasources>
            <datasource caption='tab_dam_generator_power' name='federated.0b38ofp1aw3qe718dqabr05dqt0h' />
          </datasources>
          <datasource-dependencies datasource='federated.0b38ofp1aw3qe718dqabr05dqt0h'>
            <column caption='Attribute1' datatype='string' name='[Attribute]' role='dimension' type='nominal' />
            <column caption='Inflexible Load' datatype='real' name='[Calculation_1157425121073844224]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_demand_response_load_combined.csv&quot; THEN&#13;&#10;  -1*[Value]&#13;&#10;ELSE&#13;&#10;  [Value]&#13;&#10;END' />
            </column>
            <column caption='Time Interval' datatype='string' name='[Calculation_42502738358603776]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Timeblock]==&quot;t1&quot; THEN&#13;&#10;  [Attribute]&#13;&#10;ELSEIF [Timeblock]==&quot;t2&quot; THEN&#13;&#10;  &quot;t&quot;+STR(120+INT(RIGHT([Attribute],LEN([Attribute])-1)))&#13;&#10;ELSEIF [Timeblock]==&quot;t3&quot; THEN&#13;&#10;  &quot;t&quot;+STR(240+INT(RIGHT([Attribute],LEN([Attribute])-1)))&#13;&#10;ELSE&#13;&#10;  &quot;t&quot;+STR(360+INT(RIGHT([Attribute],LEN([Attribute])-1)))&#13;&#10;END' />
            </column>
            <column caption='Total Load' datatype='real' name='[Inflexible Load (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_demand_response_load_combined.csv&quot; THEN&#13;&#10;  0*[Value]&#13;&#10;ELSE&#13;&#10;  [Value]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Resource1 (group) 1]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Resource]' new-bin='true'>
                <bin default-name='true' value='&quot;Coal new &amp; Coal Old&quot;'>
                  <value>&quot;Coal new&quot;</value>
                  <value>&quot;Coal Old&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Nuclear New &amp; Nuclear Old&quot;'>
                  <value>&quot;Nuclear New&quot;</value>
                  <value>&quot;Nuclear Old&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Resource1' datatype='string' name='[Resource]' role='dimension' type='nominal' />
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Timeblock]' role='dimension' type='nominal' />
            <column caption='Net Load' datatype='real' name='[Total Load (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_demand_response_load_combined.csv&quot; THEN&#13;&#10;  0*[Value]&#13;&#10;ELSEIF ([Resource]==&quot;Solar&quot;) OR ([Resource]==&quot;Wind&quot;) THEN&#13;&#10;  0*[Value]&#13;&#10;ELSE&#13;&#10;  [Value]&#13;&#10;END' />
            </column>
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_42502738358603776]' derivation='None' name='[none:Calculation_42502738358603776:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[Timeblock]' derivation='None' name='[none:Timeblock:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1157425121073844224]' derivation='Sum' name='[sum:Calculation_1157425121073844224:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Inflexible Load (copy)]' derivation='Sum' name='[sum:Inflexible Load (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total Load (copy)]' derivation='Sum' name='[sum:Total Load (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Value]' derivation='Sum' name='[sum:Value:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0b38ofp1aw3qe718dqabr05dqt0h].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0b38ofp1aw3qe718dqabr05dqt0h].[sum:Inflexible Load (copy):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0b38ofp1aw3qe718dqabr05dqt0h].[sum:Calculation_1157425121073844224:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0b38ofp1aw3qe718dqabr05dqt0h].[sum:Total Load (copy):qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.0b38ofp1aw3qe718dqabr05dqt0h].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0b38ofp1aw3qe718dqabr05dqt0h].[sum:Inflexible Load (copy):qk]&quot;</bucket>
              <bucket>&quot;[federated.0b38ofp1aw3qe718dqabr05dqt0h].[sum:Calculation_1157425121073844224:qk]&quot;</bucket>
              <bucket>&quot;[federated.0b38ofp1aw3qe718dqabr05dqt0h].[sum:Total Load (copy):qk]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[federated.0b38ofp1aw3qe718dqabr05dqt0h].[Resource1 (group) 1]' direction='ASC'>
            <dictionary>
              <bucket>%null%</bucket>
              <bucket>&quot;Solar&quot;</bucket>
              <bucket>&quot;Wind&quot;</bucket>
              <bucket>&quot;Backup&quot;</bucket>
              <bucket>&quot;Diesel New&quot;</bucket>
              <bucket>&quot;Diesel Old&quot;</bucket>
              <bucket>&quot;Biomass&quot;</bucket>
              <bucket>&quot;Mini Hydro&quot;</bucket>
              <bucket>&quot;Hydro Run of River&quot;</bucket>
              <bucket>&quot;Hydro Reservoir&quot;</bucket>
              <bucket>&quot;Pumped Hydro Storage&quot;</bucket>
              <bucket>&quot;CCGT New&quot;</bucket>
              <bucket>&quot;CCGT Old&quot;</bucket>
              <bucket>&quot;Coal New&quot;</bucket>
              <bucket>%all%</bucket>
              <bucket>&quot;Batteries&quot;</bucket>
              <bucket>&quot;Coal Old&quot;</bucket>
              <bucket>&quot;Coal new&quot;</bucket>
              <bucket>&quot;Nuclear Old&quot;</bucket>
              <bucket>&quot;Nuclear New&quot;</bucket>
              <bucket>&quot;Coal new &amp; Coal Old&quot;</bucket>
              <bucket>&quot;Nuclear New &amp; Nuclear Old&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[federated.0b38ofp1aw3qe718dqabr05dqt0h].[none:Resource:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Resource:nk]' />
              <groupfilter function='member' level='[none:Resource:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0b38ofp1aw3qe718dqabr05dqt0h].[none:Timeblock:nk]'>
            <groupfilter function='member' level='[none:Timeblock:nk]' member='&quot;t1&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0b38ofp1aw3qe718dqabr05dqt0h].[:Measure Names]</column>
            <column>[federated.0b38ofp1aw3qe718dqabr05dqt0h].[none:Timeblock:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0b38ofp1aw3qe718dqabr05dqt0h].[Multiple Values]' field-type='quantitative' fold='true' major-origin='0.0' major-show='false' major-spacing='100000.0' minor-origin='0.0' minor-show='false' minor-spacing='10000.0' scope='rows' synchronized='true' type='space' />
            <format attr='title' class='0' field='[federated.0b38ofp1aw3qe718dqabr05dqt0h].[Multiple Values]' scope='rows' value='' />
            <format attr='display' class='0' field='[federated.0b38ofp1aw3qe718dqabr05dqt0h].[Multiple Values]' scope='rows' value='false' />
            <format attr='title' class='0' field='[federated.0b38ofp1aw3qe718dqabr05dqt0h].[sum:Value:qk]' scope='rows' value='Load (MW)' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0b38ofp1aw3qe718dqabr05dqt0h].[none:Scenario:nk]' value='180' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0b38ofp1aw3qe718dqabr05dqt0h].[sum:Value:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0b38ofp1aw3qe718dqabr05dqt0h].[Resource1 (group) 1]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.9340331554412842' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0b38ofp1aw3qe718dqabr05dqt0h].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0b38ofp1aw3qe718dqabr05dqt0h].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0b38ofp1aw3qe718dqabr05dqt0h].[none:Scenario:nk] * ([federated.0b38ofp1aw3qe718dqabr05dqt0h].[sum:Value:qk] + [federated.0b38ofp1aw3qe718dqabr05dqt0h].[Multiple Values]))</rows>
        <cols>[federated.0b38ofp1aw3qe718dqabr05dqt0h].[none:Calculation_42502738358603776:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Dispatch (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='tab_dam_generator_power' name='federated.0b38ofp1aw3qe718dqabr05dqt0h' />
          </datasources>
          <datasource-dependencies datasource='federated.0b38ofp1aw3qe718dqabr05dqt0h'>
            <column caption='Attribute1' datatype='string' name='[Attribute]' role='dimension' type='nominal' />
            <column caption='Time Interval' datatype='string' name='[Calculation_42502738358603776]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Timeblock]==&quot;t1&quot; THEN&#13;&#10;  [Attribute]&#13;&#10;ELSEIF [Timeblock]==&quot;t2&quot; THEN&#13;&#10;  &quot;t&quot;+STR(120+INT(RIGHT([Attribute],LEN([Attribute])-1)))&#13;&#10;ELSEIF [Timeblock]==&quot;t3&quot; THEN&#13;&#10;  &quot;t&quot;+STR(240+INT(RIGHT([Attribute],LEN([Attribute])-1)))&#13;&#10;ELSE&#13;&#10;  &quot;t&quot;+STR(360+INT(RIGHT([Attribute],LEN([Attribute])-1)))&#13;&#10;END' />
            </column>
            <column caption='Total Load' datatype='real' name='[Inflexible Load (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_demand_response_load_combined.csv&quot; THEN&#13;&#10;  0*[Value]&#13;&#10;ELSE&#13;&#10;  [Value]&#13;&#10;END' />
            </column>
            <column caption='Resource1' datatype='string' name='[Resource]' role='dimension' type='nominal' />
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Timeblock]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_42502738358603776]' derivation='None' name='[none:Calculation_42502738358603776:nk]' pivot='key' type='nominal' />
            <column-instance column='[Resource]' derivation='None' name='[none:Resource:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[Timeblock]' derivation='None' name='[none:Timeblock:nk]' pivot='key' type='nominal' />
            <column-instance column='[Inflexible Load (copy)]' derivation='Sum' name='[sum:Inflexible Load (copy):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0b38ofp1aw3qe718dqabr05dqt0h].[none:Resource:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Resource:nk]' />
              <groupfilter function='member' level='[none:Resource:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.0b38ofp1aw3qe718dqabr05dqt0h].[none:Resource:nk]' direction='ASC'>
            <dictionary>
              <bucket>%null%</bucket>
              <bucket>&quot;Solar&quot;</bucket>
              <bucket>&quot;Wind&quot;</bucket>
              <bucket>&quot;Backup&quot;</bucket>
              <bucket>&quot;Diesel New&quot;</bucket>
              <bucket>&quot;Diesel Old&quot;</bucket>
              <bucket>&quot;Biomass&quot;</bucket>
              <bucket>&quot;Mini Hydro&quot;</bucket>
              <bucket>&quot;Hydro Run of River&quot;</bucket>
              <bucket>&quot;Hydro Reservoir&quot;</bucket>
              <bucket>&quot;Pumped Hydro Storage&quot;</bucket>
              <bucket>&quot;CCGT New&quot;</bucket>
              <bucket>&quot;CCGT Old&quot;</bucket>
              <bucket>&quot;Coal New&quot;</bucket>
              <bucket>&quot;Coal Old&quot;</bucket>
              <bucket>%all%</bucket>
              <bucket>&quot;Nuclear New&quot;</bucket>
              <bucket>&quot;Nuclear Old&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[federated.0b38ofp1aw3qe718dqabr05dqt0h].[none:Scenario:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;low-day-flexible-charging&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;low-day-inflexible-charging&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0b38ofp1aw3qe718dqabr05dqt0h].[none:Timeblock:nk]'>
            <groupfilter function='member' level='[none:Timeblock:nk]' member='&quot;t1&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0b38ofp1aw3qe718dqabr05dqt0h].[none:Timeblock:nk]</column>
            <column>[federated.0b38ofp1aw3qe718dqabr05dqt0h].[none:Scenario:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[federated.0b38ofp1aw3qe718dqabr05dqt0h].[sum:Inflexible Load (copy):qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0b38ofp1aw3qe718dqabr05dqt0h].[sum:Inflexible Load (copy):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0b38ofp1aw3qe718dqabr05dqt0h].[none:Resource:nk]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0b38ofp1aw3qe718dqabr05dqt0h].[sum:Inflexible Load (copy):qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text' />
            <encodings>
              <text column='[federated.0b38ofp1aw3qe718dqabr05dqt0h].[sum:Inflexible Load (copy):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0b38ofp1aw3qe718dqabr05dqt0h].[sum:Inflexible Load (copy):qk] + [federated.0b38ofp1aw3qe718dqabr05dqt0h].[sum:Inflexible Load (copy):qk])</rows>
        <cols>([federated.0b38ofp1aw3qe718dqabr05dqt0h].[none:Calculation_42502738358603776:nk] / [federated.0b38ofp1aw3qe718dqabr05dqt0h].[none:Scenario:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Generation Mix Numbers'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Generation Mix Numbers</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='tab_dam_generator_power' name='federated.0b38ofp1aw3qe718dqabr05dqt0h' />
          </datasources>
          <datasource-dependencies datasource='federated.0b38ofp1aw3qe718dqabr05dqt0h'>
            <column caption='Weights' datatype='real' name='[Calculation_318911165499232256]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Timeblock]&#13;&#10;  WHEN &quot;t1&quot; THEN 36&#13;&#10;  WHEN &quot;t2&quot; THEN 14&#13;&#10;  WHEN &quot;t3&quot; THEN 9.18368717&#13;&#10;  ELSE 13&#13;&#10;END' />
            </column>
            <column caption='Weighted Load' datatype='real' name='[Calculation_318911165501034498]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Inflexible Load (copy)]*[Calculation_318911165499232256]' />
            </column>
            <column caption='GW Weighted Load' datatype='real' name='[Calculation_832884476106674176]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_318911165501034498] / 1000' />
            </column>
            <column caption='Total Load' datatype='real' name='[Inflexible Load (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_demand_response_load_combined.csv&quot; THEN&#13;&#10;  0*[Value]&#13;&#10;ELSE&#13;&#10;  [Value]&#13;&#10;END' />
            </column>
            <column caption='Resource1' datatype='string' name='[Resource]' role='dimension' type='nominal' />
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Timeblock]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column-instance column='[Resource]' derivation='None' name='[none:Resource:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_832884476106674176]' derivation='Sum' name='[sum:Calculation_832884476106674176:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0b38ofp1aw3qe718dqabr05dqt0h].[sum:Calculation_832884476106674176:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[federated.0b38ofp1aw3qe718dqabr05dqt0h].[none:Resource:nk]</rows>
        <cols>[federated.0b38ofp1aw3qe718dqabr05dqt0h].[none:Scenario:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Generation by Type (Absolute)'>
      <table>
        <view>
          <datasources>
            <datasource caption='tab_dam_generator_power' name='federated.0b38ofp1aw3qe718dqabr05dqt0h' />
          </datasources>
          <datasource-dependencies datasource='federated.0b38ofp1aw3qe718dqabr05dqt0h'>
            <column caption='Weights' datatype='real' name='[Calculation_318911165499232256]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Timeblock]&#13;&#10;  WHEN &quot;t1&quot; THEN 36&#13;&#10;  WHEN &quot;t2&quot; THEN 14&#13;&#10;  WHEN &quot;t3&quot; THEN 9.18368717&#13;&#10;  ELSE 13&#13;&#10;END' />
            </column>
            <column caption='Weighted Load' datatype='real' name='[Calculation_318911165501034498]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Inflexible Load (copy)]*[Calculation_318911165499232256]' />
            </column>
            <column caption='Total Load' datatype='real' name='[Inflexible Load (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_demand_response_load_combined.csv&quot; THEN&#13;&#10;  0*[Value]&#13;&#10;ELSE&#13;&#10;  [Value]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Resource1 (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Resource]' new-bin='true'>
                <bin default-name='true' value='&quot;CCGT New &amp; CCGT Old&quot;'>
                  <value>&quot;CCGT New&quot;</value>
                  <value>&quot;CCGT Old&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Coal new &amp; Coal Old&quot;'>
                  <value>&quot;Coal new&quot;</value>
                  <value>&quot;Coal Old&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Hydro Reservoir, Hydro Run of River, Pumped Hydro Storage&quot;'>
                  <value>&quot;Hydro Reservoir&quot;</value>
                  <value>&quot;Hydro Run of River&quot;</value>
                  <value>&quot;Pumped Hydro Storage&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Nuclear New &amp; Nuclear Old&quot;'>
                  <value>&quot;Nuclear New&quot;</value>
                  <value>&quot;Nuclear Old&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Resource1' datatype='string' name='[Resource]' role='dimension' type='nominal' />
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Timeblock]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_318911165501034498]' derivation='Sum' name='[pcto:sum:Calculation_318911165501034498:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_318911165501034498]' derivation='Sum' name='[sum:Calculation_318911165501034498:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='manual' column='[federated.0b38ofp1aw3qe718dqabr05dqt0h].[Resource1 (group)]' direction='ASC'>
            <dictionary>
              <bucket>%null%</bucket>
              <bucket>&quot;Solar&quot;</bucket>
              <bucket>&quot;Wind&quot;</bucket>
              <bucket>&quot;Backup&quot;</bucket>
              <bucket>&quot;Diesel New&quot;</bucket>
              <bucket>&quot;Diesel Old&quot;</bucket>
              <bucket>&quot;Biomass&quot;</bucket>
              <bucket>&quot;Mini Hydro&quot;</bucket>
              <bucket>&quot;Hydro Run of River&quot;</bucket>
              <bucket>&quot;Hydro Reservoir&quot;</bucket>
              <bucket>&quot;Pumped Hydro Storage&quot;</bucket>
              <bucket>&quot;CCGT New&quot;</bucket>
              <bucket>&quot;CCGT Old&quot;</bucket>
              <bucket>&quot;Coal New&quot;</bucket>
              <bucket>&quot;Coal Old&quot;</bucket>
              <bucket>&quot;Nuclear New&quot;</bucket>
              <bucket>&quot;Nuclear Old&quot;</bucket>
              <bucket>%all%</bucket>
              <bucket>&quot;Batteries&quot;</bucket>
              <bucket>&quot;Hydro Reservoir, Hydro Run of River, Pumped Hydro Storage&quot;</bucket>
              <bucket>&quot;CCGT New &amp; CCGT Old&quot;</bucket>
              <bucket>&quot;Coal new &amp; Coal Old&quot;</bucket>
              <bucket>&quot;Nuclear New &amp; Nuclear Old&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[federated.0b38ofp1aw3qe718dqabr05dqt0h].[none:Resource:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Resource:nk]' />
              <groupfilter function='member' level='[none:Resource:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[federated.0b38ofp1aw3qe718dqabr05dqt0h].[sum:Calculation_318911165501034498:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0b38ofp1aw3qe718dqabr05dqt0h].[sum:Calculation_318911165501034498:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0b38ofp1aw3qe718dqabr05dqt0h].[Resource1 (group)]' />
              <text column='[federated.0b38ofp1aw3qe718dqabr05dqt0h].[pcto:sum:Calculation_318911165501034498:qk:2]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0b38ofp1aw3qe718dqabr05dqt0h].[sum:Calculation_318911165501034498:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <text column='[federated.0b38ofp1aw3qe718dqabr05dqt0h].[sum:Calculation_318911165501034498:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0b38ofp1aw3qe718dqabr05dqt0h].[sum:Calculation_318911165501034498:qk] + [federated.0b38ofp1aw3qe718dqabr05dqt0h].[sum:Calculation_318911165501034498:qk])</rows>
        <cols>[federated.0b38ofp1aw3qe718dqabr05dqt0h].[none:Scenario:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Generation by Type (by Timeblock)'>
      <table>
        <view>
          <datasources>
            <datasource caption='tab_dam_generator_power' name='federated.0b38ofp1aw3qe718dqabr05dqt0h' />
          </datasources>
          <datasource-dependencies datasource='federated.0b38ofp1aw3qe718dqabr05dqt0h'>
            <column caption='Total Load' datatype='real' name='[Inflexible Load (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_demand_response_load_combined.csv&quot; THEN&#13;&#10;  0*[Value]&#13;&#10;ELSE&#13;&#10;  [Value]&#13;&#10;END' />
            </column>
            <column caption='Resource1' datatype='string' name='[Resource]' role='dimension' type='nominal' />
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Timeblock]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column-instance column='[Resource]' derivation='None' name='[none:Resource:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[Timeblock]' derivation='None' name='[none:Timeblock:nk]' pivot='key' type='nominal' />
            <column-instance column='[Inflexible Load (copy)]' derivation='Sum' name='[pcto:sum:Inflexible Load (copy):qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0b38ofp1aw3qe718dqabr05dqt0h].[none:Resource:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Resource:nk]' />
              <groupfilter function='member' level='[none:Resource:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.0b38ofp1aw3qe718dqabr05dqt0h].[none:Resource:nk]' direction='ASC'>
            <dictionary>
              <bucket>%null%</bucket>
              <bucket>&quot;Solar&quot;</bucket>
              <bucket>&quot;Wind&quot;</bucket>
              <bucket>&quot;Backup&quot;</bucket>
              <bucket>&quot;Diesel New&quot;</bucket>
              <bucket>&quot;Diesel Old&quot;</bucket>
              <bucket>&quot;Biomass&quot;</bucket>
              <bucket>&quot;Mini Hydro&quot;</bucket>
              <bucket>&quot;Hydro Run of River&quot;</bucket>
              <bucket>&quot;Hydro Reservoir&quot;</bucket>
              <bucket>&quot;Pumped Hydro Storage&quot;</bucket>
              <bucket>&quot;CCGT New&quot;</bucket>
              <bucket>&quot;CCGT Old&quot;</bucket>
              <bucket>&quot;Coal New&quot;</bucket>
              <bucket>&quot;Coal Old&quot;</bucket>
              <bucket>&quot;Nuclear New&quot;</bucket>
              <bucket>&quot;Nuclear Old&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0b38ofp1aw3qe718dqabr05dqt0h].[none:Resource:nk]' />
              <text column='[federated.0b38ofp1aw3qe718dqabr05dqt0h].[pcto:sum:Inflexible Load (copy):qk:3]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0b38ofp1aw3qe718dqabr05dqt0h].[pcto:sum:Inflexible Load (copy):qk:3]</rows>
        <cols>([federated.0b38ofp1aw3qe718dqabr05dqt0h].[none:Timeblock:nk] / [federated.0b38ofp1aw3qe718dqabr05dqt0h].[none:Scenario:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Generation by Type (by Timeblock) (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='tab_dam_generator_power' name='federated.0b38ofp1aw3qe718dqabr05dqt0h' />
          </datasources>
          <datasource-dependencies datasource='federated.0b38ofp1aw3qe718dqabr05dqt0h'>
            <column caption='Total Load' datatype='real' name='[Inflexible Load (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_demand_response_load_combined.csv&quot; THEN&#13;&#10;  0*[Value]&#13;&#10;ELSE&#13;&#10;  [Value]&#13;&#10;END' />
            </column>
            <column caption='Resource1' datatype='string' name='[Resource]' role='dimension' type='nominal' />
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Timeblock]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column-instance column='[Resource]' derivation='None' name='[none:Resource:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[Timeblock]' derivation='None' name='[none:Timeblock:nk]' pivot='key' type='nominal' />
            <column-instance column='[Inflexible Load (copy)]' derivation='Sum' name='[pcto:sum:Inflexible Load (copy):qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0b38ofp1aw3qe718dqabr05dqt0h].[none:Resource:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Resource:nk]' />
              <groupfilter function='member' level='[none:Resource:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.0b38ofp1aw3qe718dqabr05dqt0h].[none:Resource:nk]' direction='ASC'>
            <dictionary>
              <bucket>%null%</bucket>
              <bucket>&quot;Solar&quot;</bucket>
              <bucket>&quot;Wind&quot;</bucket>
              <bucket>&quot;Backup&quot;</bucket>
              <bucket>&quot;Diesel New&quot;</bucket>
              <bucket>&quot;Diesel Old&quot;</bucket>
              <bucket>&quot;Biomass&quot;</bucket>
              <bucket>&quot;Mini Hydro&quot;</bucket>
              <bucket>&quot;Hydro Run of River&quot;</bucket>
              <bucket>&quot;Hydro Reservoir&quot;</bucket>
              <bucket>&quot;Pumped Hydro Storage&quot;</bucket>
              <bucket>&quot;CCGT New&quot;</bucket>
              <bucket>&quot;CCGT Old&quot;</bucket>
              <bucket>&quot;Coal New&quot;</bucket>
              <bucket>&quot;Coal Old&quot;</bucket>
              <bucket>&quot;Nuclear New&quot;</bucket>
              <bucket>&quot;Nuclear Old&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0b38ofp1aw3qe718dqabr05dqt0h].[none:Resource:nk]' />
              <text column='[federated.0b38ofp1aw3qe718dqabr05dqt0h].[pcto:sum:Inflexible Load (copy):qk:3]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0b38ofp1aw3qe718dqabr05dqt0h].[pcto:sum:Inflexible Load (copy):qk:3]</rows>
        <cols>([federated.0b38ofp1aw3qe718dqabr05dqt0h].[none:Scenario:nk] / [federated.0b38ofp1aw3qe718dqabr05dqt0h].[none:Timeblock:nk])</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Generation by Type (Summary)'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='89375' id='5' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='89375' id='3' type='layout-basic' w='98400' x='800' y='1000'>
              <zone h='89375' id='1' name='Generation by Type (by Timeblock)' w='49200' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='89375' id='9' name='Generation by Type (Absolute)' w='49200' x='50000' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='8625' id='8' type='layout-flow' w='98400' x='800' y='90375'>
            <zone h='8625' id='6' name='Generation by Type (by Timeblock)' pane-specification-id='0' param='[federated.0b38ofp1aw3qe718dqabr05dqt0h].[none:Resource:nk]' type='color' w='98400' x='800' y='90375'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Generation by Type (Absolute)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='6' param='[federated.0b38ofp1aw3qe718dqabr05dqt0h].[Resource1 (group)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0b38ofp1aw3qe718dqabr05dqt0h].[Resource1 (group)]</field>
            <field>[federated.0b38ofp1aw3qe718dqabr05dqt0h].[none:Scenario:nk]</field>
            <field>[federated.0b38ofp1aw3qe718dqabr05dqt0h].[none:timeblock:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Generation by Type (by Timeblock)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0b38ofp1aw3qe718dqabr05dqt0h].[none:Resource:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0b38ofp1aw3qe718dqabr05dqt0h].[none:Resource:nk]</field>
            <field>[federated.0b38ofp1aw3qe718dqabr05dqt0h].[none:Scenario:nk]</field>
            <field>[federated.0b38ofp1aw3qe718dqabr05dqt0h].[none:Timeblock:nk]</field>
            <field>[federated.0b38ofp1aw3qe718dqabr05dqt0h].[none:timeblock:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Generation by Type (by Timeblock) (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0b38ofp1aw3qe718dqabr05dqt0h].[none:Resource:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0b38ofp1aw3qe718dqabr05dqt0h].[none:Resource:nk]</field>
            <field>[federated.0b38ofp1aw3qe718dqabr05dqt0h].[none:Scenario:nk]</field>
            <field>[federated.0b38ofp1aw3qe718dqabr05dqt0h].[none:Timeblock:nk]</field>
            <field>[federated.0b38ofp1aw3qe718dqabr05dqt0h].[none:timeblock:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Dispatch'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0b38ofp1aw3qe718dqabr05dqt0h].[none:Timeblock:nk]' type='filter' />
            <card pane-specification-id='2' param='[federated.0b38ofp1aw3qe718dqabr05dqt0h].[:Measure Names]' type='color' />
            <card pane-specification-id='1' param='[federated.0b38ofp1aw3qe718dqabr05dqt0h].[Resource1 (group) 1]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0b38ofp1aw3qe718dqabr05dqt0h].[Resource1 (group) 1]</field>
            <field>[federated.0b38ofp1aw3qe718dqabr05dqt0h].[none:Attribute:nk]</field>
            <field>[federated.0b38ofp1aw3qe718dqabr05dqt0h].[none:Calculation_42502738358603776:nk]</field>
            <field>[federated.0b38ofp1aw3qe718dqabr05dqt0h].[none:Scenario:nk]</field>
            <field>[federated.0b38ofp1aw3qe718dqabr05dqt0h].[none:Timeblock:nk]</field>
            <field>[federated.0b38ofp1aw3qe718dqabr05dqt0h].[none:timeblock:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Dispatch (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0b38ofp1aw3qe718dqabr05dqt0h].[none:Timeblock:nk]' type='filter' />
            <card pane-specification-id='1' param='[federated.0b38ofp1aw3qe718dqabr05dqt0h].[none:Resource:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0b38ofp1aw3qe718dqabr05dqt0h].[none:Attribute:nk]</field>
            <field>[federated.0b38ofp1aw3qe718dqabr05dqt0h].[none:Calculation_42502738358603776:nk]</field>
            <field>[federated.0b38ofp1aw3qe718dqabr05dqt0h].[none:Resource:nk]</field>
            <field>[federated.0b38ofp1aw3qe718dqabr05dqt0h].[none:Scenario:nk]</field>
            <field>[federated.0b38ofp1aw3qe718dqabr05dqt0h].[none:Timeblock:nk]</field>
            <field>[federated.0b38ofp1aw3qe718dqabr05dqt0h].[none:timeblock:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='Generation by Type (Summary)'>
      <viewpoints>
        <viewpoint name='Generation by Type (Absolute)'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Generation by Type (by Timeblock)'>
          <zoom type='entire-view' />
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='vertical'>
                <node-reference>
                  <axis>[federated.0b38ofp1aw3qe718dqabr05dqt0h].[pcto:sum:Inflexible Load (copy):qk:3]</axis>
                </node-reference>
                <page-reference />
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
          <highlight>
            <color-one-way>
              <field>[federated.0b38ofp1aw3qe718dqabr05dqt0h].[none:Resource:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='worksheet' maximized='true' name='Generation Mix Numbers'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0b38ofp1aw3qe718dqabr05dqt0h].[none:Resource:nk]</field>
            <field>[federated.0b38ofp1aw3qe718dqabr05dqt0h].[none:Scenario:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dispatch' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dispatch (2)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Generation Mix Numbers' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Generation by Type (Absolute)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Generation by Type (Summary)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Generation by Type (by Timeblock)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Generation by Type (by Timeblock) (2)' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
