<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20194.20.0221.0754                               -->
<workbook original-version='18.1' source-build='2019.4.4 (20194.20.0221.0754)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='tab_dam_generator_power_combined' inline='true' name='federated.0m2ojda1ih48r312ma38r1hlijh9' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='tab_dam_generator_power_combined' name='textscan.0yqfx1x1ihmfyd180dyq61xv4d9s'>
            <connection class='textscan' directory='D:/Research-Local/8-23-2019-power-systems/simulation_outputs/combined-outputs/default_data' filename='tab_dam_generator_power_combined.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation all='true' name='tab_dam_generator_power_combined.csv+' type='union'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='Zone' />
            <column datatype='string' name='Attribute' />
            <column datatype='real' name='Value' />
            <column datatype='string' name='Timeblock' />
            <column datatype='string' name='Scenario' />
            <column datatype='string' name='Resource' />
            <column datatype='string' name='Table Name' />
          </columns>
          <relation connection='textscan.0yqfx1x1ihmfyd180dyq61xv4d9s' name='tab_dam_demand_response_load_combined.csv' table='[tab_dam_demand_response_load_combined#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='Zone' ordinal='0' />
              <column datatype='string' name='Attribute' ordinal='1' />
              <column datatype='real' name='Value' ordinal='2' />
              <column datatype='string' name='Timeblock' ordinal='3' />
              <column datatype='string' name='Scenario' ordinal='4' />
            </columns>
          </relation>
          <relation connection='textscan.0yqfx1x1ihmfyd180dyq61xv4d9s' name='tab_dam_generator_power_combined.csv' table='[tab_dam_generator_power_combined#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='Resource' ordinal='0' />
              <column datatype='integer' name='Zone' ordinal='1' />
              <column datatype='string' name='Attribute' ordinal='2' />
              <column datatype='real' name='Value' ordinal='3' />
              <column datatype='string' name='Timeblock' ordinal='4' />
              <column datatype='string' name='Scenario' ordinal='5' />
            </columns>
          </relation>
          <relation connection='textscan.0yqfx1x1ihmfyd180dyq61xv4d9s' name='tab_dam_loads_combined.csv' table='[tab_dam_loads_combined#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='Zone' ordinal='0' />
              <column datatype='string' name='Attribute' ordinal='1' />
              <column datatype='real' name='Value' ordinal='2' />
              <column datatype='string' name='Timeblock' ordinal='3' />
              <column datatype='string' name='Scenario' ordinal='4' />
            </columns>
          </relation>
          <relation connection='textscan.0yqfx1x1ihmfyd180dyq61xv4d9s' name='tab_dam_prices_combined.csv' table='[tab_dam_prices_combined#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='Zone' ordinal='0' />
              <column datatype='string' name='Attribute' ordinal='1' />
              <column datatype='real' name='Value' ordinal='2' />
              <column datatype='string' name='Timeblock' ordinal='3' />
              <column datatype='string' name='Scenario' ordinal='4' />
            </columns>
          </relation>
          <relation connection='textscan.0yqfx1x1ihmfyd180dyq61xv4d9s' name='tab_dam_storage_unit_soc_combined.csv' table='[tab_dam_storage_unit_soc_combined#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='Resource' ordinal='0' />
              <column datatype='integer' name='Zone' ordinal='1' />
              <column datatype='string' name='Attribute' ordinal='2' />
              <column datatype='real' name='Value' ordinal='3' />
              <column datatype='string' name='Timeblock' ordinal='4' />
              <column datatype='string' name='Scenario' ordinal='5' />
            </columns>
          </relation>
          <relation connection='textscan.0yqfx1x1ihmfyd180dyq61xv4d9s' name='tab_dam_storage_unit_power_combined.csv' table='[tab_dam_storage_unit_power_combined#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='Resource' ordinal='0' />
              <column datatype='integer' name='Zone' ordinal='1' />
              <column datatype='string' name='Attribute' ordinal='2' />
              <column datatype='real' name='Value' ordinal='3' />
              <column datatype='string' name='Timeblock' ordinal='4' />
              <column datatype='string' name='Scenario' ordinal='5' />
            </columns>
          </relation>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[tab_dam_generator_power_combined.csv+]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Zone</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Zone]</local-name>
            <parent-name>[tab_dam_generator_power_combined.csv+]</parent-name>
            <remote-alias>Zone</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Attribute</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Attribute]</local-name>
            <parent-name>[tab_dam_generator_power_combined.csv+]</parent-name>
            <remote-alias>Attribute</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Value]</local-name>
            <parent-name>[tab_dam_generator_power_combined.csv+]</parent-name>
            <remote-alias>Value</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Timeblock</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Timeblock]</local-name>
            <parent-name>[tab_dam_generator_power_combined.csv+]</parent-name>
            <remote-alias>Timeblock</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Scenario</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Scenario]</local-name>
            <parent-name>[tab_dam_generator_power_combined.csv+]</parent-name>
            <remote-alias>Scenario</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Resource</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Resource]</local-name>
            <parent-name>[tab_dam_generator_power_combined.csv+]</parent-name>
            <remote-alias>Resource</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Table Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Table Name]</local-name>
            <parent-name>[tab_dam_generator_power_combined.csv+]</parent-name>
            <remote-alias>Table Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Charging Time' datatype='string' name='[Calculation_1086493432799272960]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-evening-&quot;) THEN&#13;&#10;  &quot;12-6 PM&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-morning&quot;) THEN&#13;&#10;  &quot;12-6 AM&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
      </column>
      <column caption='Charging Type' datatype='string' name='[Calculation_1086493432799367169]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-flexible&quot;) THEN&#13;&#10;  &quot;Flexible&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-inflexible&quot;) THEN&#13;&#10;  &quot;Inflexible&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
      </column>
      <column caption='EV Adoption Level' datatype='string' name='[Calculation_1086493432800079874]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;low-&quot;) THEN&#13;&#10;  &quot;Low&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;med-&quot;) THEN&#13;&#10;  &quot;Med&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;high-&quot;) THEN&#13;&#10;  &quot;High&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
      </column>
      <column caption='Representative Days' datatype='datetime' name='[Calculation_1086493432800321539]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='IF [Timeblock]==&quot;t1&quot; THEN DATEPARSE(&quot;dd.MMMM.yyyy&quot;,&quot;21.April.2037&quot;)&#13;&#10;ELSEIF [Timeblock]==&quot;t2&quot; THEN DATEPARSE(&quot;dd.MMMM.yyyy&quot;,&quot;15.June.2037&quot;)&#13;&#10;ELSEIF [Timeblock]==&quot;t3&quot; THEN DATEPARSE(&quot;dd.MMMM.yyyy&quot;,&quot;13.October.2037&quot;)&#13;&#10;ELSEIF [Timeblock]==&quot;t4&quot; THEN DATEPARSE(&quot;dd.MMMM.yyyy&quot;,&quot;12.December.2037&quot;)&#13;&#10;END' />
      </column>
      <column caption='Time Interval' datatype='string' name='[Calculation_1086493432800645124]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Timeblock]==&quot;t1&quot; THEN&#13;&#10;  [Attribute]&#13;&#10;ELSEIF [Timeblock]==&quot;t2&quot; THEN&#13;&#10;  &quot;t&quot;+STR(INT(RIGHT([Attribute],LEN([Attribute])-1)))&#13;&#10;ELSEIF [Timeblock]==&quot;t3&quot; THEN&#13;&#10;  &quot;t&quot;+STR(INT(RIGHT([Attribute],LEN([Attribute])-1)))&#13;&#10;ELSE&#13;&#10;  &quot;t&quot;+STR(INT(RIGHT([Attribute],LEN([Attribute])-1)))&#13;&#10;END' />
      </column>
      <column caption='Net Generation [MW]' datatype='real' name='[Calculation_202099068255866880]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_generator_power_combined.csv&quot; THEN&#13;&#10;  IF [Resource]==&quot;Curtailment&quot; THEN&#13;&#10;    -1*Value&#13;&#10;  ELSEIF [Resource]==&quot;Solar&quot; THEN&#13;&#10;    0*[Value]&#13;&#10;  ELSEIF [Resource]==&quot;Wind&quot; THEN&#13;&#10;    0*[Value]&#13;&#10;  ELSE&#13;&#10;    [Value]&#13;&#10;  END&#13;&#10;&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; THEN&#13;&#10;  IF [Value]&lt;0 THEN&#13;&#10;    0*[Value]&#13;&#10;  ELSE&#13;&#10;    [Value]&#13;&#10;  END&#13;&#10;END' />
      </column>
      <column caption='VRE Addition' datatype='string' name='[Calculation_803611097201504256]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;wind&quot;) THEN&#13;&#10;  &quot;Added Wind&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;solar&quot;) THEN&#13;&#10;  &quot;Added Solar&quot;&#13;&#10;ELSE&#13;&#10;  &quot;Default VRE&quot;&#13;&#10;END' />
      </column>
      <column caption='Generation for Load [MW]' datatype='real' name='[Calculation_884112924427558912]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_generator_power_combined.csv&quot; THEN&#13;&#10;  IF [Resource]==&quot;Curtailment&quot; THEN&#13;&#10;    -1*Value&#13;&#10;  ELSE&#13;&#10;    [Value]&#13;&#10;  END&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; THEN&#13;&#10;  [Value]&#13;&#10;END' />
      </column>
      <column caption='Generation Labels' datatype='string' name='[Calculation_884112924428046337]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_generator_power_combined.csv&quot; THEN&#13;&#10;  [Resource]&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&gt;=0 THEN&#13;&#10;  [Resource]&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&lt;0 THEN&#13;&#10;   [Resource]+&quot; Charging&quot;&#13;&#10;END' />
      </column>
      <column caption='Weighted Generation for Load [MW]' datatype='real' name='[Calculation_884112924430045186]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_931963670410043401]*[Calculation_884112924427558912]' />
      </column>
      <column caption='Charging [MW]' datatype='real' name='[Calculation_884112924457828355]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&lt;0 THEN&#13;&#10;  [Value]&#13;&#10;ELSE&#13;&#10;  0&#13;&#10;END' />
      </column>
      <column caption='Date Time' datatype='datetime' name='[Calculation_889179474267987968]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATEADD(&apos;hour&apos;,INT(RIGHT([Calculation_1086493432800645124],LEN([Calculation_1086493432800645124])-1))-1,[Calculation_1086493432800321539])' />
      </column>
      <column caption='Price' datatype='real' name='[Calculation_889179474271539201]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_prices_combined.csv&quot; THEN&#13;&#10;  [Value]&#13;&#10;END' />
      </column>
      <column caption='Storage Level' datatype='real' name='[Calculation_889179474278793218]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_storage_unit_soc_combined.csv&quot; THEN&#13;&#10;  [Value]&#13;&#10;END' />
      </column>
      <column caption='Max Storage Level' datatype='real' name='[Calculation_889179474279444483]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_storage_unit_soc_combined.csv&quot; THEN&#13;&#10;  {FIXED [Resource],[Zone]: MAX([Value])}&#13;&#10;END' />
      </column>
      <column caption='State of Charge' datatype='real' name='[Calculation_889179474279563268]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_889179474278793218]/[Calculation_889179474279444483]' />
      </column>
      <column caption='Weighted State of Charge' datatype='real' name='[Calculation_889179474279690245]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='Sum([Calculation_889179474279563268]*[Calculation_889179474279444483])/SUM([Calculation_889179474279444483])' />
      </column>
      <column caption='Storage Label' datatype='string' name='[Calculation_889179474280439814]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_storage_unit_soc_combined.csv&quot; THEN&#13;&#10;  [Resource]&#13;&#10;END' />
      </column>
      <column caption='Total Generation [MW]' datatype='real' name='[Calculation_918452871620472832]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_generator_power_combined.csv&quot; THEN&#13;&#10;  IF [Resource]==&quot;Unmet Demand&quot; OR [Resource]==&quot;Curtailment&quot; THEN&#13;&#10;    0*[Value]&#13;&#10;  ELSE&#13;&#10;    [Value]&#13;&#10;  END&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&gt;=0 THEN&#13;&#10;  [Value]&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&lt;0 THEN&#13;&#10;  0*[Value]&#13;&#10;END' />
      </column>
      <column caption='Inflexible Load [MW]' datatype='real' name='[Calculation_931963670409289734]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_loads_combined.csv&quot; THEN&#13;&#10;  [Value]&#13;&#10;ELSE&#13;&#10;  0&#13;&#10;END' />
      </column>
      <column caption='Flexible Load [MW]' datatype='real' name='[Calculation_931963670409551879]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_demand_response_load_combined.csv&quot; THEN&#13;&#10;  [Value]&#13;&#10;ELSE&#13;&#10;  0&#13;&#10;END' />
      </column>
      <column caption='Load Labels' datatype='string' name='[Calculation_931963670409670664]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_loads_combined.csv&quot; THEN&#13;&#10;  &quot;Inflexible&quot;&#13;&#10;ELSEIF [Table Name]==&quot;tab_dam_demand_response_load_combined.csv&quot; THEN&#13;&#10;  &quot;Flexible&quot;&#13;&#10;ELSEIF [Table Name]==&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&lt;0 THEN&#13;&#10;  &quot;Charging&quot;&#13;&#10;END' />
      </column>
      <column caption='Weights' datatype='real' name='[Calculation_931963670410043401]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Timeblock]&#13;&#10;  WHEN &quot;t1&quot; THEN 36 &#13;&#10;  WHEN &quot;t2&quot; THEN 14&#13;&#10;  WHEN &quot;t3&quot; THEN 9.18368717&#13;&#10;  WHEN &quot;t4&quot; THEN 13&#13;&#10;END' />
      </column>
      <column caption='Total Load [MW]' datatype='real' name='[Calculation_931963670410522634]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_931963670409551879]+[Calculation_931963670409289734]-[Calculation_884112924457828355]' />
      </column>
      <column caption='Weighted Load [MW]' datatype='real' name='[Calculation_931963670410706955]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_931963670410043401]*[Calculation_931963670410522634]' />
      </column>
      <column caption='Generation Labels (group)' datatype='string' name='[Generation Labels (group) (copy)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Calculation_884112924428046337]' new-bin='true'>
          <bin default-name='false' value='&quot;Batteries&quot;'>
            <value>&quot;Batteries&quot;</value>
            <value>&quot;Batteries Charging&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;CCGT&quot;'>
            <value>&quot;CCGT New&quot;</value>
            <value>&quot;CCGT Old&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Coal&quot;'>
            <value>&quot;Coal new&quot;</value>
            <value>&quot;Coal Old&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Diesel&quot;'>
            <value>&quot;Backup&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Hydro&quot;'>
            <value>&quot;Hydro Reservoir&quot;</value>
            <value>&quot;Hydro Reservoir Charging&quot;</value>
            <value>&quot;Hydro Run of River&quot;</value>
            <value>&quot;Pumped Hydro Storage&quot;</value>
            <value>&quot;Pumped Hydro Storage Charging&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Nuclear&quot;'>
            <value>&quot;Nuclear New&quot;</value>
            <value>&quot;Nuclear Old&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Other &quot;'>
            <value>&quot;Biomass&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Solar&quot;'>
            <value>&quot;Curtailment&quot;</value>
            <value>&quot;Solar&quot;</value>
          </bin>
        </calculation>
      </column>
      <column caption='Generation Labels with Charging (group)' datatype='string' name='[Generation Labels (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Calculation_884112924428046337]' new-bin='true'>
          <bin default-name='false' value='&quot;CCGT&quot;'>
            <value>&quot;CCGT New&quot;</value>
            <value>&quot;CCGT Old&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Coal&quot;'>
            <value>&quot;Coal new&quot;</value>
            <value>&quot;Coal Old&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Diesel&quot;'>
            <value>&quot;Backup&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Hydro&quot;'>
            <value>&quot;Hydro Reservoir&quot;</value>
            <value>&quot;Hydro Run of River&quot;</value>
            <value>&quot;Pumped Hydro Storage&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Nuclear&quot;'>
            <value>&quot;Nuclear New&quot;</value>
            <value>&quot;Nuclear Old&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Other &quot;'>
            <value>&quot;Biomass&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Solar&quot;'>
            <value>&quot;Curtailment&quot;</value>
            <value>&quot;Solar&quot;</value>
          </bin>
        </calculation>
      </column>
      <column caption='Generation for Load (no charging) [MW]' datatype='real' name='[Generation for Load [MW]] (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_generator_power_combined.csv&quot; THEN&#13;&#10;  IF [Resource]==&quot;Curtailment&quot; THEN&#13;&#10;    -1*Value&#13;&#10;  ELSE&#13;&#10;    [Value]&#13;&#10;  END&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; THEN&#13;&#10;  IF [Value]&lt;0 THEN&#13;&#10;    0*[Value]&#13;&#10;  ELSE&#13;&#10;    [Value]&#13;&#10;  END&#13;&#10;END' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='5-day time period' datatype='string' name='[Representative Days (copy)]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Timeblock]==&quot;t1&quot; THEN &quot;April 21-25&quot;&#13;&#10;ELSEIF [Timeblock]==&quot;t2&quot; THEN &quot;June 15-19&quot;&#13;&#10;ELSEIF [Timeblock]==&quot;t3&quot; THEN &quot;October 13-17&quot;&#13;&#10;ELSEIF [Timeblock]==&quot;t4&quot; THEN &quot;December 12-16&quot;&#13;&#10;END' />
      </column>
      <column datatype='string' name='[Resource]' role='dimension' type='nominal' />
      <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
      <column datatype='real' name='[Value]' role='measure' type='quantitative' />
      <column caption='Weighted Generation for Dispatch [MW]' datatype='real' name='[Weighted Generation for Load [MW]] (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_931963670410043401]*[Calculation_918452871620472832]' />
      </column>
      <column aggregation='Sum' datatype='integer' name='[Zone]' role='dimension' type='ordinal' />
      <column-instance column='[Calculation_889179474271539201]' derivation='Avg' name='[avg:Calculation_889179474271539201:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_889179474271539201]' derivation='Max' name='[max:Calculation_889179474271539201:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_889179474271539201]' derivation='Min' name='[min:Calculation_889179474271539201:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_884112924428046337]' derivation='None' name='[none:Calculation_884112924428046337:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_889179474280439814]' derivation='None' name='[none:Calculation_889179474280439814:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_931963670409670664]' derivation='None' name='[none:Calculation_931963670409670664:nk]' pivot='key' type='nominal' />
      <column-instance column='[Resource]' derivation='None' name='[none:Resource:nk]' pivot='key' type='nominal' />
      <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_884112924430045186]' derivation='Sum' name='[pcto:sum:Calculation_884112924430045186:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_884112924430045186]' derivation='Sum' name='[pcto:sum:Calculation_884112924430045186:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_202099068255866880]' derivation='Sum' name='[sum:Calculation_202099068255866880:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_884112924427558912]' derivation='Sum' name='[sum:Calculation_884112924427558912:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_884112924430045186]' derivation='Sum' name='[sum:Calculation_884112924430045186:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_884112924457828355]' derivation='Sum' name='[sum:Calculation_884112924457828355:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_889179474271539201]' derivation='Sum' name='[sum:Calculation_889179474271539201:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_889179474278793218]' derivation='Sum' name='[sum:Calculation_889179474278793218:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_889179474279444483]' derivation='Sum' name='[sum:Calculation_889179474279444483:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_889179474279563268]' derivation='Sum' name='[sum:Calculation_889179474279563268:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_918452871620472832]' derivation='Sum' name='[sum:Calculation_918452871620472832:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_931963670409289734]' derivation='Sum' name='[sum:Calculation_931963670409289734:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_931963670409551879]' derivation='Sum' name='[sum:Calculation_931963670409551879:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_931963670410043401]' derivation='Sum' name='[sum:Calculation_931963670410043401:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_931963670410522634]' derivation='Sum' name='[sum:Calculation_931963670410522634:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_931963670410706955]' derivation='Sum' name='[sum:Calculation_931963670410706955:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Generation for Load [MW]] (copy)]' derivation='Sum' name='[sum:Generation for Load [MW]] (copy):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Value]' derivation='Sum' name='[sum:Value:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Weighted Generation for Load [MW]] (copy)]' derivation='Sum' name='[sum:Weighted Generation for Load [MW]] (copy):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_889179474279690245]' derivation='User' name='[usr:Calculation_889179474279690245:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.5' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Calculation_884112924428046337:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Coal Old&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Biomass&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hydro Run of River&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Curtailment&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;CCGT New&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Unmet Demand&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Backup&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pumped Hydro Storage Charging&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;CCGT Old&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nuclear New&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nuclear Old&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Solar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Wind&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hydro Reservoir&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Coal new&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Batteries&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pumped Hydro Storage&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hydro Reservoir Charging&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Batteries Charging&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Resource:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Curtailment&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;CCGT New&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nuclear Old&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hydro Reservoir&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;CCGT Old&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Backup&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Wind&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Coal new&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pumped Hydro Storage&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Solar&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hydro Run of River&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Unmet Demand&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Coal Old&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Batteries&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nuclear New&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Biomass&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_931963670409670664:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Charging&quot;</bucket>
            </map>
            <map to='#5c6068'>
              <bucket>&quot;Inflexible&quot;</bucket>
            </map>
            <map to='#b3b7b8'>
              <bucket>&quot;Flexible&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Scenario:nk]' type='palette'>
            <map to='#000000'>
              <bucket>&quot;default-L-H-8-1275&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;real-high-morning-L-H-8-1275-solar-added-flexible&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;real-med-evening-L-H-8-1275-wind-added-flexible&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;default-L-H-8-1275-flexible&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;real-high-evening-L-H-8-1275-flexible&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;real-low-morning-L-H-8-1275-solar-added-flexible&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;real-high-evening-L-H-8-1275-wind-added-flexible&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;real-med-evening-L-H-8-1275-flexible&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;real-low-evening-L-H-8-1275-flexible&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;real-med-morning-L-H-8-1275-solar-added-flexible&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;real-high-morning-L-H-8-1275-solar-added-inflexible&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;real-med-evening-L-H-8-1275-wind-added-inflexible&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;real-high-evening-L-H-8-1275-wind-added-inflexible&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;real-med-evening-L-H-8-1275-inflexible&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;real-low-morning-L-H-8-1275-flexible&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;real-high-evening-L-H-8-1275-inflexible&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;real-low-morning-L-H-8-1275-solar-added-inflexible&quot;</bucket>
            </map>
            <map to='#ae123a'>
              <bucket>&quot;med-night-L-H-8-1275-inflexible&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;real-low-evening-L-H-8-1275-wind-added-flexible&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;real-high-morning-L-H-8-1275-flexible&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;real-med-evening-L-H-8-1275-solar-added-flexible&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;real-low-evening-L-H-8-1275-inflexible&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;real-med-morning-L-H-8-1275-solar-added-inflexible&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;real-low-evening-L-H-8-1275-solar-added-flexible&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;real-med-morning-L-H-8-1275-wind-added-flexible&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;real-low-evening-L-H-8-1275-wind-added-inflexible&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;real-low-morning-L-H-8-1275-inflexible&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;real-high-morning-L-H-8-1275-wind-added-flexible&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;real-med-morning-L-H-8-1275-flexible&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;real-high-morning-L-H-8-1275-inflexible&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;real-med-evening-L-H-8-1275-solar-added-inflexible&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;real-high-evening-L-H-8-1275-solar-added-flexible&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;real-low-morning-L-H-8-1275-wind-added-flexible&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;real-low-evening-L-H-8-1275-solar-added-inflexible&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;real-med-morning-L-H-8-1275-wind-added-inflexible&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;real-high-morning-L-H-8-1275-wind-added-inflexible&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;real-med-morning-L-H-8-1275-inflexible&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;real-high-evening-L-H-8-1275-solar-added-inflexible&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;real-low-morning-L-H-8-1275-wind-added-inflexible&quot;</bucket>
            </map>
            <map to='#ffbeb2'>
              <bucket>&quot;med-night-L-H-8-1275-flexible&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#000000'>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_931963670409289734:qk]&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_889179474279444483:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Value:qk]&quot;</bucket>
            </map>
            <map to='#767f8b'>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_931963670410522634:qk]&quot;</bucket>
            </map>
            <map to='#767f8b'>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_931963670410706955:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_889179474278793218:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_884112924457828355:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[usr:Calculation_889179474279690245:qk]&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[avg:Calculation_889179474271539201:qk]&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[max:Calculation_889179474271539201:qk]&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[min:Calculation_889179474271539201:qk]&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_889179474271539201:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_931963670409551879:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Weighted Generation for Load [MW]] (copy):qk]&quot;</bucket>
            </map>
            <map to='#d3d3d3'>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_918452871620472832:qk]&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_931963670410043401:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[pcto:sum:Calculation_884112924430045186:qk:2]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[pcto:sum:Calculation_884112924430045186:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_202099068255866880:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_884112924427558912:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_884112924430045186:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Generation for Load [MW]] (copy):qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_889179474279563268:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Generation Labels (group)]' type='palette'>
            <map to='#000000'>
              <bucket>&quot;Diesel&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Coal Old&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hydro&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Biomass&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Wind&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Batteries&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hydro Run of River&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;CCGT New&quot;</bucket>
            </map>
            <map to='#92c0df'>
              <bucket>&quot;Hydro Reservoir Charging&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Coal&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Backup&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nuclear&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;CCGT Old&quot;</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>&quot;Pumped Hydro Storage Charging&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nuclear New&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Other &quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nuclear Old&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Resource&quot;</bucket>
            </map>
            <map to='#d5d5d5'>
              <bucket>&quot;Batteries Charging&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hydro Reservoir&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Unmet Demand&quot;</bucket>
            </map>
            <map to='#f0bd27'>
              <bucket>&quot;Solar&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Coal new&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;CCGT&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Curtailment&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pumped Hydro Storage&quot;</bucket>
            </map>
            <map to='#ffffff'>
              <bucket>%null%</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_889179474280439814:nk]' type='palette'>
            <map to='#43719f'>
              <bucket>&quot;Pumped Hydro Storage&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>&quot;Hydro Reservoir&quot;</bucket>
            </map>
            <map to='#d3d3d3'>
              <bucket>&quot;Batteries&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Generation Labels (group) (copy)]' type='palette'>
            <map to='#000000'>
              <bucket>&quot;Diesel&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hydro&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Wind&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Batteries&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Coal&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nuclear&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;Unmet Demand&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Other &quot;</bucket>
            </map>
            <map to='#f0bd27'>
              <bucket>&quot;Solar&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;CCGT&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Resource&quot;</bucket>
            </map>
            <map to='#ffda66'>
              <bucket>&quot;Curtailment&quot;</bucket>
            </map>
            <map to='#ffffff'>
              <bucket>%null%</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Annual Generation (Absolute) by Type'>
      <table>
        <view>
          <datasources>
            <datasource caption='tab_dam_generator_power_combined' name='federated.0m2ojda1ih48r312ma38r1hlijh9' />
          </datasources>
          <datasource-dependencies datasource='federated.0m2ojda1ih48r312ma38r1hlijh9'>
            <column caption='Charging Time' datatype='string' name='[Calculation_1086493432799272960]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-evening-&quot;) THEN&#13;&#10;  &quot;12-6 PM&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-morning&quot;) THEN&#13;&#10;  &quot;12-6 AM&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='Charging Type' datatype='string' name='[Calculation_1086493432799367169]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-flexible&quot;) THEN&#13;&#10;  &quot;Flexible&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-inflexible&quot;) THEN&#13;&#10;  &quot;Inflexible&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='EV Adoption Level' datatype='string' name='[Calculation_1086493432800079874]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;low-&quot;) THEN&#13;&#10;  &quot;Low&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;med-&quot;) THEN&#13;&#10;  &quot;Med&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;high-&quot;) THEN&#13;&#10;  &quot;High&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='VRE Addition' datatype='string' name='[Calculation_803611097201504256]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;wind&quot;) THEN&#13;&#10;  &quot;Added Wind&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;solar&quot;) THEN&#13;&#10;  &quot;Added Solar&quot;&#13;&#10;ELSE&#13;&#10;  &quot;Default VRE&quot;&#13;&#10;END' />
            </column>
            <column caption='Generation for Load [MW]' datatype='real' name='[Calculation_884112924427558912]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_generator_power_combined.csv&quot; THEN&#13;&#10;  IF [Resource]==&quot;Curtailment&quot; THEN&#13;&#10;    -1*Value&#13;&#10;  ELSE&#13;&#10;    [Value]&#13;&#10;  END&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; THEN&#13;&#10;  [Value]&#13;&#10;END' />
            </column>
            <column caption='Generation Labels' datatype='string' name='[Calculation_884112924428046337]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_generator_power_combined.csv&quot; THEN&#13;&#10;  [Resource]&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&gt;=0 THEN&#13;&#10;  [Resource]&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&lt;0 THEN&#13;&#10;   [Resource]+&quot; Charging&quot;&#13;&#10;END' />
            </column>
            <column caption='Weighted Generation for Load [MW]' datatype='real' name='[Calculation_884112924430045186]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_931963670410043401]*[Calculation_884112924427558912]' />
            </column>
            <column caption='Weights' datatype='real' name='[Calculation_931963670410043401]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Timeblock]&#13;&#10;  WHEN &quot;t1&quot; THEN 36 &#13;&#10;  WHEN &quot;t2&quot; THEN 14&#13;&#10;  WHEN &quot;t3&quot; THEN 9.18368717&#13;&#10;  WHEN &quot;t4&quot; THEN 13&#13;&#10;END' />
            </column>
            <column caption='Generation Labels (group)' datatype='string' name='[Generation Labels (group) (copy)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Calculation_884112924428046337]' new-bin='true'>
                <bin default-name='false' value='&quot;Batteries&quot;'>
                  <value>&quot;Batteries&quot;</value>
                  <value>&quot;Batteries Charging&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;CCGT&quot;'>
                  <value>&quot;CCGT New&quot;</value>
                  <value>&quot;CCGT Old&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Coal&quot;'>
                  <value>&quot;Coal new&quot;</value>
                  <value>&quot;Coal Old&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Diesel&quot;'>
                  <value>&quot;Backup&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Hydro&quot;'>
                  <value>&quot;Hydro Reservoir&quot;</value>
                  <value>&quot;Hydro Reservoir Charging&quot;</value>
                  <value>&quot;Hydro Run of River&quot;</value>
                  <value>&quot;Pumped Hydro Storage&quot;</value>
                  <value>&quot;Pumped Hydro Storage Charging&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Nuclear&quot;'>
                  <value>&quot;Nuclear New&quot;</value>
                  <value>&quot;Nuclear Old&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Other &quot;'>
                  <value>&quot;Biomass&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Solar&quot;'>
                  <value>&quot;Curtailment&quot;</value>
                  <value>&quot;Solar&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='5-day time period' datatype='string' name='[Representative Days (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Timeblock]==&quot;t1&quot; THEN &quot;April 21-25&quot;&#13;&#10;ELSEIF [Timeblock]==&quot;t2&quot; THEN &quot;June 15-19&quot;&#13;&#10;ELSEIF [Timeblock]==&quot;t3&quot; THEN &quot;October 13-17&quot;&#13;&#10;ELSEIF [Timeblock]==&quot;t4&quot; THEN &quot;December 12-16&quot;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Resource]' role='dimension' type='nominal' />
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Timeblock]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1086493432799272960]' derivation='None' name='[none:Calculation_1086493432799272960:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1086493432799367169]' derivation='None' name='[none:Calculation_1086493432799367169:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1086493432800079874]' derivation='None' name='[none:Calculation_1086493432800079874:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_803611097201504256]' derivation='None' name='[none:Calculation_803611097201504256:nk]' pivot='key' type='nominal' />
            <column-instance column='[Representative Days (copy)]' derivation='None' name='[none:Representative Days (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_884112924430045186]' derivation='Sum' name='[pcto:sum:Calculation_884112924430045186:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_884112924430045186]' derivation='Sum' name='[sum:Calculation_884112924430045186:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group) (copy)]' direction='ASC'>
            <dictionary>
              <bucket>%null%</bucket>
              <bucket>&quot;Unmet Demand&quot;</bucket>
              <bucket>&quot;Curtailment&quot;</bucket>
              <bucket>&quot;Solar&quot;</bucket>
              <bucket>&quot;Wind&quot;</bucket>
              <bucket>&quot;Batteries&quot;</bucket>
              <bucket>&quot;Diesel&quot;</bucket>
              <bucket>&quot;Other &quot;</bucket>
              <bucket>&quot;CCGT&quot;</bucket>
              <bucket>&quot;Hydro&quot;</bucket>
              <bucket>&quot;Coal&quot;</bucket>
              <bucket>&quot;Nuclear&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_1086493432799272960:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_1086493432799367169:nk]' member='&quot;Flexible&quot;' />
              <groupfilter function='member' level='[none:Calculation_1086493432799367169:nk]' member='&quot;Inflexible&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_1086493432800079874:nk]' />
          </filter>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;None&quot;</bucket>
              <bucket>&quot;Med&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_803611097201504256:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_803611097201504256:nk]' />
          </filter>
          <filter class='categorical' column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Representative Days (copy):nk]'>
            <groupfilter function='level-members' level='[none:Representative Days (copy):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]'>
            <groupfilter function='level-members' level='[none:Scenario:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]</column>
            <column>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk]</column>
            <column>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk]</column>
            <column>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Representative Days (copy):nk]</column>
            <column>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]</column>
            <column>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_803611097201504256:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0m2ojda1ih48r312ma38r1hlijh9].[pcto:sum:Calculation_884112924430045186:qk:2]' value='p0%' />
            <format attr='width' field='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_803611097201504256:nk]' value='358' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group) (copy)]' />
              <text column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[pcto:sum:Calculation_884112924430045186:qk:2]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_884112924430045186:qk]</rows>
        <cols>([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_803611097201504256:nk] / [federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_803611097201504256:nk]))))</cols>
      </table>
      <simple-id uuid='{98271FCC-EAFA-491F-835D-6B4CE10B71C3}' />
    </worksheet>
    <worksheet name='Annual Generation (Percentage) by Type'>
      <table>
        <view>
          <datasources>
            <datasource caption='tab_dam_generator_power_combined' name='federated.0m2ojda1ih48r312ma38r1hlijh9' />
          </datasources>
          <datasource-dependencies datasource='federated.0m2ojda1ih48r312ma38r1hlijh9'>
            <column caption='Charging Time' datatype='string' name='[Calculation_1086493432799272960]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-evening-&quot;) THEN&#13;&#10;  &quot;12-6 PM&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-morning&quot;) THEN&#13;&#10;  &quot;12-6 AM&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='Charging Type' datatype='string' name='[Calculation_1086493432799367169]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-flexible&quot;) THEN&#13;&#10;  &quot;Flexible&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-inflexible&quot;) THEN&#13;&#10;  &quot;Inflexible&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='EV Adoption Level' datatype='string' name='[Calculation_1086493432800079874]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;low-&quot;) THEN&#13;&#10;  &quot;Low&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;med-&quot;) THEN&#13;&#10;  &quot;Med&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;high-&quot;) THEN&#13;&#10;  &quot;High&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='VRE Addition' datatype='string' name='[Calculation_803611097201504256]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;wind&quot;) THEN&#13;&#10;  &quot;Added Wind&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;solar&quot;) THEN&#13;&#10;  &quot;Added Solar&quot;&#13;&#10;ELSE&#13;&#10;  &quot;Default VRE&quot;&#13;&#10;END' />
            </column>
            <column caption='Generation for Load [MW]' datatype='real' name='[Calculation_884112924427558912]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_generator_power_combined.csv&quot; THEN&#13;&#10;  IF [Resource]==&quot;Curtailment&quot; THEN&#13;&#10;    -1*Value&#13;&#10;  ELSE&#13;&#10;    [Value]&#13;&#10;  END&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; THEN&#13;&#10;  [Value]&#13;&#10;END' />
            </column>
            <column caption='Generation Labels' datatype='string' name='[Calculation_884112924428046337]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_generator_power_combined.csv&quot; THEN&#13;&#10;  [Resource]&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&gt;=0 THEN&#13;&#10;  [Resource]&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&lt;0 THEN&#13;&#10;   [Resource]+&quot; Charging&quot;&#13;&#10;END' />
            </column>
            <column caption='Weighted Generation for Load [MW]' datatype='real' name='[Calculation_884112924430045186]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_931963670410043401]*[Calculation_884112924427558912]' />
            </column>
            <column caption='Weights' datatype='real' name='[Calculation_931963670410043401]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Timeblock]&#13;&#10;  WHEN &quot;t1&quot; THEN 36 &#13;&#10;  WHEN &quot;t2&quot; THEN 14&#13;&#10;  WHEN &quot;t3&quot; THEN 9.18368717&#13;&#10;  WHEN &quot;t4&quot; THEN 13&#13;&#10;END' />
            </column>
            <column caption='Generation Labels (group)' datatype='string' name='[Generation Labels (group) (copy)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Calculation_884112924428046337]' new-bin='true'>
                <bin default-name='false' value='&quot;Batteries&quot;'>
                  <value>&quot;Batteries&quot;</value>
                  <value>&quot;Batteries Charging&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;CCGT&quot;'>
                  <value>&quot;CCGT New&quot;</value>
                  <value>&quot;CCGT Old&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Coal&quot;'>
                  <value>&quot;Coal new&quot;</value>
                  <value>&quot;Coal Old&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Diesel&quot;'>
                  <value>&quot;Backup&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Hydro&quot;'>
                  <value>&quot;Hydro Reservoir&quot;</value>
                  <value>&quot;Hydro Reservoir Charging&quot;</value>
                  <value>&quot;Hydro Run of River&quot;</value>
                  <value>&quot;Pumped Hydro Storage&quot;</value>
                  <value>&quot;Pumped Hydro Storage Charging&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Nuclear&quot;'>
                  <value>&quot;Nuclear New&quot;</value>
                  <value>&quot;Nuclear Old&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Other &quot;'>
                  <value>&quot;Biomass&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Solar&quot;'>
                  <value>&quot;Curtailment&quot;</value>
                  <value>&quot;Solar&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Resource]' role='dimension' type='nominal' />
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Timeblock]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1086493432799272960]' derivation='None' name='[none:Calculation_1086493432799272960:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1086493432799367169]' derivation='None' name='[none:Calculation_1086493432799367169:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1086493432800079874]' derivation='None' name='[none:Calculation_1086493432800079874:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_803611097201504256]' derivation='None' name='[none:Calculation_803611097201504256:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_884112924430045186]' derivation='Sum' name='[pcto:sum:Calculation_884112924430045186:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group) (copy)]' direction='ASC'>
            <dictionary>
              <bucket>%null%</bucket>
              <bucket>&quot;Unmet Demand&quot;</bucket>
              <bucket>&quot;Curtailment&quot;</bucket>
              <bucket>&quot;Solar&quot;</bucket>
              <bucket>&quot;Wind&quot;</bucket>
              <bucket>&quot;Batteries&quot;</bucket>
              <bucket>&quot;Diesel&quot;</bucket>
              <bucket>&quot;Other &quot;</bucket>
              <bucket>&quot;CCGT&quot;</bucket>
              <bucket>&quot;Hydro&quot;</bucket>
              <bucket>&quot;Coal&quot;</bucket>
              <bucket>&quot;Nuclear&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;None&quot;</bucket>
              <bucket>&quot;Med&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0m2ojda1ih48r312ma38r1hlijh9].[pcto:sum:Calculation_884112924430045186:qk:2]' value='p0%' />
            <format attr='width' field='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_803611097201504256:nk]' value='66' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group) (copy)]' />
              <text column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[pcto:sum:Calculation_884112924430045186:qk:2]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0m2ojda1ih48r312ma38r1hlijh9].[pcto:sum:Calculation_884112924430045186:qk:2]</rows>
        <cols>([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_803611097201504256:nk] / [federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_803611097201504256:nk]))))</cols>
      </table>
      <simple-id uuid='{E0FF1331-7B26-4488-BFB2-4036D97C9AF0}' />
    </worksheet>
    <worksheet name='Dispatch with Load'>
      <table>
        <view>
          <datasources>
            <datasource caption='tab_dam_generator_power_combined' name='federated.0m2ojda1ih48r312ma38r1hlijh9' />
          </datasources>
          <datasource-dependencies datasource='federated.0m2ojda1ih48r312ma38r1hlijh9'>
            <column datatype='string' name='[Attribute]' role='dimension' type='nominal' />
            <column caption='Charging Time' datatype='string' name='[Calculation_1086493432799272960]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-evening-&quot;) THEN&#13;&#10;  &quot;12-6 PM&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-morning&quot;) THEN&#13;&#10;  &quot;12-6 AM&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='Charging Type' datatype='string' name='[Calculation_1086493432799367169]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-flexible&quot;) THEN&#13;&#10;  &quot;Flexible&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-inflexible&quot;) THEN&#13;&#10;  &quot;Inflexible&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='EV Adoption Level' datatype='string' name='[Calculation_1086493432800079874]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;low-&quot;) THEN&#13;&#10;  &quot;Low&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;med-&quot;) THEN&#13;&#10;  &quot;Med&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;high-&quot;) THEN&#13;&#10;  &quot;High&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='Representative Days' datatype='datetime' name='[Calculation_1086493432800321539]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF [Timeblock]==&quot;t1&quot; THEN DATEPARSE(&quot;dd.MMMM.yyyy&quot;,&quot;21.April.2037&quot;)&#13;&#10;ELSEIF [Timeblock]==&quot;t2&quot; THEN DATEPARSE(&quot;dd.MMMM.yyyy&quot;,&quot;15.June.2037&quot;)&#13;&#10;ELSEIF [Timeblock]==&quot;t3&quot; THEN DATEPARSE(&quot;dd.MMMM.yyyy&quot;,&quot;13.October.2037&quot;)&#13;&#10;ELSEIF [Timeblock]==&quot;t4&quot; THEN DATEPARSE(&quot;dd.MMMM.yyyy&quot;,&quot;12.December.2037&quot;)&#13;&#10;END' />
            </column>
            <column caption='Time Interval' datatype='string' name='[Calculation_1086493432800645124]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Timeblock]==&quot;t1&quot; THEN&#13;&#10;  [Attribute]&#13;&#10;ELSEIF [Timeblock]==&quot;t2&quot; THEN&#13;&#10;  &quot;t&quot;+STR(INT(RIGHT([Attribute],LEN([Attribute])-1)))&#13;&#10;ELSEIF [Timeblock]==&quot;t3&quot; THEN&#13;&#10;  &quot;t&quot;+STR(INT(RIGHT([Attribute],LEN([Attribute])-1)))&#13;&#10;ELSE&#13;&#10;  &quot;t&quot;+STR(INT(RIGHT([Attribute],LEN([Attribute])-1)))&#13;&#10;END' />
            </column>
            <column caption='VRE Addition' datatype='string' name='[Calculation_803611097201504256]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;wind&quot;) THEN&#13;&#10;  &quot;Added Wind&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;solar&quot;) THEN&#13;&#10;  &quot;Added Solar&quot;&#13;&#10;ELSE&#13;&#10;  &quot;Default VRE&quot;&#13;&#10;END' />
            </column>
            <column caption='Generation for Load [MW]' datatype='real' name='[Calculation_884112924427558912]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_generator_power_combined.csv&quot; THEN&#13;&#10;  IF [Resource]==&quot;Curtailment&quot; THEN&#13;&#10;    -1*Value&#13;&#10;  ELSE&#13;&#10;    [Value]&#13;&#10;  END&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; THEN&#13;&#10;  [Value]&#13;&#10;END' />
            </column>
            <column caption='Generation Labels' datatype='string' name='[Calculation_884112924428046337]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_generator_power_combined.csv&quot; THEN&#13;&#10;  [Resource]&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&gt;=0 THEN&#13;&#10;  [Resource]&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&lt;0 THEN&#13;&#10;   [Resource]+&quot; Charging&quot;&#13;&#10;END' />
            </column>
            <column caption='Charging [MW]' datatype='real' name='[Calculation_884112924457828355]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&lt;0 THEN&#13;&#10;  [Value]&#13;&#10;ELSE&#13;&#10;  0&#13;&#10;END' />
            </column>
            <column caption='Date Time' datatype='datetime' name='[Calculation_889179474267987968]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATEADD(&apos;hour&apos;,INT(RIGHT([Calculation_1086493432800645124],LEN([Calculation_1086493432800645124])-1))-1,[Calculation_1086493432800321539])' />
            </column>
            <column caption='Total Generation [MW]' datatype='real' name='[Calculation_918452871620472832]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_generator_power_combined.csv&quot; THEN&#13;&#10;  IF [Resource]==&quot;Unmet Demand&quot; OR [Resource]==&quot;Curtailment&quot; THEN&#13;&#10;    0*[Value]&#13;&#10;  ELSE&#13;&#10;    [Value]&#13;&#10;  END&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&gt;=0 THEN&#13;&#10;  [Value]&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&lt;0 THEN&#13;&#10;  0*[Value]&#13;&#10;END' />
            </column>
            <column caption='Inflexible Load [MW]' datatype='real' name='[Calculation_931963670409289734]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_loads_combined.csv&quot; THEN&#13;&#10;  [Value]&#13;&#10;ELSE&#13;&#10;  0&#13;&#10;END' />
            </column>
            <column caption='Flexible Load [MW]' datatype='real' name='[Calculation_931963670409551879]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_demand_response_load_combined.csv&quot; THEN&#13;&#10;  [Value]&#13;&#10;ELSE&#13;&#10;  0&#13;&#10;END' />
            </column>
            <column caption='Total Load [MW]' datatype='real' name='[Calculation_931963670410522634]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_931963670409551879]+[Calculation_931963670409289734]-[Calculation_884112924457828355]' />
            </column>
            <column caption='Generation Labels with Charging (group)' datatype='string' name='[Generation Labels (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Calculation_884112924428046337]' new-bin='true'>
                <bin default-name='false' value='&quot;CCGT&quot;'>
                  <value>&quot;CCGT New&quot;</value>
                  <value>&quot;CCGT Old&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Coal&quot;'>
                  <value>&quot;Coal new&quot;</value>
                  <value>&quot;Coal Old&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Diesel&quot;'>
                  <value>&quot;Backup&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Hydro&quot;'>
                  <value>&quot;Hydro Reservoir&quot;</value>
                  <value>&quot;Hydro Run of River&quot;</value>
                  <value>&quot;Pumped Hydro Storage&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Nuclear&quot;'>
                  <value>&quot;Nuclear New&quot;</value>
                  <value>&quot;Nuclear Old&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Other &quot;'>
                  <value>&quot;Biomass&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Solar&quot;'>
                  <value>&quot;Curtailment&quot;</value>
                  <value>&quot;Solar&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Resource]' role='dimension' type='nominal' />
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Timeblock]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_889179474267987968]' derivation='Day' name='[dy:Calculation_889179474267987968:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_889179474267987968]' derivation='Hour' name='[hr:Calculation_889179474267987968:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_889179474267987968]' derivation='Month' name='[mn:Calculation_889179474267987968:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1086493432799272960]' derivation='None' name='[none:Calculation_1086493432799272960:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1086493432799367169]' derivation='None' name='[none:Calculation_1086493432799367169:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1086493432800079874]' derivation='None' name='[none:Calculation_1086493432800079874:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_803611097201504256]' derivation='None' name='[none:Calculation_803611097201504256:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_889179474267987968]' derivation='Quarter' name='[qr:Calculation_889179474267987968:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_884112924427558912]' derivation='Sum' name='[sum:Calculation_884112924427558912:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_918452871620472832]' derivation='Sum' name='[sum:Calculation_918452871620472832:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_931963670409289734]' derivation='Sum' name='[sum:Calculation_931963670409289734:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_931963670410522634]' derivation='Sum' name='[sum:Calculation_931963670410522634:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_889179474267987968]' derivation='Year' name='[yr:Calculation_889179474267987968:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_918452871620472832:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_931963670410522634:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_931963670409289734:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_918452871620472832:qk]&quot;</bucket>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_931963670410522634:qk]&quot;</bucket>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_931963670409289734:qk]&quot;</bucket>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_884112924427558912:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group)]' direction='ASC'>
            <dictionary>
              <bucket>%null%</bucket>
              <bucket>&quot;Hydro Reservoir Charging&quot;</bucket>
              <bucket>&quot;Batteries Charging&quot;</bucket>
              <bucket>&quot;Pumped Hydro Storage Charging&quot;</bucket>
              <bucket>&quot;Unmet Demand&quot;</bucket>
              <bucket>&quot;Curtailment&quot;</bucket>
              <bucket>&quot;Solar&quot;</bucket>
              <bucket>&quot;Wind&quot;</bucket>
              <bucket>&quot;Batteries&quot;</bucket>
              <bucket>&quot;Diesel&quot;</bucket>
              <bucket>&quot;Other &quot;</bucket>
              <bucket>&quot;CCGT&quot;</bucket>
              <bucket>&quot;Hydro&quot;</bucket>
              <bucket>&quot;Coal&quot;</bucket>
              <bucket>&quot;Nuclear&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[mn:Calculation_889179474267987968:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[mn:Calculation_889179474267987968:ok]' member='10' />
              <groupfilter function='member' level='[mn:Calculation_889179474267987968:ok]' member='12' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_1086493432799272960:nk]' />
          </filter>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;None&quot;</bucket>
              <bucket>&quot;12-3 AM&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;None&quot;</bucket>
              <bucket>&quot;Flexible&quot;</bucket>
              <bucket>&quot;Inflexible&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]'>
            <groupfilter function='member' level='[none:Calculation_1086493432800079874:nk]' member='&quot;Med&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;None&quot;</bucket>
              <bucket>&quot;Med&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_803611097201504256:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_803611097201504256:nk]' member='&quot;Added Wind&quot;' />
              <groupfilter function='member' level='[none:Calculation_803611097201504256:nk]' member='&quot;Default VRE&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]'>
            <groupfilter function='level-members' level='[none:Scenario:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0m2ojda1ih48r312ma38r1hlijh9].[:Measure Names]</column>
            <column>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]</column>
            <column>[federated.0m2ojda1ih48r312ma38r1hlijh9].[mn:Calculation_889179474267987968:ok]</column>
            <column>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]</column>
            <column>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_803611097201504256:nk]</column>
            <column>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0m2ojda1ih48r312ma38r1hlijh9].[Multiple Values]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='width' field='[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_884112924427558912:qk]' value='10' />
            <format attr='width' field='[federated.0m2ojda1ih48r312ma38r1hlijh9].[Multiple Values]' value='10' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_884112924427558912:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group)]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0m2ojda1ih48r312ma38r1hlijh9].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>(([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk] / [federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_803611097201504256:nk]))) * ([federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_884112924427558912:qk] + [federated.0m2ojda1ih48r312ma38r1hlijh9].[Multiple Values]))</rows>
        <cols>([federated.0m2ojda1ih48r312ma38r1hlijh9].[yr:Calculation_889179474267987968:ok] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[qr:Calculation_889179474267987968:ok] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[mn:Calculation_889179474267987968:ok] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[dy:Calculation_889179474267987968:ok] / [federated.0m2ojda1ih48r312ma38r1hlijh9].[hr:Calculation_889179474267987968:ok]))))</cols>
      </table>
      <simple-id uuid='{D2ED8F6E-8B18-4B2D-98CF-511577BAE9A3}' />
    </worksheet>
    <worksheet name='Dispatch with Load (no charging)'>
      <table>
        <view>
          <datasources>
            <datasource caption='tab_dam_generator_power_combined' name='federated.0m2ojda1ih48r312ma38r1hlijh9' />
          </datasources>
          <datasource-dependencies datasource='federated.0m2ojda1ih48r312ma38r1hlijh9'>
            <column datatype='string' name='[Attribute]' role='dimension' type='nominal' />
            <column caption='Charging Time' datatype='string' name='[Calculation_1086493432799272960]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-evening-&quot;) THEN&#13;&#10;  &quot;12-6 PM&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-morning&quot;) THEN&#13;&#10;  &quot;12-6 AM&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='Charging Type' datatype='string' name='[Calculation_1086493432799367169]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-flexible&quot;) THEN&#13;&#10;  &quot;Flexible&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-inflexible&quot;) THEN&#13;&#10;  &quot;Inflexible&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='EV Adoption Level' datatype='string' name='[Calculation_1086493432800079874]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;low-&quot;) THEN&#13;&#10;  &quot;Low&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;med-&quot;) THEN&#13;&#10;  &quot;Med&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;high-&quot;) THEN&#13;&#10;  &quot;High&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='Representative Days' datatype='datetime' name='[Calculation_1086493432800321539]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF [Timeblock]==&quot;t1&quot; THEN DATEPARSE(&quot;dd.MMMM.yyyy&quot;,&quot;21.April.2037&quot;)&#13;&#10;ELSEIF [Timeblock]==&quot;t2&quot; THEN DATEPARSE(&quot;dd.MMMM.yyyy&quot;,&quot;15.June.2037&quot;)&#13;&#10;ELSEIF [Timeblock]==&quot;t3&quot; THEN DATEPARSE(&quot;dd.MMMM.yyyy&quot;,&quot;13.October.2037&quot;)&#13;&#10;ELSEIF [Timeblock]==&quot;t4&quot; THEN DATEPARSE(&quot;dd.MMMM.yyyy&quot;,&quot;12.December.2037&quot;)&#13;&#10;END' />
            </column>
            <column caption='Time Interval' datatype='string' name='[Calculation_1086493432800645124]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Timeblock]==&quot;t1&quot; THEN&#13;&#10;  [Attribute]&#13;&#10;ELSEIF [Timeblock]==&quot;t2&quot; THEN&#13;&#10;  &quot;t&quot;+STR(INT(RIGHT([Attribute],LEN([Attribute])-1)))&#13;&#10;ELSEIF [Timeblock]==&quot;t3&quot; THEN&#13;&#10;  &quot;t&quot;+STR(INT(RIGHT([Attribute],LEN([Attribute])-1)))&#13;&#10;ELSE&#13;&#10;  &quot;t&quot;+STR(INT(RIGHT([Attribute],LEN([Attribute])-1)))&#13;&#10;END' />
            </column>
            <column caption='VRE Addition' datatype='string' name='[Calculation_803611097201504256]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;wind&quot;) THEN&#13;&#10;  &quot;Added Wind&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;solar&quot;) THEN&#13;&#10;  &quot;Added Solar&quot;&#13;&#10;ELSE&#13;&#10;  &quot;Default VRE&quot;&#13;&#10;END' />
            </column>
            <column caption='Generation for Load [MW]' datatype='real' name='[Calculation_884112924427558912]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_generator_power_combined.csv&quot; THEN&#13;&#10;  IF [Resource]==&quot;Curtailment&quot; THEN&#13;&#10;    -1*Value&#13;&#10;  ELSE&#13;&#10;    [Value]&#13;&#10;  END&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; THEN&#13;&#10;  [Value]&#13;&#10;END' />
            </column>
            <column caption='Generation Labels' datatype='string' name='[Calculation_884112924428046337]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_generator_power_combined.csv&quot; THEN&#13;&#10;  [Resource]&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&gt;=0 THEN&#13;&#10;  [Resource]&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&lt;0 THEN&#13;&#10;   [Resource]+&quot; Charging&quot;&#13;&#10;END' />
            </column>
            <column caption='Charging [MW]' datatype='real' name='[Calculation_884112924457828355]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&lt;0 THEN&#13;&#10;  [Value]&#13;&#10;ELSE&#13;&#10;  0&#13;&#10;END' />
            </column>
            <column caption='Date Time' datatype='datetime' name='[Calculation_889179474267987968]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATEADD(&apos;hour&apos;,INT(RIGHT([Calculation_1086493432800645124],LEN([Calculation_1086493432800645124])-1))-1,[Calculation_1086493432800321539])' />
            </column>
            <column caption='Total Generation [MW]' datatype='real' name='[Calculation_918452871620472832]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_generator_power_combined.csv&quot; THEN&#13;&#10;  IF [Resource]==&quot;Unmet Demand&quot; OR [Resource]==&quot;Curtailment&quot; THEN&#13;&#10;    0*[Value]&#13;&#10;  ELSE&#13;&#10;    [Value]&#13;&#10;  END&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&gt;=0 THEN&#13;&#10;  [Value]&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&lt;0 THEN&#13;&#10;  0*[Value]&#13;&#10;END' />
            </column>
            <column caption='Inflexible Load [MW]' datatype='real' name='[Calculation_931963670409289734]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_loads_combined.csv&quot; THEN&#13;&#10;  [Value]&#13;&#10;ELSE&#13;&#10;  0&#13;&#10;END' />
            </column>
            <column caption='Flexible Load [MW]' datatype='real' name='[Calculation_931963670409551879]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_demand_response_load_combined.csv&quot; THEN&#13;&#10;  [Value]&#13;&#10;ELSE&#13;&#10;  0&#13;&#10;END' />
            </column>
            <column caption='Total Load [MW]' datatype='real' name='[Calculation_931963670410522634]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_931963670409551879]+[Calculation_931963670409289734]-[Calculation_884112924457828355]' />
            </column>
            <column caption='Generation Labels with Charging (group)' datatype='string' name='[Generation Labels (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Calculation_884112924428046337]' new-bin='true'>
                <bin default-name='false' value='&quot;CCGT&quot;'>
                  <value>&quot;CCGT New&quot;</value>
                  <value>&quot;CCGT Old&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Coal&quot;'>
                  <value>&quot;Coal new&quot;</value>
                  <value>&quot;Coal Old&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Diesel&quot;'>
                  <value>&quot;Backup&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Hydro&quot;'>
                  <value>&quot;Hydro Reservoir&quot;</value>
                  <value>&quot;Hydro Run of River&quot;</value>
                  <value>&quot;Pumped Hydro Storage&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Nuclear&quot;'>
                  <value>&quot;Nuclear New&quot;</value>
                  <value>&quot;Nuclear Old&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Other &quot;'>
                  <value>&quot;Biomass&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Solar&quot;'>
                  <value>&quot;Curtailment&quot;</value>
                  <value>&quot;Solar&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Generation for Load (no charging) [MW]' datatype='real' name='[Generation for Load [MW]] (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_generator_power_combined.csv&quot; THEN&#13;&#10;  IF [Resource]==&quot;Curtailment&quot; THEN&#13;&#10;    -1*Value&#13;&#10;  ELSE&#13;&#10;    [Value]&#13;&#10;  END&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; THEN&#13;&#10;  IF [Value]&lt;0 THEN&#13;&#10;    0*[Value]&#13;&#10;  ELSE&#13;&#10;    [Value]&#13;&#10;  END&#13;&#10;END' />
            </column>
            <column caption='5-day time period' datatype='string' name='[Representative Days (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Timeblock]==&quot;t1&quot; THEN &quot;April 21-25&quot;&#13;&#10;ELSEIF [Timeblock]==&quot;t2&quot; THEN &quot;June 15-19&quot;&#13;&#10;ELSEIF [Timeblock]==&quot;t3&quot; THEN &quot;October 13-17&quot;&#13;&#10;ELSEIF [Timeblock]==&quot;t4&quot; THEN &quot;December 12-16&quot;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Resource]' role='dimension' type='nominal' />
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Timeblock]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_889179474267987968]' derivation='Day' name='[dy:Calculation_889179474267987968:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_889179474267987968]' derivation='Hour' name='[hr:Calculation_889179474267987968:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_889179474267987968]' derivation='Month' name='[mn:Calculation_889179474267987968:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1086493432799272960]' derivation='None' name='[none:Calculation_1086493432799272960:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1086493432799367169]' derivation='None' name='[none:Calculation_1086493432799367169:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1086493432800079874]' derivation='None' name='[none:Calculation_1086493432800079874:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_803611097201504256]' derivation='None' name='[none:Calculation_803611097201504256:nk]' pivot='key' type='nominal' />
            <column-instance column='[Representative Days (copy)]' derivation='None' name='[none:Representative Days (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_889179474267987968]' derivation='Quarter' name='[qr:Calculation_889179474267987968:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_884112924427558912]' derivation='Sum' name='[sum:Calculation_884112924427558912:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_918452871620472832]' derivation='Sum' name='[sum:Calculation_918452871620472832:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_931963670409289734]' derivation='Sum' name='[sum:Calculation_931963670409289734:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_931963670410522634]' derivation='Sum' name='[sum:Calculation_931963670410522634:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Generation for Load [MW]] (copy)]' derivation='Sum' name='[sum:Generation for Load [MW]] (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_889179474267987968]' derivation='Year' name='[yr:Calculation_889179474267987968:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_918452871620472832:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_931963670410522634:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_931963670409289734:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_918452871620472832:qk]&quot;</bucket>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_931963670410522634:qk]&quot;</bucket>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_931963670409289734:qk]&quot;</bucket>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_884112924427558912:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group)]' direction='ASC'>
            <dictionary>
              <bucket>%null%</bucket>
              <bucket>&quot;Hydro Reservoir Charging&quot;</bucket>
              <bucket>&quot;Batteries Charging&quot;</bucket>
              <bucket>&quot;Pumped Hydro Storage Charging&quot;</bucket>
              <bucket>&quot;Unmet Demand&quot;</bucket>
              <bucket>&quot;Curtailment&quot;</bucket>
              <bucket>&quot;Solar&quot;</bucket>
              <bucket>&quot;Wind&quot;</bucket>
              <bucket>&quot;Batteries&quot;</bucket>
              <bucket>&quot;Diesel&quot;</bucket>
              <bucket>&quot;Other &quot;</bucket>
              <bucket>&quot;CCGT&quot;</bucket>
              <bucket>&quot;Hydro&quot;</bucket>
              <bucket>&quot;Coal&quot;</bucket>
              <bucket>&quot;Nuclear&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_1086493432799272960:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;None&quot;</bucket>
              <bucket>&quot;12-3 AM&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_1086493432799367169:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;None&quot;</bucket>
              <bucket>&quot;Flexible&quot;</bucket>
              <bucket>&quot;Inflexible&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_1086493432800079874:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;None&quot;</bucket>
              <bucket>&quot;Med&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_803611097201504256:nk]'>
            <groupfilter function='member' level='[none:Calculation_803611097201504256:nk]' member='&quot;Default VRE&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Representative Days (copy):nk]'>
            <groupfilter function='member' level='[none:Representative Days (copy):nk]' member='&quot;June 15-19&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0m2ojda1ih48r312ma38r1hlijh9].[:Measure Names]</column>
            <column>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Representative Days (copy):nk]</column>
            <column>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_803611097201504256:nk]</column>
            <column>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk]</column>
            <column>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]</column>
            <column>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0m2ojda1ih48r312ma38r1hlijh9].[Multiple Values]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='width' field='[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Generation for Load [MW]] (copy):qk]' value='52' />
            <format attr='width' field='[federated.0m2ojda1ih48r312ma38r1hlijh9].[Multiple Values]' value='52' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.0m2ojda1ih48r312ma38r1hlijh9].[dy:Calculation_889179474267987968:ok]' value='10' />
            <format attr='width' field='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk]' value='60' />
            <format attr='width' field='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]' value='56' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Generation for Load [MW]] (copy):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group)]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0m2ojda1ih48r312ma38r1hlijh9].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>(([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk] / [federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_803611097201504256:nk]))) * ([federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Generation for Load [MW]] (copy):qk] + [federated.0m2ojda1ih48r312ma38r1hlijh9].[Multiple Values]))</rows>
        <cols>([federated.0m2ojda1ih48r312ma38r1hlijh9].[yr:Calculation_889179474267987968:ok] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[qr:Calculation_889179474267987968:ok] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[mn:Calculation_889179474267987968:ok] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[dy:Calculation_889179474267987968:ok] / [federated.0m2ojda1ih48r312ma38r1hlijh9].[hr:Calculation_889179474267987968:ok]))))</cols>
      </table>
      <simple-id uuid='{8516D35C-BF73-4F75-93DB-FF00EB025770}' />
    </worksheet>
    <worksheet name='Dispatch with Price'>
      <table>
        <view>
          <datasources>
            <datasource caption='tab_dam_generator_power_combined' name='federated.0m2ojda1ih48r312ma38r1hlijh9' />
          </datasources>
          <datasource-dependencies datasource='federated.0m2ojda1ih48r312ma38r1hlijh9'>
            <column datatype='string' name='[Attribute]' role='dimension' type='nominal' />
            <column caption='Charging Time' datatype='string' name='[Calculation_1086493432799272960]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-evening-&quot;) THEN&#13;&#10;  &quot;12-6 PM&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-morning&quot;) THEN&#13;&#10;  &quot;12-6 AM&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='Charging Type' datatype='string' name='[Calculation_1086493432799367169]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-flexible&quot;) THEN&#13;&#10;  &quot;Flexible&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-inflexible&quot;) THEN&#13;&#10;  &quot;Inflexible&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='EV Adoption Level' datatype='string' name='[Calculation_1086493432800079874]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;low-&quot;) THEN&#13;&#10;  &quot;Low&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;med-&quot;) THEN&#13;&#10;  &quot;Med&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;high-&quot;) THEN&#13;&#10;  &quot;High&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='Representative Days' datatype='datetime' name='[Calculation_1086493432800321539]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF [Timeblock]==&quot;t1&quot; THEN DATEPARSE(&quot;dd.MMMM.yyyy&quot;,&quot;21.April.2037&quot;)&#13;&#10;ELSEIF [Timeblock]==&quot;t2&quot; THEN DATEPARSE(&quot;dd.MMMM.yyyy&quot;,&quot;15.June.2037&quot;)&#13;&#10;ELSEIF [Timeblock]==&quot;t3&quot; THEN DATEPARSE(&quot;dd.MMMM.yyyy&quot;,&quot;13.October.2037&quot;)&#13;&#10;ELSEIF [Timeblock]==&quot;t4&quot; THEN DATEPARSE(&quot;dd.MMMM.yyyy&quot;,&quot;12.December.2037&quot;)&#13;&#10;END' />
            </column>
            <column caption='Time Interval' datatype='string' name='[Calculation_1086493432800645124]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Timeblock]==&quot;t1&quot; THEN&#13;&#10;  [Attribute]&#13;&#10;ELSEIF [Timeblock]==&quot;t2&quot; THEN&#13;&#10;  &quot;t&quot;+STR(INT(RIGHT([Attribute],LEN([Attribute])-1)))&#13;&#10;ELSEIF [Timeblock]==&quot;t3&quot; THEN&#13;&#10;  &quot;t&quot;+STR(INT(RIGHT([Attribute],LEN([Attribute])-1)))&#13;&#10;ELSE&#13;&#10;  &quot;t&quot;+STR(INT(RIGHT([Attribute],LEN([Attribute])-1)))&#13;&#10;END' />
            </column>
            <column caption='Generation for Load [MW]' datatype='real' name='[Calculation_884112924427558912]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_generator_power_combined.csv&quot; THEN&#13;&#10;  IF [Resource]==&quot;Curtailment&quot; THEN&#13;&#10;    -1*Value&#13;&#10;  ELSE&#13;&#10;    [Value]&#13;&#10;  END&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; THEN&#13;&#10;  [Value]&#13;&#10;END' />
            </column>
            <column caption='Generation Labels' datatype='string' name='[Calculation_884112924428046337]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_generator_power_combined.csv&quot; THEN&#13;&#10;  [Resource]&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&gt;=0 THEN&#13;&#10;  [Resource]&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&lt;0 THEN&#13;&#10;   [Resource]+&quot; Charging&quot;&#13;&#10;END' />
            </column>
            <column caption='Date Time' datatype='datetime' name='[Calculation_889179474267987968]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATEADD(&apos;hour&apos;,INT(RIGHT([Calculation_1086493432800645124],LEN([Calculation_1086493432800645124])-1))-1,[Calculation_1086493432800321539])' />
            </column>
            <column caption='Price' datatype='real' name='[Calculation_889179474271539201]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_prices_combined.csv&quot; THEN&#13;&#10;  [Value]&#13;&#10;END' />
            </column>
            <column caption='Generation Labels with Charging (group)' datatype='string' name='[Generation Labels (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Calculation_884112924428046337]' new-bin='true'>
                <bin default-name='false' value='&quot;CCGT&quot;'>
                  <value>&quot;CCGT New&quot;</value>
                  <value>&quot;CCGT Old&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Coal&quot;'>
                  <value>&quot;Coal new&quot;</value>
                  <value>&quot;Coal Old&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Diesel&quot;'>
                  <value>&quot;Backup&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Hydro&quot;'>
                  <value>&quot;Hydro Reservoir&quot;</value>
                  <value>&quot;Hydro Run of River&quot;</value>
                  <value>&quot;Pumped Hydro Storage&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Nuclear&quot;'>
                  <value>&quot;Nuclear New&quot;</value>
                  <value>&quot;Nuclear Old&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Other &quot;'>
                  <value>&quot;Biomass&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Solar&quot;'>
                  <value>&quot;Curtailment&quot;</value>
                  <value>&quot;Solar&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Resource]' role='dimension' type='nominal' />
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Timeblock]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_889179474267987968]' derivation='Day' name='[dy:Calculation_889179474267987968:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_889179474267987968]' derivation='Hour' name='[hr:Calculation_889179474267987968:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_889179474271539201]' derivation='Max' name='[max:Calculation_889179474271539201:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_889179474267987968]' derivation='Month' name='[mn:Calculation_889179474267987968:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1086493432799272960]' derivation='None' name='[none:Calculation_1086493432799272960:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1086493432799367169]' derivation='None' name='[none:Calculation_1086493432799367169:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1086493432800079874]' derivation='None' name='[none:Calculation_1086493432800079874:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_889179474267987968]' derivation='Quarter' name='[qr:Calculation_889179474267987968:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_884112924427558912]' derivation='Sum' name='[sum:Calculation_884112924427558912:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_889179474267987968]' derivation='Year' name='[yr:Calculation_889179474267987968:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group)]' direction='ASC'>
            <dictionary>
              <bucket>%null%</bucket>
              <bucket>&quot;Hydro Reservoir Charging&quot;</bucket>
              <bucket>&quot;Batteries Charging&quot;</bucket>
              <bucket>&quot;Pumped Hydro Storage Charging&quot;</bucket>
              <bucket>&quot;Unmet Demand&quot;</bucket>
              <bucket>&quot;Curtailment&quot;</bucket>
              <bucket>&quot;Solar&quot;</bucket>
              <bucket>&quot;Wind&quot;</bucket>
              <bucket>&quot;Batteries&quot;</bucket>
              <bucket>&quot;Diesel&quot;</bucket>
              <bucket>&quot;Other &quot;</bucket>
              <bucket>&quot;CCGT&quot;</bucket>
              <bucket>&quot;Hydro&quot;</bucket>
              <bucket>&quot;Coal&quot;</bucket>
              <bucket>&quot;Nuclear&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;None&quot;</bucket>
              <bucket>&quot;12-3 AM&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;None&quot;</bucket>
              <bucket>&quot;Flexible&quot;</bucket>
              <bucket>&quot;Inflexible&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;None&quot;</bucket>
              <bucket>&quot;Med&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]'>
            <groupfilter function='level-members' level='[none:Scenario:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0m2ojda1ih48r312ma38r1hlijh9].[max:Calculation_889179474271539201:qk]' field-type='quantitative' fold='true' scale='log' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_884112924427558912:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group)]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0m2ojda1ih48r312ma38r1hlijh9].[max:Calculation_889179474271539201:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>(([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk] / [federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk])) * ([federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_884112924427558912:qk] + [federated.0m2ojda1ih48r312ma38r1hlijh9].[max:Calculation_889179474271539201:qk]))</rows>
        <cols>([federated.0m2ojda1ih48r312ma38r1hlijh9].[yr:Calculation_889179474267987968:ok] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[qr:Calculation_889179474267987968:ok] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[mn:Calculation_889179474267987968:ok] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[dy:Calculation_889179474267987968:ok] / [federated.0m2ojda1ih48r312ma38r1hlijh9].[hr:Calculation_889179474267987968:ok]))))</cols>
      </table>
      <simple-id uuid='{D19C0504-D9E3-4DEE-A328-55DAD0946331}' />
    </worksheet>
    <worksheet name='Generation (Absolute) by Type'>
      <table>
        <view>
          <datasources>
            <datasource caption='tab_dam_generator_power_combined' name='federated.0m2ojda1ih48r312ma38r1hlijh9' />
          </datasources>
          <datasource-dependencies datasource='federated.0m2ojda1ih48r312ma38r1hlijh9'>
            <column caption='Charging Time' datatype='string' name='[Calculation_1086493432799272960]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-evening-&quot;) THEN&#13;&#10;  &quot;12-6 PM&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-morning&quot;) THEN&#13;&#10;  &quot;12-6 AM&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='Charging Type' datatype='string' name='[Calculation_1086493432799367169]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-flexible&quot;) THEN&#13;&#10;  &quot;Flexible&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-inflexible&quot;) THEN&#13;&#10;  &quot;Inflexible&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='EV Adoption Level' datatype='string' name='[Calculation_1086493432800079874]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;low-&quot;) THEN&#13;&#10;  &quot;Low&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;med-&quot;) THEN&#13;&#10;  &quot;Med&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;high-&quot;) THEN&#13;&#10;  &quot;High&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='VRE Addition' datatype='string' name='[Calculation_803611097201504256]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;wind&quot;) THEN&#13;&#10;  &quot;Added Wind&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;solar&quot;) THEN&#13;&#10;  &quot;Added Solar&quot;&#13;&#10;ELSE&#13;&#10;  &quot;Default VRE&quot;&#13;&#10;END' />
            </column>
            <column caption='Generation for Load [MW]' datatype='real' name='[Calculation_884112924427558912]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_generator_power_combined.csv&quot; THEN&#13;&#10;  IF [Resource]==&quot;Curtailment&quot; THEN&#13;&#10;    -1*Value&#13;&#10;  ELSE&#13;&#10;    [Value]&#13;&#10;  END&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; THEN&#13;&#10;  [Value]&#13;&#10;END' />
            </column>
            <column caption='Generation Labels' datatype='string' name='[Calculation_884112924428046337]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_generator_power_combined.csv&quot; THEN&#13;&#10;  [Resource]&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&gt;=0 THEN&#13;&#10;  [Resource]&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&lt;0 THEN&#13;&#10;   [Resource]+&quot; Charging&quot;&#13;&#10;END' />
            </column>
            <column caption='Weighted Generation for Load [MW]' datatype='real' name='[Calculation_884112924430045186]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_931963670410043401]*[Calculation_884112924427558912]' />
            </column>
            <column caption='Weights' datatype='real' name='[Calculation_931963670410043401]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Timeblock]&#13;&#10;  WHEN &quot;t1&quot; THEN 36 &#13;&#10;  WHEN &quot;t2&quot; THEN 14&#13;&#10;  WHEN &quot;t3&quot; THEN 9.18368717&#13;&#10;  WHEN &quot;t4&quot; THEN 13&#13;&#10;END' />
            </column>
            <column caption='Generation Labels (group)' datatype='string' name='[Generation Labels (group) (copy)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Calculation_884112924428046337]' new-bin='true'>
                <bin default-name='false' value='&quot;Batteries&quot;'>
                  <value>&quot;Batteries&quot;</value>
                  <value>&quot;Batteries Charging&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;CCGT&quot;'>
                  <value>&quot;CCGT New&quot;</value>
                  <value>&quot;CCGT Old&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Coal&quot;'>
                  <value>&quot;Coal new&quot;</value>
                  <value>&quot;Coal Old&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Diesel&quot;'>
                  <value>&quot;Backup&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Hydro&quot;'>
                  <value>&quot;Hydro Reservoir&quot;</value>
                  <value>&quot;Hydro Reservoir Charging&quot;</value>
                  <value>&quot;Hydro Run of River&quot;</value>
                  <value>&quot;Pumped Hydro Storage&quot;</value>
                  <value>&quot;Pumped Hydro Storage Charging&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Nuclear&quot;'>
                  <value>&quot;Nuclear New&quot;</value>
                  <value>&quot;Nuclear Old&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Other &quot;'>
                  <value>&quot;Biomass&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Solar&quot;'>
                  <value>&quot;Curtailment&quot;</value>
                  <value>&quot;Solar&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='5-day time period' datatype='string' name='[Representative Days (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Timeblock]==&quot;t1&quot; THEN &quot;April 21-25&quot;&#13;&#10;ELSEIF [Timeblock]==&quot;t2&quot; THEN &quot;June 15-19&quot;&#13;&#10;ELSEIF [Timeblock]==&quot;t3&quot; THEN &quot;October 13-17&quot;&#13;&#10;ELSEIF [Timeblock]==&quot;t4&quot; THEN &quot;December 12-16&quot;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Resource]' role='dimension' type='nominal' />
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Timeblock]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1086493432799272960]' derivation='None' name='[none:Calculation_1086493432799272960:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1086493432799367169]' derivation='None' name='[none:Calculation_1086493432799367169:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1086493432800079874]' derivation='None' name='[none:Calculation_1086493432800079874:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_803611097201504256]' derivation='None' name='[none:Calculation_803611097201504256:nk]' pivot='key' type='nominal' />
            <column-instance column='[Representative Days (copy)]' derivation='None' name='[none:Representative Days (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_884112924430045186]' derivation='Sum' name='[pcto:sum:Calculation_884112924430045186:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_884112924427558912]' derivation='Sum' name='[sum:Calculation_884112924427558912:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group) (copy)]' direction='ASC'>
            <dictionary>
              <bucket>%null%</bucket>
              <bucket>&quot;Unmet Demand&quot;</bucket>
              <bucket>&quot;Curtailment&quot;</bucket>
              <bucket>&quot;Solar&quot;</bucket>
              <bucket>&quot;Wind&quot;</bucket>
              <bucket>&quot;Batteries&quot;</bucket>
              <bucket>&quot;Diesel&quot;</bucket>
              <bucket>&quot;Other &quot;</bucket>
              <bucket>&quot;CCGT&quot;</bucket>
              <bucket>&quot;Hydro&quot;</bucket>
              <bucket>&quot;Coal&quot;</bucket>
              <bucket>&quot;Nuclear&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk]'>
            <groupfilter function='member' level='[none:Calculation_1086493432799272960:nk]' member='&quot;None&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;None&quot;</bucket>
              <bucket>&quot;Med&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_803611097201504256:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_803611097201504256:nk]' />
          </filter>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Representative Days (copy):nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;April 21-25&quot;</bucket>
              <bucket>&quot;June 15-19&quot;</bucket>
              <bucket>&quot;October 13-17&quot;</bucket>
              <bucket>&quot;December 12-16&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_803611097201504256:nk]</column>
            <column>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0m2ojda1ih48r312ma38r1hlijh9].[pcto:sum:Calculation_884112924430045186:qk:2]' value='p0%' />
            <format attr='width' field='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_803611097201504256:nk]' value='161' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Representative Days (copy):nk]' value='10' />
            <format attr='height' field='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk]' value='12' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group) (copy)]' />
              <text column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[pcto:sum:Calculation_884112924430045186:qk:2]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_884112924427558912:qk]</rows>
        <cols>([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Representative Days (copy):nk] / [federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_803611097201504256:nk]))))</cols>
      </table>
      <simple-id uuid='{616E2DBF-D898-4487-A202-E0974F0137E8}' />
    </worksheet>
    <worksheet name='Generation (Percentage) by Type'>
      <table>
        <view>
          <datasources>
            <datasource caption='tab_dam_generator_power_combined' name='federated.0m2ojda1ih48r312ma38r1hlijh9' />
          </datasources>
          <datasource-dependencies datasource='federated.0m2ojda1ih48r312ma38r1hlijh9'>
            <column caption='Charging Time' datatype='string' name='[Calculation_1086493432799272960]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-evening-&quot;) THEN&#13;&#10;  &quot;12-6 PM&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-morning&quot;) THEN&#13;&#10;  &quot;12-6 AM&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='Charging Type' datatype='string' name='[Calculation_1086493432799367169]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-flexible&quot;) THEN&#13;&#10;  &quot;Flexible&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-inflexible&quot;) THEN&#13;&#10;  &quot;Inflexible&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='EV Adoption Level' datatype='string' name='[Calculation_1086493432800079874]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;low-&quot;) THEN&#13;&#10;  &quot;Low&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;med-&quot;) THEN&#13;&#10;  &quot;Med&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;high-&quot;) THEN&#13;&#10;  &quot;High&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='VRE Addition' datatype='string' name='[Calculation_803611097201504256]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;wind&quot;) THEN&#13;&#10;  &quot;Added Wind&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;solar&quot;) THEN&#13;&#10;  &quot;Added Solar&quot;&#13;&#10;ELSE&#13;&#10;  &quot;Default VRE&quot;&#13;&#10;END' />
            </column>
            <column caption='Generation for Load [MW]' datatype='real' name='[Calculation_884112924427558912]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_generator_power_combined.csv&quot; THEN&#13;&#10;  IF [Resource]==&quot;Curtailment&quot; THEN&#13;&#10;    -1*Value&#13;&#10;  ELSE&#13;&#10;    [Value]&#13;&#10;  END&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; THEN&#13;&#10;  [Value]&#13;&#10;END' />
            </column>
            <column caption='Generation Labels' datatype='string' name='[Calculation_884112924428046337]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_generator_power_combined.csv&quot; THEN&#13;&#10;  [Resource]&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&gt;=0 THEN&#13;&#10;  [Resource]&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&lt;0 THEN&#13;&#10;   [Resource]+&quot; Charging&quot;&#13;&#10;END' />
            </column>
            <column caption='Weighted Generation for Load [MW]' datatype='real' name='[Calculation_884112924430045186]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_931963670410043401]*[Calculation_884112924427558912]' />
            </column>
            <column caption='Weights' datatype='real' name='[Calculation_931963670410043401]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Timeblock]&#13;&#10;  WHEN &quot;t1&quot; THEN 36 &#13;&#10;  WHEN &quot;t2&quot; THEN 14&#13;&#10;  WHEN &quot;t3&quot; THEN 9.18368717&#13;&#10;  WHEN &quot;t4&quot; THEN 13&#13;&#10;END' />
            </column>
            <column caption='Generation Labels (group)' datatype='string' name='[Generation Labels (group) (copy)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Calculation_884112924428046337]' new-bin='true'>
                <bin default-name='false' value='&quot;Batteries&quot;'>
                  <value>&quot;Batteries&quot;</value>
                  <value>&quot;Batteries Charging&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;CCGT&quot;'>
                  <value>&quot;CCGT New&quot;</value>
                  <value>&quot;CCGT Old&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Coal&quot;'>
                  <value>&quot;Coal new&quot;</value>
                  <value>&quot;Coal Old&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Diesel&quot;'>
                  <value>&quot;Backup&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Hydro&quot;'>
                  <value>&quot;Hydro Reservoir&quot;</value>
                  <value>&quot;Hydro Reservoir Charging&quot;</value>
                  <value>&quot;Hydro Run of River&quot;</value>
                  <value>&quot;Pumped Hydro Storage&quot;</value>
                  <value>&quot;Pumped Hydro Storage Charging&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Nuclear&quot;'>
                  <value>&quot;Nuclear New&quot;</value>
                  <value>&quot;Nuclear Old&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Other &quot;'>
                  <value>&quot;Biomass&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Solar&quot;'>
                  <value>&quot;Curtailment&quot;</value>
                  <value>&quot;Solar&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='5-day time period' datatype='string' name='[Representative Days (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Timeblock]==&quot;t1&quot; THEN &quot;April 21-25&quot;&#13;&#10;ELSEIF [Timeblock]==&quot;t2&quot; THEN &quot;June 15-19&quot;&#13;&#10;ELSEIF [Timeblock]==&quot;t3&quot; THEN &quot;October 13-17&quot;&#13;&#10;ELSEIF [Timeblock]==&quot;t4&quot; THEN &quot;December 12-16&quot;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Resource]' role='dimension' type='nominal' />
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Timeblock]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1086493432799272960]' derivation='None' name='[none:Calculation_1086493432799272960:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1086493432799367169]' derivation='None' name='[none:Calculation_1086493432799367169:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1086493432800079874]' derivation='None' name='[none:Calculation_1086493432800079874:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_803611097201504256]' derivation='None' name='[none:Calculation_803611097201504256:nk]' pivot='key' type='nominal' />
            <column-instance column='[Representative Days (copy)]' derivation='None' name='[none:Representative Days (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_884112924430045186]' derivation='Sum' name='[pcto:sum:Calculation_884112924430045186:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group) (copy)]' direction='ASC'>
            <dictionary>
              <bucket>%null%</bucket>
              <bucket>&quot;Unmet Demand&quot;</bucket>
              <bucket>&quot;Curtailment&quot;</bucket>
              <bucket>&quot;Solar&quot;</bucket>
              <bucket>&quot;Wind&quot;</bucket>
              <bucket>&quot;Batteries&quot;</bucket>
              <bucket>&quot;Diesel&quot;</bucket>
              <bucket>&quot;Other &quot;</bucket>
              <bucket>&quot;CCGT&quot;</bucket>
              <bucket>&quot;Hydro&quot;</bucket>
              <bucket>&quot;Coal&quot;</bucket>
              <bucket>&quot;Nuclear&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;None&quot;</bucket>
              <bucket>&quot;Med&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_803611097201504256:nk]'>
            <groupfilter function='member' level='[none:Calculation_803611097201504256:nk]' member='&quot;Default VRE&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Representative Days (copy):nk]'>
            <groupfilter function='level-members' level='[none:Representative Days (copy):nk]' />
          </filter>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Representative Days (copy):nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;April 21-25&quot;</bucket>
              <bucket>&quot;June 15-19&quot;</bucket>
              <bucket>&quot;October 13-17&quot;</bucket>
              <bucket>&quot;December 12-16&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_803611097201504256:nk]</column>
            <column>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Representative Days (copy):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0m2ojda1ih48r312ma38r1hlijh9].[pcto:sum:Calculation_884112924430045186:qk:2]' value='p0%' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group) (copy)]' />
              <text column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[pcto:sum:Calculation_884112924430045186:qk:2]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0m2ojda1ih48r312ma38r1hlijh9].[pcto:sum:Calculation_884112924430045186:qk:2]</rows>
        <cols>([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Representative Days (copy):nk] / [federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_803611097201504256:nk]))))</cols>
      </table>
      <simple-id uuid='{0FFE1D90-1BE5-483C-940F-F4A13ABE567A}' />
    </worksheet>
    <worksheet name='Load'>
      <table>
        <view>
          <datasources>
            <datasource caption='tab_dam_generator_power_combined' name='federated.0m2ojda1ih48r312ma38r1hlijh9' />
          </datasources>
          <datasource-dependencies datasource='federated.0m2ojda1ih48r312ma38r1hlijh9'>
            <column caption='Charging Time' datatype='string' name='[Calculation_1086493432799272960]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-evening-&quot;) THEN&#13;&#10;  &quot;12-6 PM&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-morning&quot;) THEN&#13;&#10;  &quot;12-6 AM&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='Charging Type' datatype='string' name='[Calculation_1086493432799367169]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-flexible&quot;) THEN&#13;&#10;  &quot;Flexible&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-inflexible&quot;) THEN&#13;&#10;  &quot;Inflexible&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='EV Adoption Level' datatype='string' name='[Calculation_1086493432800079874]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;low-&quot;) THEN&#13;&#10;  &quot;Low&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;med-&quot;) THEN&#13;&#10;  &quot;Med&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;high-&quot;) THEN&#13;&#10;  &quot;High&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='VRE Addition' datatype='string' name='[Calculation_803611097201504256]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;wind&quot;) THEN&#13;&#10;  &quot;Added Wind&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;solar&quot;) THEN&#13;&#10;  &quot;Added Solar&quot;&#13;&#10;ELSE&#13;&#10;  &quot;Default VRE&quot;&#13;&#10;END' />
            </column>
            <column caption='Charging [MW]' datatype='real' name='[Calculation_884112924457828355]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&lt;0 THEN&#13;&#10;  [Value]&#13;&#10;ELSE&#13;&#10;  0&#13;&#10;END' />
            </column>
            <column caption='Inflexible Load [MW]' datatype='real' name='[Calculation_931963670409289734]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_loads_combined.csv&quot; THEN&#13;&#10;  [Value]&#13;&#10;ELSE&#13;&#10;  0&#13;&#10;END' />
            </column>
            <column caption='Flexible Load [MW]' datatype='real' name='[Calculation_931963670409551879]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_demand_response_load_combined.csv&quot; THEN&#13;&#10;  [Value]&#13;&#10;ELSE&#13;&#10;  0&#13;&#10;END' />
            </column>
            <column caption='Load Labels' datatype='string' name='[Calculation_931963670409670664]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_loads_combined.csv&quot; THEN&#13;&#10;  &quot;Inflexible&quot;&#13;&#10;ELSEIF [Table Name]==&quot;tab_dam_demand_response_load_combined.csv&quot; THEN&#13;&#10;  &quot;Flexible&quot;&#13;&#10;ELSEIF [Table Name]==&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&lt;0 THEN&#13;&#10;  &quot;Charging&quot;&#13;&#10;END' />
            </column>
            <column caption='Total Load [MW]' datatype='real' name='[Calculation_931963670410522634]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_931963670409551879]+[Calculation_931963670409289734]-[Calculation_884112924457828355]' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1086493432799272960]' derivation='None' name='[none:Calculation_1086493432799272960:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1086493432799367169]' derivation='None' name='[none:Calculation_1086493432799367169:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1086493432800079874]' derivation='None' name='[none:Calculation_1086493432800079874:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_803611097201504256]' derivation='None' name='[none:Calculation_803611097201504256:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_931963670409670664]' derivation='None' name='[none:Calculation_931963670409670664:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_931963670410522634]' derivation='Sum' name='[sum:Calculation_931963670410522634:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;None&quot;</bucket>
              <bucket>&quot;Med&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_803611097201504256:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_803611097201504256:nk]' />
          </filter>
          <filter class='categorical' column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_931963670409670664:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_931963670409670664:nk]' />
              <groupfilter function='member' level='[none:Calculation_931963670409670664:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_931963670409670664:nk]</column>
            <column>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_803611097201504256:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_931963670409670664:nk]' />
              <text column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_931963670410522634:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_931963670410522634:qk]</rows>
        <cols>([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk] / [federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_803611097201504256:nk])))</cols>
      </table>
      <simple-id uuid='{063BAC5D-D5E3-4C86-8100-20C8056CD6F8}' />
    </worksheet>
    <worksheet name='Load for Storage'>
      <table>
        <view>
          <datasources>
            <datasource caption='tab_dam_generator_power_combined' name='federated.0m2ojda1ih48r312ma38r1hlijh9' />
          </datasources>
          <datasource-dependencies datasource='federated.0m2ojda1ih48r312ma38r1hlijh9'>
            <column caption='Charging Time' datatype='string' name='[Calculation_1086493432799272960]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-evening-&quot;) THEN&#13;&#10;  &quot;12-6 PM&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-morning&quot;) THEN&#13;&#10;  &quot;12-6 AM&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='Charging Type' datatype='string' name='[Calculation_1086493432799367169]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-flexible&quot;) THEN&#13;&#10;  &quot;Flexible&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-inflexible&quot;) THEN&#13;&#10;  &quot;Inflexible&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='EV Adoption Level' datatype='string' name='[Calculation_1086493432800079874]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;low-&quot;) THEN&#13;&#10;  &quot;Low&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;med-&quot;) THEN&#13;&#10;  &quot;Med&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;high-&quot;) THEN&#13;&#10;  &quot;High&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='VRE Addition' datatype='string' name='[Calculation_803611097201504256]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;wind&quot;) THEN&#13;&#10;  &quot;Added Wind&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;solar&quot;) THEN&#13;&#10;  &quot;Added Solar&quot;&#13;&#10;ELSE&#13;&#10;  &quot;Default VRE&quot;&#13;&#10;END' />
            </column>
            <column caption='Charging [MW]' datatype='real' name='[Calculation_884112924457828355]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&lt;0 THEN&#13;&#10;  [Value]&#13;&#10;ELSE&#13;&#10;  0&#13;&#10;END' />
            </column>
            <column caption='Inflexible Load [MW]' datatype='real' name='[Calculation_931963670409289734]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_loads_combined.csv&quot; THEN&#13;&#10;  [Value]&#13;&#10;ELSE&#13;&#10;  0&#13;&#10;END' />
            </column>
            <column caption='Flexible Load [MW]' datatype='real' name='[Calculation_931963670409551879]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_demand_response_load_combined.csv&quot; THEN&#13;&#10;  [Value]&#13;&#10;ELSE&#13;&#10;  0&#13;&#10;END' />
            </column>
            <column caption='Load Labels' datatype='string' name='[Calculation_931963670409670664]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_loads_combined.csv&quot; THEN&#13;&#10;  &quot;Inflexible&quot;&#13;&#10;ELSEIF [Table Name]==&quot;tab_dam_demand_response_load_combined.csv&quot; THEN&#13;&#10;  &quot;Flexible&quot;&#13;&#10;ELSEIF [Table Name]==&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&lt;0 THEN&#13;&#10;  &quot;Charging&quot;&#13;&#10;END' />
            </column>
            <column caption='Total Load [MW]' datatype='real' name='[Calculation_931963670410522634]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_931963670409551879]+[Calculation_931963670409289734]-[Calculation_884112924457828355]' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1086493432799272960]' derivation='None' name='[none:Calculation_1086493432799272960:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1086493432799367169]' derivation='None' name='[none:Calculation_1086493432799367169:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1086493432800079874]' derivation='None' name='[none:Calculation_1086493432800079874:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_803611097201504256]' derivation='None' name='[none:Calculation_803611097201504256:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_931963670409670664]' derivation='None' name='[none:Calculation_931963670409670664:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_931963670410522634]' derivation='Sum' name='[sum:Calculation_931963670410522634:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;None&quot;</bucket>
              <bucket>&quot;Med&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_931963670409670664:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_931963670409670664:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Calculation_931963670409670664:nk]' member='%null%' />
                <groupfilter function='member' level='[none:Calculation_931963670409670664:nk]' member='&quot;Flexible&quot;' />
                <groupfilter function='member' level='[none:Calculation_931963670409670664:nk]' member='&quot;Inflexible&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_931963670409670664:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_931963670409670664:nk]' />
              <text column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_931963670410522634:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_931963670410522634:qk]</rows>
        <cols>([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk] / [federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_803611097201504256:nk])))</cols>
      </table>
      <simple-id uuid='{3AA364E5-9004-4503-AB54-E9BE7FA1EFF9}' />
    </worksheet>
    <worksheet name='Net Load Duration flexible'>
      <table>
        <view>
          <datasources>
            <datasource caption='tab_dam_generator_power_combined' name='federated.0m2ojda1ih48r312ma38r1hlijh9' />
          </datasources>
          <datasource-dependencies datasource='federated.0m2ojda1ih48r312ma38r1hlijh9'>
            <column datatype='string' name='[Attribute]' role='dimension' type='nominal' />
            <column caption='Net Generation [MW]' datatype='real' name='[Calculation_202099068255866880]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_generator_power_combined.csv&quot; THEN&#13;&#10;  IF [Resource]==&quot;Curtailment&quot; THEN&#13;&#10;    -1*Value&#13;&#10;  ELSEIF [Resource]==&quot;Solar&quot; THEN&#13;&#10;    0*[Value]&#13;&#10;  ELSEIF [Resource]==&quot;Wind&quot; THEN&#13;&#10;    0*[Value]&#13;&#10;  ELSE&#13;&#10;    [Value]&#13;&#10;  END&#13;&#10;&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; THEN&#13;&#10;  IF [Value]&lt;0 THEN&#13;&#10;    0*[Value]&#13;&#10;  ELSE&#13;&#10;    [Value]&#13;&#10;  END&#13;&#10;END' />
            </column>
            <column caption='Price' datatype='real' name='[Calculation_889179474271539201]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_prices_combined.csv&quot; THEN&#13;&#10;  [Value]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Resource]' role='dimension' type='nominal' />
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_889179474271539201]' derivation='Avg' name='[avg:Calculation_889179474271539201:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Attribute]' derivation='None' name='[none:Attribute:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_202099068255866880]' derivation='Sum' name='[sum:Calculation_202099068255866880:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;med-night-L-H-8-1275-flexible&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;real-med-morning-L-H-8-1275-flexible&quot;' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Attribute:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_202099068255866880:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_202099068255866880:qk]' field-type='quantitative' max='2200000.1022999999' min='0.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]' value='208' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0m2ojda1ih48r312ma38r1hlijh9].[avg:Calculation_889179474271539201:qk]' max='9000.0' palette='red_green_diverging_10_0' reverse='true' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[avg:Calculation_889179474271539201:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#75a1c7' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_202099068255866880:qk]</rows>
        <cols>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Attribute:nk]</cols>
      </table>
      <simple-id uuid='{599FC51C-18DD-4896-9B26-94620351B8EF}' />
    </worksheet>
    <worksheet name='Net Load Duration inflexible'>
      <table>
        <view>
          <datasources>
            <datasource caption='tab_dam_generator_power_combined' name='federated.0m2ojda1ih48r312ma38r1hlijh9' />
          </datasources>
          <datasource-dependencies datasource='federated.0m2ojda1ih48r312ma38r1hlijh9'>
            <column datatype='string' name='[Attribute]' role='dimension' type='nominal' />
            <column caption='Net Generation [MW]' datatype='real' name='[Calculation_202099068255866880]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_generator_power_combined.csv&quot; THEN&#13;&#10;  IF [Resource]==&quot;Curtailment&quot; THEN&#13;&#10;    -1*Value&#13;&#10;  ELSEIF [Resource]==&quot;Solar&quot; THEN&#13;&#10;    0*[Value]&#13;&#10;  ELSEIF [Resource]==&quot;Wind&quot; THEN&#13;&#10;    0*[Value]&#13;&#10;  ELSE&#13;&#10;    [Value]&#13;&#10;  END&#13;&#10;&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; THEN&#13;&#10;  IF [Value]&lt;0 THEN&#13;&#10;    0*[Value]&#13;&#10;  ELSE&#13;&#10;    [Value]&#13;&#10;  END&#13;&#10;END' />
            </column>
            <column caption='Price' datatype='real' name='[Calculation_889179474271539201]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_prices_combined.csv&quot; THEN&#13;&#10;  [Value]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Resource]' role='dimension' type='nominal' />
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_889179474271539201]' derivation='Avg' name='[avg:Calculation_889179474271539201:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Attribute]' derivation='None' name='[none:Attribute:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_202099068255866880]' derivation='Sum' name='[sum:Calculation_202099068255866880:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;med-night-L-H-8-1275-inflexible&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;real-med-morning-L-H-8-1275-inflexible&quot;' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Attribute:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_202099068255866880:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_202099068255866880:qk]' field-type='quantitative' max='2200000.1022999999' min='0.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]' value='208' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0m2ojda1ih48r312ma38r1hlijh9].[avg:Calculation_889179474271539201:qk]' max='9000.0' palette='red_green_diverging_10_0' reverse='true' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[avg:Calculation_889179474271539201:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#75a1c7' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_202099068255866880:qk]</rows>
        <cols>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Attribute:nk]</cols>
      </table>
      <simple-id uuid='{CBF4B443-7B0D-47C9-B123-41E090ED427D}' />
    </worksheet>
    <worksheet name='Price'>
      <table>
        <view>
          <datasources>
            <datasource caption='tab_dam_generator_power_combined' name='federated.0m2ojda1ih48r312ma38r1hlijh9' />
          </datasources>
          <datasource-dependencies datasource='federated.0m2ojda1ih48r312ma38r1hlijh9'>
            <column datatype='string' name='[Attribute]' role='dimension' type='nominal' />
            <column caption='Representative Days' datatype='datetime' name='[Calculation_1086493432800321539]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF [Timeblock]==&quot;t1&quot; THEN DATEPARSE(&quot;dd.MMMM.yyyy&quot;,&quot;21.April.2037&quot;)&#13;&#10;ELSEIF [Timeblock]==&quot;t2&quot; THEN DATEPARSE(&quot;dd.MMMM.yyyy&quot;,&quot;15.June.2037&quot;)&#13;&#10;ELSEIF [Timeblock]==&quot;t3&quot; THEN DATEPARSE(&quot;dd.MMMM.yyyy&quot;,&quot;13.October.2037&quot;)&#13;&#10;ELSEIF [Timeblock]==&quot;t4&quot; THEN DATEPARSE(&quot;dd.MMMM.yyyy&quot;,&quot;12.December.2037&quot;)&#13;&#10;END' />
            </column>
            <column caption='Time Interval' datatype='string' name='[Calculation_1086493432800645124]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Timeblock]==&quot;t1&quot; THEN&#13;&#10;  [Attribute]&#13;&#10;ELSEIF [Timeblock]==&quot;t2&quot; THEN&#13;&#10;  &quot;t&quot;+STR(INT(RIGHT([Attribute],LEN([Attribute])-1)))&#13;&#10;ELSEIF [Timeblock]==&quot;t3&quot; THEN&#13;&#10;  &quot;t&quot;+STR(INT(RIGHT([Attribute],LEN([Attribute])-1)))&#13;&#10;ELSE&#13;&#10;  &quot;t&quot;+STR(INT(RIGHT([Attribute],LEN([Attribute])-1)))&#13;&#10;END' />
            </column>
            <column caption='Date Time' datatype='datetime' name='[Calculation_889179474267987968]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATEADD(&apos;hour&apos;,INT(RIGHT([Calculation_1086493432800645124],LEN([Calculation_1086493432800645124])-1))-1,[Calculation_1086493432800321539])' />
            </column>
            <column caption='Price' datatype='real' name='[Calculation_889179474271539201]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_prices_combined.csv&quot; THEN&#13;&#10;  [Value]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Timeblock]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_889179474267987968]' derivation='Day' name='[dy:Calculation_889179474267987968:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_889179474267987968]' derivation='Hour' name='[hr:Calculation_889179474267987968:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_889179474271539201]' derivation='Max' name='[max:Calculation_889179474271539201:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_889179474267987968]' derivation='Month' name='[mn:Calculation_889179474267987968:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_889179474267987968]' derivation='Quarter' name='[qr:Calculation_889179474267987968:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_889179474267987968]' derivation='Year' name='[yr:Calculation_889179474267987968:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]'>
            <groupfilter function='level-members' level='[none:Scenario:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0m2ojda1ih48r312ma38r1hlijh9].[max:Calculation_889179474271539201:qk]' field-type='quantitative' scale='log' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0m2ojda1ih48r312ma38r1hlijh9].[max:Calculation_889179474271539201:qk]</rows>
        <cols>([federated.0m2ojda1ih48r312ma38r1hlijh9].[yr:Calculation_889179474267987968:ok] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[qr:Calculation_889179474267987968:ok] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[mn:Calculation_889179474267987968:ok] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[dy:Calculation_889179474267987968:ok] / [federated.0m2ojda1ih48r312ma38r1hlijh9].[hr:Calculation_889179474267987968:ok]))))</cols>
      </table>
      <simple-id uuid='{1B81A435-EA8A-4398-A596-3DE7859F3899}' />
    </worksheet>
    <worksheet name='Price (table)'>
      <table>
        <view>
          <datasources>
            <datasource caption='tab_dam_generator_power_combined' name='federated.0m2ojda1ih48r312ma38r1hlijh9' />
          </datasources>
          <datasource-dependencies datasource='federated.0m2ojda1ih48r312ma38r1hlijh9'>
            <column datatype='string' name='[Attribute]' role='dimension' type='nominal' />
            <column caption='Charging Time' datatype='string' name='[Calculation_1086493432799272960]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-evening-&quot;) THEN&#13;&#10;  &quot;12-6 PM&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-morning&quot;) THEN&#13;&#10;  &quot;12-6 AM&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='Charging Type' datatype='string' name='[Calculation_1086493432799367169]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-flexible&quot;) THEN&#13;&#10;  &quot;Flexible&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-inflexible&quot;) THEN&#13;&#10;  &quot;Inflexible&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='EV Adoption Level' datatype='string' name='[Calculation_1086493432800079874]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;low-&quot;) THEN&#13;&#10;  &quot;Low&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;med-&quot;) THEN&#13;&#10;  &quot;Med&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;high-&quot;) THEN&#13;&#10;  &quot;High&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='Representative Days' datatype='datetime' name='[Calculation_1086493432800321539]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF [Timeblock]==&quot;t1&quot; THEN DATEPARSE(&quot;dd.MMMM.yyyy&quot;,&quot;21.April.2037&quot;)&#13;&#10;ELSEIF [Timeblock]==&quot;t2&quot; THEN DATEPARSE(&quot;dd.MMMM.yyyy&quot;,&quot;15.June.2037&quot;)&#13;&#10;ELSEIF [Timeblock]==&quot;t3&quot; THEN DATEPARSE(&quot;dd.MMMM.yyyy&quot;,&quot;13.October.2037&quot;)&#13;&#10;ELSEIF [Timeblock]==&quot;t4&quot; THEN DATEPARSE(&quot;dd.MMMM.yyyy&quot;,&quot;12.December.2037&quot;)&#13;&#10;END' />
            </column>
            <column caption='Time Interval' datatype='string' name='[Calculation_1086493432800645124]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Timeblock]==&quot;t1&quot; THEN&#13;&#10;  [Attribute]&#13;&#10;ELSEIF [Timeblock]==&quot;t2&quot; THEN&#13;&#10;  &quot;t&quot;+STR(INT(RIGHT([Attribute],LEN([Attribute])-1)))&#13;&#10;ELSEIF [Timeblock]==&quot;t3&quot; THEN&#13;&#10;  &quot;t&quot;+STR(INT(RIGHT([Attribute],LEN([Attribute])-1)))&#13;&#10;ELSE&#13;&#10;  &quot;t&quot;+STR(INT(RIGHT([Attribute],LEN([Attribute])-1)))&#13;&#10;END' />
            </column>
            <column caption='Date Time' datatype='datetime' name='[Calculation_889179474267987968]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATEADD(&apos;hour&apos;,INT(RIGHT([Calculation_1086493432800645124],LEN([Calculation_1086493432800645124])-1))-1,[Calculation_1086493432800321539])' />
            </column>
            <column caption='Price' datatype='real' name='[Calculation_889179474271539201]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_prices_combined.csv&quot; THEN&#13;&#10;  [Value]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Timeblock]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column aggregation='Sum' datatype='integer' name='[Zone]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_889179474267987968]' derivation='Day' name='[dy:Calculation_889179474267987968:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_889179474267987968]' derivation='Hour' name='[hr:Calculation_889179474267987968:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_889179474271539201]' derivation='Max' name='[max:Calculation_889179474271539201:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_889179474267987968]' derivation='Month' name='[mn:Calculation_889179474267987968:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1086493432799272960]' derivation='None' name='[none:Calculation_1086493432799272960:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1086493432799367169]' derivation='None' name='[none:Calculation_1086493432799367169:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1086493432800079874]' derivation='None' name='[none:Calculation_1086493432800079874:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[Zone]' derivation='None' name='[none:Zone:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_889179474267987968]' derivation='Quarter' name='[qr:Calculation_889179474267987968:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_889179474267987968]' derivation='Year' name='[yr:Calculation_889179474267987968:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;None&quot;</bucket>
              <bucket>&quot;12-3 AM&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;None&quot;</bucket>
              <bucket>&quot;Flexible&quot;</bucket>
              <bucket>&quot;Inflexible&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;None&quot;</bucket>
              <bucket>&quot;Med&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]'>
            <groupfilter function='level-members' level='[none:Scenario:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0m2ojda1ih48r312ma38r1hlijh9].[max:Calculation_889179474271539201:qk]' field-type='quantitative' scale='log' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[max:Calculation_889179474271539201:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk] / [federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Zone:ok])))</rows>
        <cols>([federated.0m2ojda1ih48r312ma38r1hlijh9].[yr:Calculation_889179474267987968:ok] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[qr:Calculation_889179474267987968:ok] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[mn:Calculation_889179474267987968:ok] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[dy:Calculation_889179474267987968:ok] / [federated.0m2ojda1ih48r312ma38r1hlijh9].[hr:Calculation_889179474267987968:ok]))))</cols>
      </table>
      <simple-id uuid='{8DC4007B-3FAF-4BA6-9574-498A04CE69F5}' />
    </worksheet>
    <worksheet name='State of Charge'>
      <table>
        <view>
          <datasources>
            <datasource caption='tab_dam_generator_power_combined' name='federated.0m2ojda1ih48r312ma38r1hlijh9' />
          </datasources>
          <datasource-dependencies datasource='federated.0m2ojda1ih48r312ma38r1hlijh9'>
            <column datatype='string' name='[Attribute]' role='dimension' type='nominal' />
            <column caption='Charging Time' datatype='string' name='[Calculation_1086493432799272960]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-evening-&quot;) THEN&#13;&#10;  &quot;12-6 PM&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-morning&quot;) THEN&#13;&#10;  &quot;12-6 AM&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='Charging Type' datatype='string' name='[Calculation_1086493432799367169]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-flexible&quot;) THEN&#13;&#10;  &quot;Flexible&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-inflexible&quot;) THEN&#13;&#10;  &quot;Inflexible&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='EV Adoption Level' datatype='string' name='[Calculation_1086493432800079874]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;low-&quot;) THEN&#13;&#10;  &quot;Low&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;med-&quot;) THEN&#13;&#10;  &quot;Med&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;high-&quot;) THEN&#13;&#10;  &quot;High&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='Representative Days' datatype='datetime' name='[Calculation_1086493432800321539]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF [Timeblock]==&quot;t1&quot; THEN DATEPARSE(&quot;dd.MMMM.yyyy&quot;,&quot;21.April.2037&quot;)&#13;&#10;ELSEIF [Timeblock]==&quot;t2&quot; THEN DATEPARSE(&quot;dd.MMMM.yyyy&quot;,&quot;15.June.2037&quot;)&#13;&#10;ELSEIF [Timeblock]==&quot;t3&quot; THEN DATEPARSE(&quot;dd.MMMM.yyyy&quot;,&quot;13.October.2037&quot;)&#13;&#10;ELSEIF [Timeblock]==&quot;t4&quot; THEN DATEPARSE(&quot;dd.MMMM.yyyy&quot;,&quot;12.December.2037&quot;)&#13;&#10;END' />
            </column>
            <column caption='Time Interval' datatype='string' name='[Calculation_1086493432800645124]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Timeblock]==&quot;t1&quot; THEN&#13;&#10;  [Attribute]&#13;&#10;ELSEIF [Timeblock]==&quot;t2&quot; THEN&#13;&#10;  &quot;t&quot;+STR(INT(RIGHT([Attribute],LEN([Attribute])-1)))&#13;&#10;ELSEIF [Timeblock]==&quot;t3&quot; THEN&#13;&#10;  &quot;t&quot;+STR(INT(RIGHT([Attribute],LEN([Attribute])-1)))&#13;&#10;ELSE&#13;&#10;  &quot;t&quot;+STR(INT(RIGHT([Attribute],LEN([Attribute])-1)))&#13;&#10;END' />
            </column>
            <column caption='Date Time' datatype='datetime' name='[Calculation_889179474267987968]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATEADD(&apos;hour&apos;,INT(RIGHT([Calculation_1086493432800645124],LEN([Calculation_1086493432800645124])-1))-1,[Calculation_1086493432800321539])' />
            </column>
            <column caption='Storage Level' datatype='real' name='[Calculation_889179474278793218]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_storage_unit_soc_combined.csv&quot; THEN&#13;&#10;  [Value]&#13;&#10;END' />
            </column>
            <column caption='Max Storage Level' datatype='real' name='[Calculation_889179474279444483]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_storage_unit_soc_combined.csv&quot; THEN&#13;&#10;  {FIXED [Resource],[Zone]: MAX([Value])}&#13;&#10;END' />
            </column>
            <column caption='State of Charge' datatype='real' name='[Calculation_889179474279563268]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_889179474278793218]/[Calculation_889179474279444483]' />
            </column>
            <column caption='Weighted State of Charge' datatype='real' name='[Calculation_889179474279690245]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Sum([Calculation_889179474279563268]*[Calculation_889179474279444483])/SUM([Calculation_889179474279444483])' />
            </column>
            <column caption='Storage Label' datatype='string' name='[Calculation_889179474280439814]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_storage_unit_soc_combined.csv&quot; THEN&#13;&#10;  [Resource]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Resource]' role='dimension' type='nominal' />
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Timeblock]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column aggregation='Sum' datatype='integer' name='[Zone]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_889179474267987968]' derivation='Day' name='[dy:Calculation_889179474267987968:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_889179474267987968]' derivation='Hour' name='[hr:Calculation_889179474267987968:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_889179474267987968]' derivation='Month' name='[mn:Calculation_889179474267987968:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1086493432799272960]' derivation='None' name='[none:Calculation_1086493432799272960:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1086493432799367169]' derivation='None' name='[none:Calculation_1086493432799367169:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1086493432800079874]' derivation='None' name='[none:Calculation_1086493432800079874:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_889179474280439814]' derivation='None' name='[none:Calculation_889179474280439814:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_889179474267987968]' derivation='Quarter' name='[qr:Calculation_889179474267987968:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_889179474279690245]' derivation='User' name='[usr:Calculation_889179474279690245:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_889179474267987968]' derivation='Year' name='[yr:Calculation_889179474267987968:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[mn:Calculation_889179474267987968:ok]'>
            <groupfilter function='member' level='[mn:Calculation_889179474267987968:ok]' member='12' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;None&quot;</bucket>
              <bucket>&quot;Med&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;default-L-H-8-1275&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;med-night-L-H-8-1275-flexible&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0m2ojda1ih48r312ma38r1hlijh9].[mn:Calculation_889179474267987968:ok]</column>
            <column>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_889179474280439814:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>(([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk] / [federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk])) * [federated.0m2ojda1ih48r312ma38r1hlijh9].[usr:Calculation_889179474279690245:qk])</rows>
        <cols>([federated.0m2ojda1ih48r312ma38r1hlijh9].[yr:Calculation_889179474267987968:ok] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[qr:Calculation_889179474267987968:ok] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[mn:Calculation_889179474267987968:ok] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[dy:Calculation_889179474267987968:ok] / [federated.0m2ojda1ih48r312ma38r1hlijh9].[hr:Calculation_889179474267987968:ok]))))</cols>
      </table>
      <simple-id uuid='{4798B9FC-87CC-4355-8716-BCDF2D867AF9}' />
    </worksheet>
    <worksheet name='Unmet Demand'>
      <table>
        <view>
          <datasources>
            <datasource caption='tab_dam_generator_power_combined' name='federated.0m2ojda1ih48r312ma38r1hlijh9' />
          </datasources>
          <datasource-dependencies datasource='federated.0m2ojda1ih48r312ma38r1hlijh9'>
            <column caption='Charging Time' datatype='string' name='[Calculation_1086493432799272960]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-evening-&quot;) THEN&#13;&#10;  &quot;12-6 PM&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-morning&quot;) THEN&#13;&#10;  &quot;12-6 AM&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='Charging Type' datatype='string' name='[Calculation_1086493432799367169]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-flexible&quot;) THEN&#13;&#10;  &quot;Flexible&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-inflexible&quot;) THEN&#13;&#10;  &quot;Inflexible&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='EV Adoption Level' datatype='string' name='[Calculation_1086493432800079874]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;low-&quot;) THEN&#13;&#10;  &quot;Low&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;med-&quot;) THEN&#13;&#10;  &quot;Med&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;high-&quot;) THEN&#13;&#10;  &quot;High&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='VRE Addition' datatype='string' name='[Calculation_803611097201504256]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;wind&quot;) THEN&#13;&#10;  &quot;Added Wind&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;solar&quot;) THEN&#13;&#10;  &quot;Added Solar&quot;&#13;&#10;ELSE&#13;&#10;  &quot;Default VRE&quot;&#13;&#10;END' />
            </column>
            <column caption='Generation for Load [MW]' datatype='real' name='[Calculation_884112924427558912]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_generator_power_combined.csv&quot; THEN&#13;&#10;  IF [Resource]==&quot;Curtailment&quot; THEN&#13;&#10;    -1*Value&#13;&#10;  ELSE&#13;&#10;    [Value]&#13;&#10;  END&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; THEN&#13;&#10;  [Value]&#13;&#10;END' />
            </column>
            <column caption='Generation Labels' datatype='string' name='[Calculation_884112924428046337]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_generator_power_combined.csv&quot; THEN&#13;&#10;  [Resource]&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&gt;=0 THEN&#13;&#10;  [Resource]&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&lt;0 THEN&#13;&#10;   [Resource]+&quot; Charging&quot;&#13;&#10;END' />
            </column>
            <column caption='Weighted Generation for Load [MW]' datatype='real' name='[Calculation_884112924430045186]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_931963670410043401]*[Calculation_884112924427558912]' />
            </column>
            <column caption='Weights' datatype='real' name='[Calculation_931963670410043401]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Timeblock]&#13;&#10;  WHEN &quot;t1&quot; THEN 36 &#13;&#10;  WHEN &quot;t2&quot; THEN 14&#13;&#10;  WHEN &quot;t3&quot; THEN 9.18368717&#13;&#10;  WHEN &quot;t4&quot; THEN 13&#13;&#10;END' />
            </column>
            <column caption='Generation Labels (group)' datatype='string' name='[Generation Labels (group) (copy)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Calculation_884112924428046337]' new-bin='true'>
                <bin default-name='false' value='&quot;Batteries&quot;'>
                  <value>&quot;Batteries&quot;</value>
                  <value>&quot;Batteries Charging&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;CCGT&quot;'>
                  <value>&quot;CCGT New&quot;</value>
                  <value>&quot;CCGT Old&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Coal&quot;'>
                  <value>&quot;Coal new&quot;</value>
                  <value>&quot;Coal Old&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Diesel&quot;'>
                  <value>&quot;Backup&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Hydro&quot;'>
                  <value>&quot;Hydro Reservoir&quot;</value>
                  <value>&quot;Hydro Reservoir Charging&quot;</value>
                  <value>&quot;Hydro Run of River&quot;</value>
                  <value>&quot;Pumped Hydro Storage&quot;</value>
                  <value>&quot;Pumped Hydro Storage Charging&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Nuclear&quot;'>
                  <value>&quot;Nuclear New&quot;</value>
                  <value>&quot;Nuclear Old&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Other &quot;'>
                  <value>&quot;Biomass&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Solar&quot;'>
                  <value>&quot;Curtailment&quot;</value>
                  <value>&quot;Solar&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Resource]' role='dimension' type='nominal' />
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Timeblock]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1086493432799272960]' derivation='None' name='[none:Calculation_1086493432799272960:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1086493432799367169]' derivation='None' name='[none:Calculation_1086493432799367169:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1086493432800079874]' derivation='None' name='[none:Calculation_1086493432800079874:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_803611097201504256]' derivation='None' name='[none:Calculation_803611097201504256:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_884112924430045186]' derivation='Sum' name='[pcto:sum:Calculation_884112924430045186:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_884112924430045186]' derivation='Sum' name='[sum:Calculation_884112924430045186:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group) (copy)]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Generation Labels (group) (copy)]' />
              <groupfilter function='union'>
                <groupfilter from='&quot;Batteries&quot;' function='range' level='[Generation Labels (group) (copy)]' to='&quot;Solar&quot;' />
                <groupfilter function='member' level='[Generation Labels (group) (copy)]' member='&quot;Wind&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group) (copy)]' direction='ASC'>
            <dictionary>
              <bucket>%null%</bucket>
              <bucket>&quot;Unmet Demand&quot;</bucket>
              <bucket>&quot;Curtailment&quot;</bucket>
              <bucket>&quot;Solar&quot;</bucket>
              <bucket>&quot;Wind&quot;</bucket>
              <bucket>&quot;Batteries&quot;</bucket>
              <bucket>&quot;Diesel&quot;</bucket>
              <bucket>&quot;Other &quot;</bucket>
              <bucket>&quot;CCGT&quot;</bucket>
              <bucket>&quot;Hydro&quot;</bucket>
              <bucket>&quot;Coal&quot;</bucket>
              <bucket>&quot;Nuclear&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_1086493432799272960:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_1086493432799367169:nk]' member='&quot;Flexible&quot;' />
              <groupfilter function='member' level='[none:Calculation_1086493432799367169:nk]' member='&quot;Inflexible&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_1086493432800079874:nk]' />
          </filter>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;None&quot;</bucket>
              <bucket>&quot;Med&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_803611097201504256:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_803611097201504256:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]'>
            <groupfilter function='level-members' level='[none:Scenario:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]</column>
            <column>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk]</column>
            <column>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk]</column>
            <column>[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group) (copy)]</column>
            <column>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]</column>
            <column>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_803611097201504256:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0m2ojda1ih48r312ma38r1hlijh9].[pcto:sum:Calculation_884112924430045186:qk:2]' value='p0%' />
            <format attr='width' field='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_803611097201504256:nk]' value='54' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group) (copy)]' />
              <text column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[pcto:sum:Calculation_884112924430045186:qk:2]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_884112924430045186:qk]</rows>
        <cols>([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk] / [federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_803611097201504256:nk])))</cols>
      </table>
      <simple-id uuid='{C3192725-CCA9-46B3-941E-608F2409E605}' />
    </worksheet>
    <worksheet name='Weighted Load'>
      <table>
        <view>
          <datasources>
            <datasource caption='tab_dam_generator_power_combined' name='federated.0m2ojda1ih48r312ma38r1hlijh9' />
          </datasources>
          <datasource-dependencies datasource='federated.0m2ojda1ih48r312ma38r1hlijh9'>
            <column caption='Charging Time' datatype='string' name='[Calculation_1086493432799272960]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-evening-&quot;) THEN&#13;&#10;  &quot;12-6 PM&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-morning&quot;) THEN&#13;&#10;  &quot;12-6 AM&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='Charging Type' datatype='string' name='[Calculation_1086493432799367169]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-flexible&quot;) THEN&#13;&#10;  &quot;Flexible&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-inflexible&quot;) THEN&#13;&#10;  &quot;Inflexible&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='EV Adoption Level' datatype='string' name='[Calculation_1086493432800079874]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;low-&quot;) THEN&#13;&#10;  &quot;Low&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;med-&quot;) THEN&#13;&#10;  &quot;Med&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;high-&quot;) THEN&#13;&#10;  &quot;High&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='VRE Addition' datatype='string' name='[Calculation_803611097201504256]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;wind&quot;) THEN&#13;&#10;  &quot;Added Wind&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;solar&quot;) THEN&#13;&#10;  &quot;Added Solar&quot;&#13;&#10;ELSE&#13;&#10;  &quot;Default VRE&quot;&#13;&#10;END' />
            </column>
            <column caption='Charging [MW]' datatype='real' name='[Calculation_884112924457828355]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&lt;0 THEN&#13;&#10;  [Value]&#13;&#10;ELSE&#13;&#10;  0&#13;&#10;END' />
            </column>
            <column caption='Inflexible Load [MW]' datatype='real' name='[Calculation_931963670409289734]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_loads_combined.csv&quot; THEN&#13;&#10;  [Value]&#13;&#10;ELSE&#13;&#10;  0&#13;&#10;END' />
            </column>
            <column caption='Flexible Load [MW]' datatype='real' name='[Calculation_931963670409551879]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_demand_response_load_combined.csv&quot; THEN&#13;&#10;  [Value]&#13;&#10;ELSE&#13;&#10;  0&#13;&#10;END' />
            </column>
            <column caption='Load Labels' datatype='string' name='[Calculation_931963670409670664]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_loads_combined.csv&quot; THEN&#13;&#10;  &quot;Inflexible&quot;&#13;&#10;ELSEIF [Table Name]==&quot;tab_dam_demand_response_load_combined.csv&quot; THEN&#13;&#10;  &quot;Flexible&quot;&#13;&#10;ELSEIF [Table Name]==&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&lt;0 THEN&#13;&#10;  &quot;Charging&quot;&#13;&#10;END' />
            </column>
            <column caption='Weights' datatype='real' name='[Calculation_931963670410043401]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Timeblock]&#13;&#10;  WHEN &quot;t1&quot; THEN 36 &#13;&#10;  WHEN &quot;t2&quot; THEN 14&#13;&#10;  WHEN &quot;t3&quot; THEN 9.18368717&#13;&#10;  WHEN &quot;t4&quot; THEN 13&#13;&#10;END' />
            </column>
            <column caption='Total Load [MW]' datatype='real' name='[Calculation_931963670410522634]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_931963670409551879]+[Calculation_931963670409289734]-[Calculation_884112924457828355]' />
            </column>
            <column caption='Weighted Load [MW]' datatype='real' name='[Calculation_931963670410706955]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_931963670410043401]*[Calculation_931963670410522634]' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Timeblock]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1086493432799272960]' derivation='None' name='[none:Calculation_1086493432799272960:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1086493432799367169]' derivation='None' name='[none:Calculation_1086493432799367169:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1086493432800079874]' derivation='None' name='[none:Calculation_1086493432800079874:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_803611097201504256]' derivation='None' name='[none:Calculation_803611097201504256:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_931963670409670664]' derivation='None' name='[none:Calculation_931963670409670664:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_931963670410706955]' derivation='Sum' name='[sum:Calculation_931963670410706955:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_1086493432800079874:nk]' />
          </filter>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;None&quot;</bucket>
              <bucket>&quot;Med&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_803611097201504256:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_803611097201504256:nk]' />
          </filter>
          <filter class='categorical' column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_931963670409670664:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_931963670409670664:nk]' />
              <groupfilter function='member' level='[none:Calculation_931963670409670664:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_931963670409670664:nk]</column>
            <column>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_803611097201504256:nk]</column>
            <column>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_931963670409670664:nk]' />
              <text column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_931963670410706955:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_931963670410706955:qk]</rows>
        <cols>([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk] / [federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_803611097201504256:nk])))</cols>
      </table>
      <simple-id uuid='{D20E3FAC-BC3D-4C5E-AF64-5AB27D23BEEB}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Load Duration Curves'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='tab_dam_generator_power_combined' name='federated.0m2ojda1ih48r312ma38r1hlijh9' />
      </datasources>
      <datasource-dependencies datasource='federated.0m2ojda1ih48r312ma38r1hlijh9'>
        <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
        <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='5' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='3' type='layout-basic' w='82400' x='800' y='1000'>
              <zone h='49000' id='1' name='Net Load Duration inflexible' w='82400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='7' name='Net Load Duration flexible' w='82400' x='800' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='4' is-fixed='true' param='vert' type='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='8750' id='6' name='Net Load Duration inflexible' param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]' type='filter' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                  <format attr='background-color' value='#ffffff' />
                </zone-style>
              </zone>
              <zone h='8750' id='8' name='Net Load Duration flexible' param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]' type='filter' w='16000' x='83200' y='9750'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                  <format attr='background-color' value='#ffffff' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{57EFBDF4-0229-446A-B48B-8CE6FF01EF98}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Load'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='100'>
            <card param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_803611097201504256:nk]' type='filter' />
            <card pane-specification-id='1' param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_931963670409670664:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_803611097201504256:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_931963670409670664:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{364D6FFF-3EA5-41AF-B33A-219C6D8FB0CD}' />
    </window>
    <window class='worksheet' name='Load for Storage'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_931963670409670664:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_803611097201504256:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_931963670409670664:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Timeblock:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{59E472A1-26FF-4A80-9B4C-99FE160DEC3E}' />
    </window>
    <window class='worksheet' name='Weighted Load'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]' type='filter' />
            <card param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_803611097201504256:nk]' type='filter' />
            <card pane-specification-id='1' param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_931963670409670664:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_803611097201504256:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_931963670409670664:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3C87C163-E6B0-4FF7-A76D-F8555F248314}' />
    </window>
    <window class='worksheet' name='Dispatch with Load'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='35'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='240'>
            <card param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk]' type='filter' />
            <card param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_803611097201504256:nk]' type='filter' />
            <card param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]' type='filter' />
            <card param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[mn:Calculation_889179474267987968:ok]' type='filter' />
            <card pane-specification-id='2' param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[:Measure Names]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[mn:Calculation_889179474267987968:ok]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Attribute:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800321539:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800645124:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_803611097201504256:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Timeblock:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[tyr:Calculation_889179474267987968:qk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[yr:Calculation_889179474267987968:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D892E6A1-35D3-4E79-8AAD-66ECD3C7D847}' />
    </window>
    <window class='worksheet' name='Dispatch with Load (no charging)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='48'>
            <card type='columns' />
          </strip>
          <strip size='36'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='250'>
            <card param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk]' type='filter' />
            <card param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]' type='filter' />
            <card param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk]' type='filter' />
            <card param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_803611097201504256:nk]' type='filter' />
            <card param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Representative Days (copy):nk]' type='filter' />
            <card pane-specification-id='2' param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[:Measure Names]' type='color' />
            <card pane-specification-id='1' param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[:Measure Names]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group)]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Attribute:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800321539:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800645124:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_803611097201504256:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Timeblock:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[tyr:Calculation_889179474267987968:qk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[yr:Calculation_889179474267987968:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5FE2BC45-BB5D-4629-94A5-D7B132965C25}' />
    </window>
    <window class='worksheet' name='Dispatch with Price'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]' type='filter' />
            <card pane-specification-id='2' param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[:Measure Names]' type='color' />
            <card pane-specification-id='1' param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[:Measure Names]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Attribute:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800321539:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800645124:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Timeblock:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[tyr:Calculation_889179474267987968:qk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[yr:Calculation_889179474267987968:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F7B21278-5EB6-44EE-96B8-1A52FF33F0AE}' />
    </window>
    <window class='worksheet' name='Price'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]' type='filter' />
            <card pane-specification-id='2' param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Attribute:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800321539:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800645124:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Timeblock:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[tyr:Calculation_889179474267987968:qk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[yr:Calculation_889179474267987968:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CE4DB763-114F-4368-80EB-C96B606F9BF7}' />
    </window>
    <window class='worksheet' name='Price (table)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{08CA8AC4-3189-4C41-A333-4822099FF7B2}' />
    </window>
    <window class='worksheet' name='Annual Generation (Absolute) by Type'>
      <cards>
        <edge name='left'>
          <strip size='244'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]' type='filter' />
            <card param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_803611097201504256:nk]' type='filter' />
            <card param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]' type='filter' />
            <card param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Representative Days (copy):nk]' type='filter' />
            <card param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk]' type='filter' />
            <card param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk]' type='filter' />
            <card pane-specification-id='1' param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group) (copy)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[:Measure Names]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group) (copy)]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Attribute:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_803611097201504256:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Timeblock:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{52FAD36B-F799-4516-8C19-7B1275ED2157}' />
    </window>
    <window class='worksheet' name='Unmet Demand'>
      <cards>
        <edge name='left'>
          <strip size='244'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_803611097201504256:nk]' type='filter' />
            <card param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]' type='filter' />
            <card param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk]' type='filter' />
            <card param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk]' type='filter' />
            <card pane-specification-id='1' param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group) (copy)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[:Measure Names]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group) (copy)]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Attribute:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_803611097201504256:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Timeblock:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9D3ECA8A-190F-4C6F-AA43-E3B405033B10}' />
    </window>
    <window class='worksheet' name='Annual Generation (Percentage) by Type'>
      <cards>
        <edge name='left'>
          <strip size='244'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group) (copy)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[:Measure Names]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group) (copy)]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Attribute:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_803611097201504256:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Timeblock:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C351662A-5563-4D6F-BB80-EF16B262F0CD}' />
    </window>
    <window class='worksheet' maximized='true' name='Generation (Absolute) by Type'>
      <cards>
        <edge name='left'>
          <strip size='244'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_803611097201504256:nk]' type='filter' />
            <card pane-specification-id='1' param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group) (copy)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[:Measure Names]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group) (copy)]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Attribute:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_803611097201504256:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Representative Days (copy):nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Timeblock:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[yr:Calculation_1086493432800321539:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8E7195A0-DFDA-4DF2-8E3E-82AF5DB30F44}' />
    </window>
    <window class='worksheet' name='Generation (Percentage) by Type'>
      <cards>
        <edge name='left'>
          <strip size='244'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Representative Days (copy):nk]' type='filter' />
            <card param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_803611097201504256:nk]' type='filter' />
            <card pane-specification-id='1' param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group) (copy)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[:Measure Names]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group) (copy)]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Attribute:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_803611097201504256:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Representative Days (copy):nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Timeblock:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D07C2676-3872-4FF3-BB80-18250A501A06}' />
    </window>
    <window class='worksheet' name='State of Charge'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_889179474280439814:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group) (copy)]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[mn:Calculation_889179474267987968:ok]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_889179474280439814:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[yr:Calculation_889179474267987968:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{20378E64-8CDF-4112-8CD1-6772EB553AD3}' />
    </window>
    <window class='worksheet' name='Net Load Duration inflexible'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='258'>
            <card param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[avg:Calculation_889179474271539201:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[avg:Calculation_889179474271539201:qk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Attribute:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Resource:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3DB457C3-02DA-470B-8DEC-4CEA2B1AD1A7}' />
    </window>
    <window class='worksheet' name='Net Load Duration flexible'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='258'>
            <card param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[avg:Calculation_889179474271539201:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[avg:Calculation_889179474271539201:qk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Attribute:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Resource:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E2493FFE-3449-46FE-9C70-A64D0C9A540E}' />
    </window>
    <window class='dashboard' name='Load Duration Curves'>
      <viewpoints>
        <viewpoint name='Net Load Duration flexible'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Net Load Duration inflexible'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{F58D72AF-0E22-4709-807B-FC099243BA91}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Annual Generation (Absolute) by Type' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Annual Generation (Percentage) by Type' width='133'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dispatch with Load' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy92a9kWXaf9+3hjDHeOefMyqzq6qpuVrPZZLMpSiItiRYoAn6wYcA2YBuG
      /eIX+8F/g59t+EF+MmAYHgQTggQZEmiYNkgKkE2xye7qZlV3ZVVW5Zx55xvTGffghxN3ynmI
      rMysG9/Ng4i898SJHSf22sPaa/228N575sw5ocjXXYA5c14ncwOYc6KZG8CcE83cAOacaOYG
      MOdEMzeAOSeauQG8Akaj0esuwpxnZG4Ar4D50srbw9wA5pxo5gYw50QzN4A5J5q5Acw50cwN
      YM6JZm4Ac040cwOYc6KZG8CcE83cAOacaOYGMOdEMzeAOSeauQHMOdHMDWDOiWZuAHNONPp1
      F2DO2413htGkQPmacQVrywuvu0jPxbwHmPNSVGXJ3mCAtZZ79+697uI8N3MDmPNSeOfY2lgn
      Kyrqun7dxXluxFwZbvYMh0O63e7rLsbXgrWGqqrRWuOBMAhed5GeiwMDGI1G81S+GZHnOUmS
      vO5izHkGDibBnU7ndZbjG8dJ6QHeduZeoBkz2rjLtg34JtR/7z1lWZFlGVmWoQNNoAPSNEHr
      gCB4+6vP2/8J3jBUqLjzs0955/TvvO6iPBPOOeq6xntPVdWUZYH3MMkmZOM9hNkhEVskaoDz
      goHrsuXbONXHkpKkHZRSSKlIkhjvHEmaEscxWmuEEK/7Iz6RuQHMmNH6XYKls6+7GE/EOsd4
      NGYwHDAebGLrIaHICGSJcDmxzmn7PZbUGB0ZHlWHvYfaaSgDKhtRuxgzjChtwpAOlVhGBD1a
      rQ5pmtLudIjC8I0ziLkBzBDncv7f/+8Tlj98/3UXBWiGMNZarLUAlFXFcDBkuLeBNrfoqluc
      V5voxD73tYWAUBnAEMr88A96/72hdhH5XpfJ3hIb/jxx5xxLS8t0Om2kfDkPvLUOYxq3a14U
      FHmB1pqyLEnTlCSJcc5NeycJCODQybPfO83doLPEe3Y21sk9rC0vf+3vXZYl49GIbDIhy0YE
      gaCuC2ydEaqKUJbE3KMl76Pl1+ezt87jvSD3ywz9u9jgEt3eEu12C6UUSqnpZwCPR0qJ1sfb
      ZmMMk8mEySRjOByyvbvNcDwkK8bISDTDOOnQQUCn20EYiSYkTVKklDjrsdZgjSXQAYHWCOS8
      B5gpQiBtweZuxtlTpyiKks3NTaQUWGsx1uKsw3mHlBIpJUpKlFJ4D1VVUVYVpq6bc/FIKY4c
      4KylLh1aB6StlDiKcM6xub7Op7/8Jfduf04v3GGhNSEJDIEWKCVQSiKFwFpHbSy1cdR181jV
      9vComscsrxlPKsZZRV7UFKXBGIex08M4srwmCBRhIFFqekiBc/7YNa1xCCmaFleA0G1++KN/
      g3cuX8Y7gQOEUCgV0Ol0WFlZodfrEkUxrXabuqq4dfcW1+98xXg8wFeWJIzp9jrEQYQsAxKh
      mx7PW3Z3NygpqJXBCAM0cx1rLM5YjLdYYVEtPTeAWSO8paodABtb6/yn/8V/wmBrSDZsvChp
      JyVuxU1lkAIpJFIKEALvfXNMf5yzFHlBVVTUZY2rcrwV4EM6nQ5LZxc5dWmVtYtrTOox4+EQ
      U1rKLId8j1XGtHSEc2CsxzmPVpJAS4JAHTyG0yMIFK0kJAoVaRLQTkNaaUgaa6JQEwQKrSRa
      S7SSSCXAN3MKaz3GOqx1SCkOrhkGzRBEiGZI5nwzfGkM8T5lZShLS1kZisqQ5TWT+zmfXctZ
      V6uMxQLdyS61P0U/6rMg2xTkuMIwLHcZC0FdlZRljnceqSOkUrRabbTWhCLAu+Z+1jWUpcGU
      BmtqrKjmBjBrrLGI6fh2pd/n97975eBvpjZUZY0xpunup6NP7z1aSuJQEWpJEipakaabBvTa
      Ca0kottO6aXbCNawQpOVltE4Y5SX7I4KNkvHIImo1lJcPyVZ7NFtRayJHd4NJ5yJA7R6vZNQ
      IQRKgJIKAkWzVBhN74FjUGZ8VUjWR8vc3RO0S8NFV/Feq0ZKQaBGdNsxsRZIb5E4BB4pPJIQ
      AOMVBkXhDOOipDIWLUFLgRIO6Q2BhCRKUGI+CZ4xHiugnDTq0LH2/Oe/vYxQLx8e4CnxVEia
      CedCAk0NitivRPsY67gx3OFnu55fpG3uLF6mXQ45Kwck0hFKUHiUcERYeoEkCWKk+Hrdlt57
      jK24lZX8ZLNisCs54wUfBZp/q9sm7ccAODyCHEECZE+8ZkAzMe+okpUn3vZmaHTMAGyZM649
      rsrp9BbQqmnJiqIgjuMX+Yhsb2/T7/e5dfMWZy9cRHnDrTvrnL9wnnw8QMctJsMh3XbEuJL0
      O08OIVi/exMfJHRbXdL08Iu3dYkRGulqkCGBfkYvg3fs7o1YWOhRFgVhHFMe+bymrvFCUFc1
      VVUSRTFRFB54MbxzVMYQhU0LhIg5c+bU89+qpxWTXQT9ZzpXK8mVXsoVYLso+fMb1/gq7TBY
      PPNI74vMK1I/pi9zFlVFT9Yo3ANnCQwSi8IiqBxUHrTwhEKgBSgsGovg6X4Vj+DGsOb6umHN
      Jfx2p8PptUd/94Iuno2pAcyWYwZQDsfcGo3It+5z4fw7DLKKRBnGteCD9y6/wOU9k/GIVrtL
      K1LsjgryzRtkIgE8W5vrqKTHxq3brCy3KMKFpxrA7s4OC6dXuXPjHjUla6srSKWYbN1hY2JY
      XOiiZcQkL/jWe+/wtPZsvH2fW9sl2IKvbq6zutJlMC5JtCftLnD/zl0ufusDRtv32NocsLi2
      QqgF+XBE2l9ksLlBe+UU59Yar8+nP/7XxO++z4vcLXhQWt3v/8NS443D+wIp98fVYuqjP/yU
      D7bgS3HIP4hD8tryVze/JLfHK7Z3Du8bN6gDtqbHq0Yg+Favy++utR759wfvgxce5xzONY4E
      6z3OgfNQO0HpFQJoKUOgGjenkvLA++nh8PXOYz049+AQSAgCV1AlC9y/e4udDFb6IUHae8GP
      6dlav481lnvbe1w6H+BVRLa3Q5avsrk9RCcVS0tddscF3eWnd7/9pTXWlrrcufoJd3eGtNoR
      ldGoqgYsWVZSjjfZHtVcee+dp47x7m/vUu2NuS8WkFIyGo2QUnL1l19y5tIlLAIBVNmE1VNL
      7E1q2rEj7S5isl3yytM9KLbgo1//Ph9fvQVA5QP+9e4yQjy9N3JIjNBYNLVXVF5TeY0RAQho
      B1tsmCs4FJoK7WukN2hfo6mJpCEUTfusfY3CPGT8gV7mTYpeWK9hffv47yzq2H0ovab2AVpf
      QuIY+DPUhBgR4GWAlxoQh22AdagqJ3YTQp+jfI0VQdM3yQBDgBEhbvr6+TrAjNn86gt2rOXK
      pSuUec4//cM/fCYDeBK96C7jag3r1YxK+XayFN9gu7g402u+Qe3BN4MoUWxc3+P9dzVWSc61
      LUq9zMTSk2pDFkl4hrH1N5mWhlbo4KkD22dnnhE2Y8rxhL27208/8RmR1Hj/diWZvCoKu0Qk
      Z3dvYW4AM6e3tkqrM7sWKlYb5HZlZtd7m7G+hZaTmV5zbgAzZvvmLeK18zO6mgfhgZM99j+K
      9xp4/uC9xzE3gBmzeOEiQVbM5FpSlDgfPf3EE0Rhl4nV5syuN58Ez5jJzh57u4eedFsbvH2x
      yWsruM+kOo33b5/awqtDEoY5pprNPZkbwAxxLmenNqRRCoAQmrZffCbnTS0S/APeDe1qgvrC
      ixVGKbwQzars2+Q8sk8f3ijhafkWfgbVd24AM0SgufHFl6yePY8xBi/hu3//uwiaKE9Es6i2
      v/QiphGgABPRxyHxHDr5In6EEiH4ZhVTTkNTnHPTVWDx2Oe1kDil8AjcNArTHRjC0Xd5+HmR
      janL2QzjHsYjpSKOoyYo7gFaUiKnkaNSyoc/u3VI9Vtof+ep9/Sh5wDeH6yWe+/nC2GzxnvP
      cDii13t7s+KNMRRFQV3XVFWFtfalJXOEEMRxTJIkRFH00hlhs2LeA8yYw/ictxetNe12G+Ag
      R8EY81JGEATBG1Ppj3JiDcAYQ5Y9ObT2Rcnz/OknnTDKsnzdRXgk8yHQK+AkSSO+7ZzYHuBV
      ke3tUb5k8NubxP7wJ8tzwiBAa/1W6P08K3MDmDG2HvP5tbus/OiHr7soz41zDmMMznkmkwlZ
      ljGZjDDlDoncw3lB6XqosEMUtwmCkCRp8psbYawEKUC/oeP9RzE3gBlTZxOCVvt1F+OpOOsY
      T8YMh0OKoqAqM6SwVPmAWOeEYkAktjglB4RhcTCx9x6M05g8IR+3qQYJpY0xPkaqiKwMUPES
      UdIjSVOSJKHdar2xvcbcAGaIdwXXv7yPWXgzd0lxzpFNJuwNBgx2NwnsbbrqFotyiPQVoawR
      j07QOkAICJQhYESimtznY7UoAOsEZd6mmCyw45e46xcJW6fp9RbpL/QbTZ4ZGsN+zyWlxDnf
      SK9M1Tb210Uex9wAZokIsdKQBKpRfviasdZSFQV5UVDmOUJrrLUUeYazBoRHVHfoyBuck/fR
      4ZFwAtG07rNwiQgglgNiOQCuA1AULUbZRTbvXSLpnKbb7dHptA9esV9Zn4RzjrIomIzHjX6S
      MYxGI6zwbG5v4KXDVI5Qh6RJiygMCXUACMIwJE1TtFaUZYVzFqXU3As0a8rxLl/cvMd3PvwQ
      ay27u7uURcVoMGRclIyGQ7KiYmGhTyuNabVSWq2UOApRSuGcx3vXaNnsfzVHMv6EEEjVfIl1
      WeC8ByEZ7O2yt7uN9jt0ojGhGBLrEiVq8AYpDIE0KGmnFd0fPDrvqesjAllTfZ5xVk2PmklW
      UZSGqrbUtaWsLOOsIgwUUTjVFdIKrSXWOvLCkBU1eVGTF1MFBi3RSlGKFU5d+D6XLl2m2+3S
      7XbpdDrEUdQsmKUJaZLgvScIQpyzTMYTtna2uXX3BlVZUtdVkydtPVJBpEKaxP2amprCFAzH
      Y0pTknRSgiRAhhKtAqIgJgoi4iie9wCzZvfWVwzqJoLz7r27/MP//h9Slc1qahAGJO2YKIkO
      43AbTaxp6yfACwQC4ZvnpjaY2lBXNXVVH7Z63qBiCRJKV7A72mXz/gZlVmKqitiOaWuFEHLa
      qjcV/kCdjSPPxXEhq/ABYazmMaDTigjDI0JaU+WNqj6qNGfRSpLEwfRoBLWkaEIyjLHUtaM2
      X1AUv2SyU7ORV0yymtoKwqhFECYIpanTPjZeo+0sWRkS6YCVhWViFJGKcS6kMAXlpGS72MXU
      NUEYEAYhsUpoqTZCC2xhsRNLXdfkZcZutU3ta4w3cwOYNf3TZ0lvNuG6/X6fjcF18nFBMS4p
      spIiL3DGEWhNoBVhGBJHMVJK8iKnLErq2lCZRrK8lUS04ohWEnFptaR2i5zqd+i2EiItibXA
      E3OvjNj78Cx+qcXCuWXarTaL7HA5GHEpgVgnb+QkdJ+mJ7LsFBnXq4hrWcidPU842eJcvsuY
      s6RK43c28aZE0shLRsZMe0GYamNBPT0eRQgqFsShItJzbdAZ4ynGY8x0HaCtHf/tP3gH5Ivd
      5qaVBjltpR0bSFYf/+7eUxrPnd1drm6s81XaYmP5HD+rDefkNheDnERaQilQQiKFREmFVo0G
      0tdtII0MpGNQTLiWSX56L8OXCWs251uq4A96PTrtFC8yxIE+h2aWU9e5AcyYUWmIxaH2jpYg
      XiopvsGTIUifeI4QgjgQXFlMuUKKcZ6/uHODn4mQ0doqX+0LS3kPOISv0b6mw5hFXbOkahZV
      TSfQyEcknls83jmsd1TeUznQAkIp0EIghESJR72yUXdz3uFc89rSCW5NLH99Z0JqO5z3hn9/
      YYl271H5z4t4dhDMPjX0xBvAjWtXGU0yzlx6lzIvuHH1pyyff59up0O3FYOdcO3afXzS4spa
      h2ElGe1uMByM6Sx1GG6VfPtX3qcVN/3vV598Snz5vZmX0zN+7gqgpeC3lnv8yHt+sXWPnxSW
      8gGXR0UjNrh+8BuFsGO8rR4ug9B4EeDFg2HMHuEdwhsE9SNdSYHUpGFMKwypixJqw+VWwn+8
      eLERB34CAoXH4fHTXmA2eD+LjIK3nChp02+F/PwXn5EmEWcvfwBVzufXNjiz2seUE6K4Rbq4
      QNxp8+XHP2Xl3EXu373PyrlVhhwP8vroB9/n6r0dACyS9bEH8WIuUYfAEOBQSB0xLNtUXlNP
      hZ6MV5Re4bygpSpiX9KWOYmsCKmOSRQuypi/++QO5AhPWQx4WVqHBdkYH0+AsSgMGoei8pLS
      aSofoANBbbtMXJvSaayXL5zn4w9EyIK5AbSSkL1c8cOP3ufu5oCV5WWqbMjl1iLSZgT9JZIo
      Zmd3FyF6nLt0hXanzQ9/629QlhOKztGIUkGZl2gsxhjyWvAvht9/ibF187pWsAfuNBP7bNqg
      TWLL2+rdFg887nOO1fg6G8XSTN/txBtAZ2GZznTh9tKFZmEmjlZoYjkXD847m5wGoNdvKqFS
      EIZ9Ot8+XimVcmSEjTa9EnynPUCpl7vNLX2HibkADF/qOm87LT1mLRwwF8Z6gwnihHJnMMMr
      evz8awLAuDZazHWB3miCMCaJZ3dbI7lFaWfb7b+tlG6RSO3M9JpzA5gxk+0NRH/x6Sc+I1rm
      WD97Xfy3k6PJ+7NhbgAzprWyApNZddMWf8IVoR+ksn0CObsh5twAZsx4c5PNe7MRcI3VJoX9
      mrdbfcOpfZdQzs4ZcOK9QLPEewO9HoudRhlOCIWftLAv6AYVkaAuX3Rzkm8uNkpwZTgT58Dc
      AGaIdxU/+/gqZ89dwhiD9Z4Pf713RBir2RroWUScwFP738X6JvanEYQ6KozVbD16XBjLH0R3
      VkGAU7pZEfAe6w5Hzv5BcagHnpuqxJlXL8fYrAAfRqQKoI1ATu/Xflqlc+7Yc60+IhTX8F48
      9z3dj4g9+LzzfIBZ4hnubrM3yrlwYVYK0V8/dV2T5zllWTY7sB+rRC/GvnGFYUgcx0RR1CSk
      TK/5uiJV5wbwCvgmyaI456iqiqqqXloYa7/Sv0m8NUMgay3OPbh155uJtU3yxTcFpRrFh5el
      2aXxzfoO3xoD2E98fhuw1r41ZT3pvDUGEAQBQfDm75XlrKWq65m0mHNePfN1gBmzc/MzfvLp
      1dddjDnPyNwAZkyrv0g/jZ/5fO89tTEMR+OXliCf8/y8NUOgtwHvDZu371OJ8CnneYqy5PNr
      N/jFZ9fYvHETyoqFy5f40W/8Ku9cPHdMWtB7j7GWmzfv8MVXN+l02rTShDSJSdOEJI5RSiKl
      RAqBkJJAa5SSTxWGerBc+0bonCPPi6nglKCqa5xtJrB+uqLgvScKp1r/QhBFIVHYfPbned/X
      ydwNOkO8q/gn/+P/wpkf/Bq//p3vNL/znrKs2NkdsLWzx9b2Drfv3Ke4e5eLCq7EActTeZEt
      4/jppGKn1+fXfv1Xefed81y/eYfPPv+KnRs3Oe0tZ0OF8ZA7f3AUU20fD9hOh9OXz3PlTEzl
      E9JWnyRJCYOAKAqbHVWEoMgyTF2DUo14VjZBSMlkPAA7JgkN3lVIKiJVgq/w/rgHR8pGdqV2
      IZWNEDLC+ACrFkiSDmnaIkligjAkjhqpmFkYRWOYNVnWyNCXZUme5+hAU5UVYRjQarcRgDUW
      MdUrVVpPGwaFMY1XcW4AM8Z7z2Bvj/7CAnt7A/6PP/p/mIzGdIRnQQoWBawoSMWhFFuzj5dH
      OI/0nso6PpmU3CprLkSay1FAXz9mtDrdJqhYWCA7s0rQH9CTnxOxAwhKG1HTpXB9Kt9BCUsg
      a6ytEVQEsiIQBbiSSBcocTxF0QNlaZhkNUVlpsJZjYDWOKsItSKKFKFWBIFEa4W1jq1RyLBo
      MSjaZKbHwtIKa2unWFleRkrZJAyFIVJKlJIHvY9zDq0DkiQ+Low1yZhMJtxfX+ezL37BJBsR
      xBprDDrSOGubvGEBMpR44amqGhkowiQkCEJCFSKR4CBUEXGUzIdAs2bz6sd8XoT89sICeZnx
      lz/5E7r9Lt1+l2yhy2ihy2Y7bYYrR4YsUkgOfoQkRfJt47BFzZ3acdd6lBcESh1TiSvqmj1b
      8OOPf8If/3f/FFcM0MoRR5IkSlBKoKREqUZ+0Fp3RMSqeayMO5x/HH8APFGoaSUhSawPRbGO
      CGPVxlLVh9fUShwTxgoDxW0p+Ng1IRn9hWW6vT4eRV4Y8sJQ1p6q9gRhStrqEsYtOt0FwrSH
      0LAxXKcY50RSc+n0Jfr9JkTEe4+1BoM9WGk+6GWmI1GXO6pJSUmOocZIi9eOrMrmBjBr2qtr
      1D/5FPiQOIoZbm5y/bPPGOwOyfOCSZZTFPuJ9IcbtxlrKYriYCcVsT+WDzQ6UCRpwrkVjY0W
      aS916K90WTqzRKfXbgTlep6/+e/9XfDNOoQVlgvvLPJdvc6FOMQ5gXUOrSWBbirvfiXeV247
      yvH/fj3bPjUxSxUbRclXZc71SnNjZ4NLG+ssVB9QE9JNYuqtW+R1SVVVlNNV6nyqvqeVIgpD
      2u02ahoL5WSAkAG1dVS1wVhHqKAXzifBM2e0cZ947RIA/Vjx3/w77yDkexxMHX2j9uCExiLx
      XuKExCEOtDrr2lDVFdY6ojA4GCpoeR/rTz9TOYYl/It7O3xy5QplPOTXWwWd8M1cm/DeMSgn
      fDYR/GTd4IuAFVNwSZT8/V6X7iWNEsOmt2RfrsUDwfR4koqFoFE0slP1uea3Sh7KbM2ZGZ5K
      JQTDbeAK4AmVp5HRebAJfcJK8YETSQIWyKe6OCWS8TOVZEnDf3Yh5k9v7/JJP2ZzuceHwTrn
      w5pOmCJfUK1ultSm4Mak5C/uZthJzDvAf9Dr0GkHx3okzwKePSRHZeefr0sSAELwYCTS678L
      z8nOzg6Li03K4bVrX9DrLbC8fJgzm2UZRVGwuNhlY33I6tqT0xO9mXD1+jbvv3uBvZ0duouL
      7B15j2IyxqmAyWjI7u4ei4sLpGlKmjbaNs4YhpMJ/V4Tt2+KmsWz52b+uT27CJ5v34FIOX7v
      dMgHk5L/83bGX569wMfG05vscEZnnA1qlsIApaKvxWXZrHkUrJc1f31/xGAgOeUifr+3Qn81
      eEIZQmDvlZTprfMC3b13l8HWJgQRe8MRF86s8OnPPuHcu+9jaku3HTMZ7SLjFFkZPv/iS374
      O3+Hld6jVaFuf3mVm9sTLqz22Nge025pauu4e/06axfeoSoqrnz7Awbr18lyi251iXTNYGtA
      3ErJxiXLZ89wbm0Z8Fz9yV8wIOA3vv99bDHi7j//r+GBPcOU8ATSEUiabl3w0Bgcmk7eTWXS
      rdimMstYLwikJxAeKcWBbujTqm/tHH+6M+IrHVN0OvQXllBSEPsxfUYsasOSqulrR0uHTzSK
      ZuJZkpmqGYiIZqIthEA20fzT4Yaj9o7aebaN4tPNjN1dOOMU32slLMfBQ0pvbirb7rzHOKic
      pPYK1A7GrlC6gNIrzDOmiiocobSE0qJwaCzgKX3IxIVvXw/QarVopW3Ac+bMafCOS5cv0+52
      QIBWGmyFTruEwOV3BWn0+BiiuNPn2+0uk9rQareJQ0+kIi5dvkKn32d7e48oUKRpm8WVLqOs
      JA5j+t0VnClYN1u0kv2VX0Er0Ny6u421lonV/KPR3354gknj+hTeIX2NdDXCP2JIJCRWBGgN
      Hb3JZn3x8PVTKULpaqQ3PEuiuBae0z4j3Nrh/s0v2AsNVbfFlweVUCO9JWLEajdnOZGsJAE9
      bUmkJ7OCzVpya1SxsWfxhcNV9fHyYHBeYqfqboaAmoBF7zkXrvFuusyOSfjjvZjSPeza9ULh
      ZIgTGi8knuZQomYpus96eempn/PxNOVs3kcC4u3rAd50BvdusmE0V86eosoz/tU/+1+RLxkD
      3wrukJkzTQbUS+ARZAaGtSYjpvSKsiqwD4QoS+GR5GT1Hl5MUEFOTUXsJcrEpLSJVAupYtwD
      ZfI0GqJOBDip8Y2QOYGShL4klYaWtsQanlfcsB3cYlzPNtHoresB3nSktHz2V5/y3vkzCCEa
      P7x6mZArj5ag5GwSSXoKepEFGuUK4/xDnYcHahcwqdfInKYkonKCUDpSUdLTNUnQiO8+Hjs9
      HsXj5A+fjBABgTJ4nhxq8jzMDWDGVFl1sEA0C5TIMO6ZVW2fm8dV4kBBGngevdvE64nxye0a
      qbpHZmfnZJhHg84YGYQsn382X/2zEKkdSjc7oa23G4UQjrkw1huMlLPU8tz/ot/8qMqvC+tj
      lChmdr25AcwYayw7tzdmcq1ADqjdXBfoKIVdIVJbM7vefA4wQ7z3hJ02UTCd/AmBGXuseNxk
      8MmE8R7j4jyPn0yeTMLYUhWGWfSMcwOYId5N+OSzm/QXTzXCWMZz8VxCE/n8fMJYzfZxv0LL
      vdMsiE2FsQTPJoy1vw+wlOIg1NhEMbVUByHUADh7sJPM/maLNBpSDU957pleyjfRTg8Jbvnm
      XL8fejH9/6NvoCcui2PCWM2imENNE4Ssc0T6AkvcxXv53PcUv/98vkXSzBGyRTfVeNXEu+uO
      5t1/8z983cU6wDr/0PTxzsYO0uQznWXs1/FgKoIVxzFKP13QwHuPkuKRq+KvivlC2CvgbRLG
      yooKZ5pQ4n3tJWuffci13/sIIZDTcIgoit5IEaxHMe8BTjhpHMIMF5beNk6sARhjyLLs6Se+
      AHmev5Lrzpk98yHQK+BtGgKddObrADNmuH6be7uj112MOc/I3ABmjA4V96794nUXY84zcmLn
      AK8C7y3rX93m9Le/90zn53nB1WvX+fSza+zs7vHDH3zE977zbcLw0S5DYyx37q3TaaekSUIU
      hV9bJldRlAdrGQ1NKksYBm+Ft+dxzOcAM8S7kn/8P/zPnPvN3+BHH310/G/eM8lydnb3uHXn
      Pp9dvUZ57z6XtODdWJMIwV/nNZ+jefejD/nNH3yPhX6X0WjC59eu88vPv2T3xk0WvMUiKJyn
      EgIZx8goQkzV2YIw5Nz5U1w6f5pAB8RxTJIkhEFAkqYIAdY6yjzDGIOQslGkyPtfjsUAACAA
      SURBVHMQ4sAxUJYlZZEhfEESWoRwOGuOyaY0rk9NXiscCWmrg1KKMAwJw4hWKyVOEgI9+3a2
      rg1FcUQYqygItKYsK4IwoN1qAQJnTROWrgOUVmil0FofbswxN4DZ4p1jbzCg0+kwnmT80f/9
      L9nb2cUMR8R1TV/CaqC4FCrSR4QiO+B6afm4NBRpi3gy4VIguRxpuurh1EdPk+hSdjvkqyuw
      IukGt0j8LQqbUNOjpk/pe5QmQQpPFDqsqcDXjTCWLBAuJ1YZ3uZEKkPL+uAdxFOiLz3NVkcA
      lQ0PhLhq+lT0MaJPFCVIJUniRpniQBhLyYOFL+893nmU1sTx8ZTMPM8PxLG2t7e5cfsGRtTU
      dYmKFNaYA2EsHWqQ4GuIdEwUxYQ6RAqJ8AKcBy8JdDg3gFmzcfVjvsgD/sb3PmQ4HPBnf/on
      9NKEThITIpAOVLMO3xzONapwflqNjvzNeY96QJ8HAU4pvFRYKcjrmp0850/+/F+xc/cv6Ccj
      0kSTpnEjjDUVxWp0QiXWOoyx1MZS124qanXkmKq+TfKayaRinFWUtcVZ1xQLPy2ypygNQaAa
      iREhHgjD8LipEJaQiuXlFZaWlmm12iwtr9LrLyCEpqwsZWUxFpwXdLpdlpeW6fW69BcWWVpa
      oigKvrzxBbu722STCQLP6tIySZg0lRpxLARj/6d2NTU1Tlisnx44nLAQCJycSyPOnGznHn/5
      88/4W7/zu1y/cZ3f+/2/hzUWU1lUIIlbEUEcHqrCicNHsf8zTS4/iKVB4K0nkIbSNApvQkqC
      VNPptYiSgApDbWtUKJFaoSPNYjvgXbVLqiKs840wlpoKYwWHAllhoAhDdaD6FgaKNAlpt0La
      aUAY6mkC/mEC/36FBw6S2Pfjj4Tg4PyjG+HtV7V9/SM3NZL9ozaOvKgZjEd8NSj5quqynmnO
      jjNU+AG2shhTU9c1VVlRW3OwH0OzI48gjEKUVLRaLeI4RgpBVVVY5w5ysfEeY6pGVvE11ZNv
      LKPN+wTLTcbS+bUl/qf/6t9mUnnyylJUhqysKWt7oLD8pNGFUoI0DIhDRRppVnoDBKvEgSYO
      FYGCQDQBcLkRDLKa7VHFblZzc1SweSZl7YMf8qvRBu+2AtRr1gI63BAP4LhGj3U1e5OCjycl
      t8cJmC5rwvLdjub8okPLIaGWaOkJpEcKBQ+o/DgvMF5SWyiNo6gmgKCThoRBSKgEWjgkFolG
      irkXaMZ4KhkhhhvAu0gcv3pWI9RsdrZx5MiDsIXjltPDc6qtYbX5Sr3v8en9nH/+4+uMPrrM
      zXrEryVDFqL4jRDFgqYXyOqMT7YnfHmvYs0m/KDd5+91QsK+PBzWADBBHFOAe5wH/2i46v7n
      fHx+8ptxJ14j63dvsj3Iee/9bxFIwf07N2gtnqaTTCuaLVjfmtBd6CLqjFpETPa22NraYenU
      Ctv3dnnn/XdpxftKrIpTl6/MvJyOIYJnX10WAr5zOuHKcsQfX7vJ56eW2Vy6SDfb44yacDas
      WQwDAv3sm3nMAu89lSm4n5d8fDejGAZ8FLf5d5dStHxcpW7j2XjAAGbDiTcAj+a9M11+/Fcf
      MxqNWWprkp0d1keWdy+sgcnY2y24s53y/fcvcOuLL4nbXbIsp10VlNXxlmU02CbLcy6urQHN
      nmFN7L58YZ99M7HLwaU4XzdODO+xrhGP8ggi1ehdSnX8veJA8gcX+9waT/i/ru+xmabc76/x
      qQtJ8jFrcsiSqlnUlq6WRDp65h7CuUaPSAgFRyaix8rtHd5bclNxt/B8upkz2BOcdjG/3T/N
      0qlH35eD17pmQuuEAVtiHBgrHtmeS0DLRkVDyv35FMfuV+0ExgusV1jE3ACksHxxr+DKuVWG
      +SJLC12K8QCZOOp8jAhjTp1dYm+SIVREEISsLC/RihOMq5hERwPfBP1Wwp3bmwBkPuYf7fyA
      RNZoDMobNAb5jBleHoEhwAtJK0xZr96hJsSKoNHdEQo3rXzKV2ibk5IR+5yIh/NmrwhHON5j
      uHmDXVGyESXcTFs4IsAR+JKW36KvCs70WyzHgsUkItWKQCpqaxgax0bhuJd77g4aAd9AODTN
      2FpjcQgsCovCeEHlFRSSXgZX0j7vxksMbMxPhhqGx8vYiGlprNAYNBUhNQGBLghlya4913zu
      R2QwCDzKWwQW6QzS1wjc9F4d3i+HaoSxhJp7gWbN3t0bbBrNO2fWKPOMP/rH/3uzSPUStIN1
      SrtA7V4ubNkjKHxA4RTe1kRkuHIX644bpBQerSoKs4dXBSqqyH1FrBPKiSQRMcJ3kCKltAFW
      BNMKGzbbQ01lsBu1OIvylm6a4mWEEhBKTygMkufbM3gxusFOefGl7sGDnPgeYNboAK7++Oe8
      d+EsVimWU49SLzb0afCkuiYz0YxKeKjz431IbVcf8Y5QWkFmFIUTOGdpuwrhAoJEEWlBSxli
      1RjLgwgB6mDYd9QBUD145nOVPNUKrT2zDGGbG8CMKYbZTONzBAbvX83XJIQg1I8ua6ShGx1t
      ofd7n/3fvZi628tQ2BVitUlh12Z2zXk06IzRScqpi7MTxkrUBsUjWumTiPMxSpTMhbHeZHyN
      fWgbhhe+GAiHn9n13n6c1zzaB/RizA1g1jjB4O5shJuUKHB+VmP/bwbNMGg2wmMwnwPMFO89
      QbtFGBy2UKaosfLFWqx2eJ9RfRrvy6effIIIo5y6LGcyEJobwAzxbsInV2/Sai81wlBoFsJ+
      s0HMUUGoB8WhHvM3LT1evHcoSPWS802vFP4lXbKvGlk/qETNQ589JGYhlI1z4Dnv6YPP5wYw
      Q4RskQSgIo1zDrTgu3/wt2GqdHbgHXrCl3VMtI0eyMaN6JxDTiuvd9NriYefcyQkGQ9CNhGl
      3nsqqakf0NudDIfUVfFwuR58vv+aB/V6n/KaMAyJkhgVxM+kMpd6g5qWf7/szh/97I0qnvTb
      eO+e+54e/R58E4Y+XwibNW+TKsRkMiHP8wNhrP1Y/mflqMt3XxwrPKIIJ9/wHmfeA5xwWq0W
      rdZhkFmTyOKe2Qj2K/3+87eNV2YAWdbknJ5E5sJYbw+vzAD299E9qbwtQ6CTzps9QHsLGW3c
      YX3waiQX58ye+RxgxqhAcfeTT3nv/KnXXZSZ4pwjz3OMMeR5QVVVGFNP9yVwU5kU2ej4Tz1S
      ztmp10YQpylLi4vE8debgPM05gYwY0Yb94hWL7zuYrw0ZVWRZzlZljGZjKmyLaQfksgRihGR
      GNEVI5S01FZjvMJ5DWIatuE94BA0BlBli3y5cYmgdZ7FxSV6/R76AUGto5t9fF3MDWCGOJfz
      Z3/2U8782q+87qI8krquqaq6acmtIctyrKmpqmrq+XFTN6glEmMitojlFstimzAsHhn6DBzR
      EHoSAxb9V+Rll8HtS9y/c4kg7lOWOdaUaGmItKeyiiBeII4T4jgmTdOHXK3euwMlCO88Ugqq
      qsZaSxxHeA9BEBDHEc46wigiCPQjDWu+DjBLvGe0t0dmLUv9/usuTaNGN5kwHo+ZTCbYchPt
      9wgYE4kBwo9J9QRxEOJ8WBWUsMf+P2ucV9Mgv/2ewiOFw3mJ9SGZaTM0Mdt2kcq2KZzAYpkM
      x9z84hYbt7fIJhlVXYF3JK2YtJ1grCWOU4IwIAoizqyd4fTpczjXbAZS1oaqLAmDgF6vMzeA
      WbN76xrXhyXf/86HQKPn+WBFOlyZPNTWOZQMEcd+/ziyPMdZSzaZUNU1YdQEzVXZBFPVOCHY
      2LhPMb5NW63T0ZvEOsd7h7Ueax3WOYz1WOOozKEo1oPCWOOsYpJVFKU5JqI1nlSEgSIKNUEg
      CbVCa4l1njyvyYqavDDkZTNX0EqilZjqEiniSJMmAa00oJWEtJKAMIRCGDZ9yMgukIhFwvEd
      /vznu9y6eYc4jPnW5fd4790rnDl9mm6nc2zBrdEbchhnyKuCsRlBF1qLbZa7a/TUApQCEUic
      NHMDmDXD+1/x2b0Rv/H9j9gbDPjZL35GlZeUeYm1DkEjFrW/oR3iMHn76HZD+wtMWgcEYXiw
      7ZCpa4q6wArDYLJHLSuGkyHSjtHDO5CVDIYV9+5vcu3aNYo8PxSg8r5RipONUty+YpxW8pgo
      Vhgq0iSgnYa007CpoGlIEuljIlpaNy14XTuq2lIbR11btJYkcUASa9I4QGt5EPlgjGvOM5ai
      MEzyio3BgJ/vwmebnvqawVaWsiopy5KiKDm9ZFhY/S7Ly8uEQUBRllhTo6RCKUkQaKIwQkhB
      WVYHQzpjHR5PoAOkVhQyx3U9UTfEGosSaj4HmDV1luOnG8JFseZf/uKfUBaGsjBMRhmjvQn5
      OG+kBp0Db8FZ8Eeyr0SjqqYDTbvXptPr0O62OLcMpUkYjR2usKhaEhEjg4hiQZCc7bJ4wXFZ
      jfibQcCCPk1bB2gVIsTr83g7Z/H+4YjYQV3x8W7Mp1lKXhf8oKVY+kFIGAQHlTqOI1a6EyAm
      kZpIOWLVIpQOpSRSqgdiBBvtUesczjlq66ksjVhWnVLUDuehk4akUTA3gNniqYUg223yAWJv
      +C9PJXgZNiNdfyDOh8QjBVO5PvdUAVoALzYR/mFtHOfh7l7JF9eGXMNyd7XL1dVVokAS+Zye
      mLAoSxZ1xXIgSIMIJWcj1vUonLMUpmCndtwpBF/uVoyzmkAKNJ6qKPC1pSM6rNWK/6jXYfWH
      K2jpHzFRtXgiPOtIjqZCHvQpTynN0es9WN3rV20AnvX76ywtL3Hzxg3OXHgH7Wtu3d3g4sUL
      3Prqc1q9JZyHVgAubB8KUj2Ge7evI6IW7aRDu33oU67yDKdDpKtBhoTBM2ZRecvm9oCV5UXy
      LCNOU4osI5muZJuqxElFXZQUZUGSJARBQBA0Fcg7R1lVB/7tIOpy5b3DCbASHiGfRf3gyYN+
      j8UjH7mFqAIuLoVcXAr5O94zLAyf3bnBDWvZUCF3Ox3a3VOELkSVFW1GrMiMtaBiOYA0iJDi
      0V6SR5bFe0pTsF3VTJzEekXtoagNuXXcHVkGQ+hbyVnh+Z1WSivWREoSBwrRe9z7PPr3Yto8
      eDwP62O/HK+8BzB1iXXQSUL2hmMmm7epVDqdrMDO+m32KsVC6GivnHuqAQz29lg4HXLnxm1G
      +YgLF88hlabYuc/GpGKh10Wi2BmO+d5HHz51qXu4dZ/13QrlSq7f3mRlqc0wq6Ga0F1aZXtj
      k4vf+oDR1n22t4f0V1eIA8F4d0DSW2C0vU1n9RTnpgbw6V/+BdGlK5w/Pbu8YADPHoKFp54n
      hKCXBPww6fNDmsq6lRdcu73DLevZUQGbScLtdo8kSYlK90iDeJQQ+6QuuVfC50PLrS1Dt1ZE
      pqITaFqhwlU12sLvdlNOLSVTYdxZEeBcgXcBtXEY96zBeqClOK5gDQdK16/YAByb9+9T1TUb
      OyPeudQiaXUYbu9S1E347fkLF1AbWxSFPdgN/EksrJxmbanD+lfrDMcZZZVTG420zSYOVW2p
      syFZbp/Jibe1N6QajNmUCyityLIcJRXrW7vIKMEJiRRgqoK1M6sMxgYlHN3FFUwxoDTQP/ii
      BR/+yof89LNb8CtgUHw5DGEG4+8ogLJ+UV0gzUrY4rRwLAQlQji2h1vc2qy4WzuyJOantSMT
      gjjVhH7wCM0egSk0px28qxV/K+4wCiJKd6QKTbM3cwNfPSB49SgsCiMCLJraSUqvsf5ho6kJ
      KMUVIr3OPfMdahlhebYhnJhKbSlvkb5uDhyWACeDuRdo1mxd/4IdJ7h84SJFXvC//eE/e+kJ
      qJY5HT1gt3q58AovJNYLpJnQUxNWo5wlPSFVNaGwaOkx1jEqStwDzYcSAh31uWsWuF10GdgW
      gVJI//VF/K7G19koLs30mvNJ8IyJ0oC7n93lW5evECjBt9oTlHq525zqW2TmHGvxbMKsvfcY
      F5OZhK1ymYqA2itq3wiH19PNMI4ihCAxgo7IWIkMF4PJ1x7/nyjHcjjAzXBj77kBzJh8MGS4
      +Qz9/zOz7zeaodiWEARK0FPQizwPK7Y99QozK8vzkNtVUn2PzJyb2TXn4dAzpre6Src/u3Yl
      lANK+/TJ78lATcM25sJYbyw7d24TLs0uFDqQQ4zvzOx6bztzYaw3nMVzFwnyZ4mOfBYc3s9V
      4Y4yF8Z6k/GefDhiPNw+8jueS2XhKIneoLDLL/z6byIejRRmZvdkbgAzxLmc9UlGoJpFMSEU
      IuvjX9BbIqMdTLk8yyJ+I3BRF6rWTHrHuQHMECFD7t28xfLpcxhjcMCV3/vVgymbm65+P2oR
      00/20A+MbUP1AUL0mtdah1TNiNU5hxRN6qGbCmOJB4SxMhlgjmZceaiKDGemw7NHiEY9SbTq
      cc+nG58iEGitUUGA0OGTlfAA4T2tqmj2RpYPC3kdiGE9IIzlnEPJHxDLqzh/GEbup/ssT/dj
      PdjJnumK77Hz5sJYrw7vPaPR6LlVIR73NczS1769vU1ZvrjO6H4ZtdYH8VD7z9XU2N42baB5
      DzBjXrQCfB0Vp9VqEUUvrja9X+m/7rzdV8mJNQBjDFn2auRL8jw/aBHfNF6m4hpjvnFiZyfW
      ALTWr1S86k2T/5jzaE6sAbwqJjtb5CKk+4b2AHOOMzeAmVPz5WfXWPvRb77ugrwSqrqmrmqy
      LKOsSvAQReH+zqiNp8o33hrwSCkxxhLFEb1u941Ti54bwIzJ93ZQrW+GLui+ClyWTRqBrPEA
      5cdov4dmSKrHOGdwUlPbkNo1G1LjPRKDkoZQNZtVb5sV7gdXWFw6xeLiwkFG3etmbgAzxLuc
      zz+7jVtded1FeSLGGOq6ZpJlWGOpjTkiigXeO8qiwJY7BH6TWGzTEdssyQlamuOSLeqBx8fQ
      Vbeo7CfsrV/i6vp7dBfPEkcxQkBRlBhjpi58TxhFhEFImqZorQnDRxuL92BtMzF33mNqQxgG
      SCkPvFVPY74OMEO893zy4z9H9BZ5//Ll110cYJq/WxRkWU6WZ0zGQ6TPEGaHgCGJHuFdPfXx
      N4fAkegxocyfKVn/eXFeMTBnqFybSBfgKoQviXWB9YrKdylcl9LFjFklDhKskyAkUkiUVBhj
      GI1GDAcDNjc32R3sgIBOt8vK4gq9Xo9ut0e302E4ztjZGzKZNFpKWms63Q7tVjI3gFmTD7a4
      dnuD706FsV41ZVFinUUp1VT2fWEsKcgmGZPxHsJskqoNUrFBKCcEsjrWivupbpB100frDjR+
      KmPJC/OwMFZlGWePEcayjqww5EVNXtRk0+DAIFAEWk6FsSRxqEnTRhCrlYYksUZKy56puF0H
      3MkTrFmiX9znLz83/PIXV7n31TqdqMuVS5fodjv0ez1Ora3R7rbRgWJSTBiWQ7I6xwqHjCTv
      fvs9VrtrRD5ld33I1sY2vf4C7W57bgCzZuPqx1zLNb/1ve8wyTI21tdx3uOdP9h+6CCaYF8M
      ayqWpZSaVmSODEl8syeWUigpKasS7xxZnlOUOZUp2Rnu4usxZjxgNCrZG0zY2t7hk7/+OYPt
      m4TaNBIsQuC8P6IMd/goBSgpkapJIN+vpEGgSOKAVhKQRMGBKFYjjNVMaBtDaQymNhat9oWx
      AtJYEwTqQAysNpa6ngpjlYZJVjPOCm7vTbiTRbDnsBaqusTVHmMtrbCgv/wO3/3gA65cvky3
      222y2ozFTLVNa1PjrGvu9bRKCwRCClzgqKMKlzrS/7+9M2mO48ju+C8zq6qrugF0AyAJghxR
      kjmirRl5PBO27BnPZezw0VdH+EP54m/gk88++AM4Yi4+2BO2ZIkjLiCItbH0VtW1V2b6UNXY
      SElcmiI4xD+iAh3ZtWQ18lVm5Xvvlytt2p0OZVVSmSsy3NwVD/Z4sDvkFz/7jCgN+ed/+yei
      4ZRoFBGOIqLRlCzJ0GXVNPTTf5gUAiElnuvhei5BENBb7dFb6dFdWWJ9pYURLsMooyoLsmmG
      J10818NZVyx3S265CesqpYfFlS6gTp7wzyXDyfrv2/DsVrpkP8v5IvL4n82S4cMhCxMHz1F4
      jsCV4CnLei9mECm0OfVi+56i1/ZY6TgsL3gs+fUxWWXJS0teabKiRj6elRAgHVk/kMwbp0K8
      b7IUaUrVPFI6QvCPToZd82BtFVh9jXPHuGxRFqvgUm9tgIJCV2xuaR7nBdurLbp3PqDjQYeY
      ZZmxqkpW3JIlR+E7LlK+eR+FtabunfKcJ5OcSVrgui5ey29WtRQ8ncDBbsXNeMrf95b45Ncf
      4qs6qG3WO0IdzGY5QnLjJWrwYk37vTeAqiyoDLQ8DyFAVyVWKJwm8hJr0c2T0xqDFQJrNHle
      w7CyNKXlB6hm/6QwtN1m0TgMtxcdhJrHlJ/F4CJ5fizP3esuf2tbhGnFg51dNqRhUzpsdbss
      LN7EqRSOTekScV1lrDkFq57Ed30E8qV6AGst2pQM84xUPzuAGJaKR4OEZGK4bjzuBQvckRJT
      QDk1jNOCtDL8ZqHD7T/qXoB9PQdhjmiM4B0EY1127e9uk6cp3ZsfkKcZO4//j+sf3KPd7tBd
      8EHHbGwcYPw29273GCeGaTiiyHLctst0WHLvsz+m0xjAoy++wL97b+71NIQIvjs1UghBt+3y
      edvlc+qGujeNeDQ4ZA/BgXI5XFxkf+kmjnbx8pwu4QsZRA0y04zyhI1E8WU/xUkcZHlhiAF8
      2LL8zUKP62vfEg7ySm4SB9CcbbJ1CHU9hKy0xpja8aaUPKVvv8BZ32s5bgvfgYcPH+K6Hj+6
      +yk6jXi00efW9S5VmREEC7SWe/idHscPfsfaRx/zzZdf8eG1j5kOJ2fOJvj5X/4597dqNqil
      phUj55DDqqagW0D2UoetupLVXs0TFUIwKRL2doccWDhCct8I7rd9lNfFdzTrbc01J8W5AMbS
      CB4dZ5Sh5BOh+Ydul8AXjcf3+cqy766rsQJt6zyJwkhy41DiUuGgcShsXaaRwDKLbp+orPmg
      FS45LaYmIBMBpQyocHApUbZC2hJlS9T35A+/9wawtLTANGvz+Z/d4mgUcW2lR5kFdFbWkTrD
      8du0XI9JGIKQfHTvT2i3A37567+mKDLsqj43pVhkJYEv62jTSvEvh5+/dqcthWa1tcdR9sFr
      nUcIiy9Kem7GspvzCxWzKGIWRE4YjUmtJhvCUZo/w4XzpOTvFjuIdpu9cpn/GHU5Kjpo++qh
      DVYorHSxUvEiqJV1I9jP737LtxWnoFwBeM323bqaBZqzjja+4qvDlN/88i/Ik5j//Pd/fW0w
      VqD2yPSNuZAsK2OJC0gqSSZaZMahkq16wTtT4ooSX1bPOMAMgti0cRyXRRJ6bsGi98MmwLTV
      Dqleb1aWmY/e+x5g3vL8DjYazfGMFoGeG8bVkYKuD10sp8Op6cn32ljy6lkynBTgn6PB/fDT
      ppm+ga8OSfX8wMNXBjBntTodgvb8Ih6VyND21bO4Xvp6UtD2Lmcot8FDinkhZ2pdrtjUPwCF
      /V30wvwWyGupY3JzuYPrfkhZK+GZN5RX15UBzFmLa+vYcDynszWkg7fE4ryMys0KLTn4/h1f
      UFcGMGdFBwcMjybfv+MLyJUTcv32l1u9TNK2jSPnQ8mGq3eAucqaEr20xLVe0wMIiZ46mFec
      KWn5EdPs3V91ft6qfEWZA89ZTONldWUAc5Sl4ovffc2tOx9RVRVaW+5+0kGIJqoTgRWC0LuD
      EPJkuR6wmDR+BozlcJuurUG7F8FYs+O/FYylXPTJ/HqDr9JVvSplTY1qKm0vfObcMS9ExjoD
      o5JSgvJ4lox1/niBpZ2fB2NZC1KKkyBBeRGS1dy7qz7hpnyKMace63o2X8yqAg0M6+zn2X5X
      YKw3JkueJozDmLW1bw/cMjOKGTT/JEteVsgLc++O47xyDu3ZsOuZhq8Jxjp7bikVjuvgOg7O
      bHPrbKwX9Q3UQW9v9/3mqgeYqwStoENQfrf7/eJKj0II/G9J+3vlmohn42A6nQ6u656EYBtj
      XgoyW6cnenieh1LqrTfeeeidMYCyLN8ZKNNlrWcQBARB8Larcan0zhhAHeV3OR00ZxUePOF/
      nwz4/Oefve2qXOkF9M4YwCxd8LLL9zss98o3Sp270vz0zhjAuyBrSw62D6jcP9xhhrWWsiiI
      p1OSNEVrTdDuILAIqQiCACGo83TLCmvq2avZ8OuyvTdcGcBcJXjw8CHXfvLTt12RuaosS6ZR
      xHQ6JZ5O0PkQXw4I5BBlCqqoRWF8StNiouq4JWMqsBVK1NuhvU1r6WPWbqzRbl8eQ7iaBp2z
      TFXQPzzm1q1bb7sqryxrLVmWEU4mRFFInhwRsE8gDgnUEE/mvGz7NRaiao2R+Sn+0sesra3h
      +z5VVTOJkiQ9Ta4RNVzYdRyEqDO8Zon91piT2SvHUUilXmrq9aKuDGDO2v/6v9kofH71s0/f
      dlVOVDfonDiekuUFAktZVWRJjECfS0BvjkBnB3Rkn47sEzjR3ABZ1grC6iZj+xOkt0yWTAic
      BGFTfJUghCGrApABaemSsYDr+WhTO8GM1mitKcsKaQRCKpSjkKKmwfWWeyilaAdtjDE4jlOv
      iTBzFNKQIYREKnk1BJq3erd+BF8++MEWtrPWorXmYgC/BaIwrIct8RhHH9JRh0gT01IZC6LA
      mgolanbnrH3PzED5pxGXxlhKbeon8BnEitYW0fCEhKg9urJx7GljMdqijSHL62lh11ENguUJ
      PbGJLCWOAiVqNEvt9DNMSXgcajbGLZJkjZtywHZ0g53dXb66f5+NR5sUcUE36HJj9Tpr6zdY
      vb1Cb70HDiz0llhaXGKx1WV5aRnHulSpZTpNmUYJeV7Qanl0Ou2rHmDeOnr4JRu5z1999gl5
      nnNwcACAkDXSTzVdtm3CCGqPrT0hKyspkc02c1ZBzQtSSlEWBRZLmiRkaUoYRQxHQ+Jp1AwP
      mgZblvz+918Rjx6z6I5ouRopBVrbBmBVw6mK8hRUVVXmpDzLK9KG7maMw2Ok4gAABBVJREFU
      PWEIzRq5lFBVpqZhCLDmlDAnZAPZkqfcoRkYSzc8HmNPKXTa1D1SaSWOhFi4WBvQ9ZbwXI88
      6bN7kLKyvMyPf3yXj+7cYXV1lVarhdcszzTbZl7pkpJCFJSyoJQlxjWgBJ7v4ykPjUZbfdUD
      zFeWTHi0ygiANE/57X/9Fp1r8qTEkQq3CReAmp0zk1JOHePTNBopJV6rxUJngaDdph0EJ115
      lIUMkwGD8Ig8znAcheoJ/DJktRrj2hZxWvGrP22h9adUzdNba4PToAkdR+I1qMKa8qZwHHGC
      N/RbLoHv4LccXEdRr2B3IZ7GvkQZdeDT88qSPOZh7vNoCPHXKVmSMRyPKMsKJQUf3xRouYqj
      HHxH4rt1TFFWQV4aCm1I85KirNDGoLVBSoEQEqhjjIypy7STkbt5HYLCVSzQG1EYhs/4AbTW
      z/gxXqesDog7T3SbvUSejR+ahT1cLDPGzLU+72rZVT7AG9R0MmQwrnuD2Y+fp1OiJD9Xlk0n
      7OwfniuLwxHbewfnygCGw+FJ1KUQgjKLefhoo+Z7zoZORrO1tYU29cutlJI0GvPNN9+Q5BVC
      iIZBqtl8solunoFKqfrYp1toMyuTjIcDtDHsbG+jjUUpyWQ4oDKWwXB4sl84GlAay+7WJkle
      oZRiOhmRV5rtzQ3irEQpRRJNSIuKMouJ4hylFFkcEWcFB3tbHA7GKKWa3yojGg84Gk7qIWCe
      EE5Tdp5u8HS3j1KKqsiYRDHh6PhkP10WjCcR0fiY41HYlGVsPt0hi0P6R6N6OPomG8D7rsEo
      JBwdn5s/0bYgGp9fnM9KhyyZnisTAo6Oj8+VJeGQx092z1/jqI+VHvLMJM7RzhNGcQFnrhws
      9lhebCPPGFM2OmIwGTAIi5OyeHzE8aDP0/1ZYr8lCScMR8coqdg/rnMd8mhCUmkmk/D03qZj
      osoQBB1Go/p4HYdEhQZrOB7UxlJlCVGWs7/9hMNJfd9VUTBNYvb3+7Sa9dWqyjKNJjx48PDk
      GpWGaTTi9p07iKbHq7RhGk04ODg4eecqK800jtjd3ePR48dNmUHpnM2DEem0vo8rA3iDqvKE
      JD8fGZpEITt7++eyWnefPiavzk80ZmlGkWbn9htPJqTTMcUZHOHC0jLhqE9anO7pBW10GjKZ
      noKprKnItMR3Ti2lnj0ylMVp8F57aZl2q8VCp6G6Wcvg+JBxGNPv9+vFKqxlODzi4OiYo/4e
      w0kMFkajIQf9fb6+/w1+E3Q3mYzo7+2RFkUNCQOiyYjd7S2iOGUyrrPn4mjMzm6flZUVdndq
      I0+nE7Z3+ywsdNjv9+vfJQ7Z2tnnaL/PtbUakpWnMds7u+RlSVHWSfNlnrC9tc3yyjU6nRoM
      NjnucxglODpnEte/zf8Dya37obflRaYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dispatch with Load (no charging)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dispatch with Price' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Generation (Absolute) by Type' width='192'>
      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
      d5r+//UXo04YlKe+AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Generation (Percentage) by Type' width='192'>
      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
      PRxQjgOAXAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Load' width='192'>
      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
      M13g/wecNDxE/OXX2wAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Load Duration Curves' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Load for Storage' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Net Load Duration flexible' width='192'>
      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
      tyOJ8YOI/w/DEAzIkW4PcAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Net Load Duration inflexible' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Price' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Price (table)' width='192'>
      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
      UwBi2n8AfNUQcCgCn9YAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='State of Charge' width='384'>
      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
      BPv62ZMOSjMAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Unmet Demand' width='124'>
      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
      rQthyyAuAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Weighted Load' width='192'>
      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
      Bsn/H8lYXvpL7m+1AAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
