<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20192.19.0818.2120                               -->
<workbook original-version='18.1' source-build='2019.2.3 (20192.19.0818.2120)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='tab_dam_generator_power_combined' inline='true' name='federated.0m2ojda1ih48r312ma38r1hlijh9' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='tab_dam_generator_power_combined' name='textscan.0yqfx1x1ihmfyd180dyq61xv4d9s'>
            <connection class='textscan' directory='D:/Research-Local/8-23-2019-power-systems/simulation_outputs/combined-outputs/9-14-2019-L,H,8,1275' filename='tab_dam_generator_power_combined.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation all='true' name='tab_dam_generator_power_combined.csv+' type='union'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='Zone' />
            <column datatype='string' name='Attribute' />
            <column datatype='real' name='Value' />
            <column datatype='string' name='Timeblock' />
            <column datatype='string' name='Scenario' />
            <column datatype='string' name='Resource' />
            <column datatype='string' name='Table Name' />
          </columns>
          <relation connection='textscan.0yqfx1x1ihmfyd180dyq61xv4d9s' name='tab_dam_demand_response_load_combined.csv' table='[tab_dam_demand_response_load_combined#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='Zone' ordinal='0' />
              <column datatype='string' name='Attribute' ordinal='1' />
              <column datatype='real' name='Value' ordinal='2' />
              <column datatype='string' name='Timeblock' ordinal='3' />
              <column datatype='string' name='Scenario' ordinal='4' />
            </columns>
          </relation>
          <relation connection='textscan.0yqfx1x1ihmfyd180dyq61xv4d9s' name='tab_dam_generator_power_combined.csv' table='[tab_dam_generator_power_combined#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='Resource' ordinal='0' />
              <column datatype='integer' name='Zone' ordinal='1' />
              <column datatype='string' name='Attribute' ordinal='2' />
              <column datatype='real' name='Value' ordinal='3' />
              <column datatype='string' name='Timeblock' ordinal='4' />
              <column datatype='string' name='Scenario' ordinal='5' />
            </columns>
          </relation>
          <relation connection='textscan.0yqfx1x1ihmfyd180dyq61xv4d9s' name='tab_dam_loads_combined.csv' table='[tab_dam_loads_combined#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='Zone' ordinal='0' />
              <column datatype='string' name='Attribute' ordinal='1' />
              <column datatype='real' name='Value' ordinal='2' />
              <column datatype='string' name='Timeblock' ordinal='3' />
              <column datatype='string' name='Scenario' ordinal='4' />
            </columns>
          </relation>
          <relation connection='textscan.0yqfx1x1ihmfyd180dyq61xv4d9s' name='tab_dam_prices_combined.csv' table='[tab_dam_prices_combined#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='Zone' ordinal='0' />
              <column datatype='string' name='Attribute' ordinal='1' />
              <column datatype='real' name='Value' ordinal='2' />
              <column datatype='string' name='Timeblock' ordinal='3' />
              <column datatype='string' name='Scenario' ordinal='4' />
            </columns>
          </relation>
          <relation connection='textscan.0yqfx1x1ihmfyd180dyq61xv4d9s' name='tab_dam_storage_unit_soc_combined.csv' table='[tab_dam_storage_unit_soc_combined#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='Resource' ordinal='0' />
              <column datatype='integer' name='Zone' ordinal='1' />
              <column datatype='string' name='Attribute' ordinal='2' />
              <column datatype='real' name='Value' ordinal='3' />
              <column datatype='string' name='Timeblock' ordinal='4' />
              <column datatype='string' name='Scenario' ordinal='5' />
            </columns>
          </relation>
          <relation connection='textscan.0yqfx1x1ihmfyd180dyq61xv4d9s' name='tab_dam_storage_unit_power_combined.csv' table='[tab_dam_storage_unit_power_combined#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='Resource' ordinal='0' />
              <column datatype='integer' name='Zone' ordinal='1' />
              <column datatype='string' name='Attribute' ordinal='2' />
              <column datatype='real' name='Value' ordinal='3' />
              <column datatype='string' name='Timeblock' ordinal='4' />
              <column datatype='string' name='Scenario' ordinal='5' />
            </columns>
          </relation>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[tab_dam_generator_power_combined.csv+]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Zone</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Zone]</local-name>
            <parent-name>[tab_dam_generator_power_combined.csv+]</parent-name>
            <remote-alias>Zone</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Attribute</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Attribute]</local-name>
            <parent-name>[tab_dam_generator_power_combined.csv+]</parent-name>
            <remote-alias>Attribute</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Value]</local-name>
            <parent-name>[tab_dam_generator_power_combined.csv+]</parent-name>
            <remote-alias>Value</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Timeblock</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Timeblock]</local-name>
            <parent-name>[tab_dam_generator_power_combined.csv+]</parent-name>
            <remote-alias>Timeblock</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Scenario</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Scenario]</local-name>
            <parent-name>[tab_dam_generator_power_combined.csv+]</parent-name>
            <remote-alias>Scenario</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Resource</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Resource]</local-name>
            <parent-name>[tab_dam_generator_power_combined.csv+]</parent-name>
            <remote-alias>Resource</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Table Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Table Name]</local-name>
            <parent-name>[tab_dam_generator_power_combined.csv+]</parent-name>
            <remote-alias>Table Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Charging Time' datatype='string' name='[Calculation_1086493432799272960]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-evening-&quot;) THEN&#13;&#10;  &quot;12-6 PM&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-morning&quot;) THEN&#13;&#10;  &quot;12-6 AM&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
      </column>
      <column caption='Charging Type' datatype='string' name='[Calculation_1086493432799367169]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-flexible&quot;) THEN&#13;&#10;  &quot;Flexible&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-inflexible&quot;) THEN&#13;&#10;  &quot;Inflexible&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
      </column>
      <column caption='EV Adoption Level' datatype='string' name='[Calculation_1086493432800079874]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;low-&quot;) THEN&#13;&#10;  &quot;Low&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;med-&quot;) THEN&#13;&#10;  &quot;Med&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;high-&quot;) THEN&#13;&#10;  &quot;High&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
      </column>
      <column caption='Representative Days' datatype='datetime' name='[Calculation_1086493432800321539]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='IF [Timeblock]==&quot;t1&quot; THEN DATEPARSE(&quot;dd.MMMM.yyyy&quot;,&quot;21.April.2037&quot;)&#13;&#10;ELSEIF [Timeblock]==&quot;t2&quot; THEN DATEPARSE(&quot;dd.MMMM.yyyy&quot;,&quot;15.June.2037&quot;)&#13;&#10;ELSEIF [Timeblock]==&quot;t3&quot; THEN DATEPARSE(&quot;dd.MMMM.yyyy&quot;,&quot;13.October.2037&quot;)&#13;&#10;ELSEIF [Timeblock]==&quot;t4&quot; THEN DATEPARSE(&quot;dd.MMMM.yyyy&quot;,&quot;12.December.2037&quot;)&#13;&#10;END' />
      </column>
      <column caption='Time Interval' datatype='string' name='[Calculation_1086493432800645124]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Timeblock]==&quot;t1&quot; THEN&#13;&#10;  [Attribute]&#13;&#10;ELSEIF [Timeblock]==&quot;t2&quot; THEN&#13;&#10;  &quot;t&quot;+STR(INT(RIGHT([Attribute],LEN([Attribute])-1)))&#13;&#10;ELSEIF [Timeblock]==&quot;t3&quot; THEN&#13;&#10;  &quot;t&quot;+STR(INT(RIGHT([Attribute],LEN([Attribute])-1)))&#13;&#10;ELSE&#13;&#10;  &quot;t&quot;+STR(INT(RIGHT([Attribute],LEN([Attribute])-1)))&#13;&#10;END' />
      </column>
      <column caption='Generation for Load [MW]' datatype='real' name='[Calculation_884112924427558912]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_generator_power_combined.csv&quot; THEN&#13;&#10;  IF [Resource]==&quot;Curtailment&quot; THEN&#13;&#10;    -1*Value&#13;&#10;  ELSE&#13;&#10;    [Value]&#13;&#10;  END&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; THEN&#13;&#10;  [Value]&#13;&#10;END' />
      </column>
      <column caption='Generation Labels' datatype='string' name='[Calculation_884112924428046337]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_generator_power_combined.csv&quot; THEN&#13;&#10;  [Resource]&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&gt;=0 THEN&#13;&#10;  [Resource]&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&lt;0 THEN&#13;&#10;   [Resource]+&quot; Charging&quot;&#13;&#10;END' />
      </column>
      <column caption='Weighted Generation for Load [MW]' datatype='real' name='[Calculation_884112924430045186]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_931963670410043401]*[Calculation_884112924427558912]' />
      </column>
      <column caption='Charging [MW]' datatype='real' name='[Calculation_884112924457828355]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&lt;0 THEN&#13;&#10;  [Value]&#13;&#10;ELSE&#13;&#10;  0&#13;&#10;END' />
      </column>
      <column caption='Date Time' datatype='datetime' name='[Calculation_889179474267987968]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATEADD(&apos;hour&apos;,INT(RIGHT([Calculation_1086493432800645124],LEN([Calculation_1086493432800645124])-1))-1,[Calculation_1086493432800321539])' />
      </column>
      <column caption='Price' datatype='real' name='[Calculation_889179474271539201]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_prices_combined.csv&quot; THEN&#13;&#10;  [Value]&#13;&#10;END' />
      </column>
      <column caption='Storage Level' datatype='real' name='[Calculation_889179474278793218]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_storage_unit_soc_combined.csv&quot; THEN&#13;&#10;  [Value]&#13;&#10;END' />
      </column>
      <column caption='Max Storage Level' datatype='real' name='[Calculation_889179474279444483]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_storage_unit_soc_combined.csv&quot; THEN&#13;&#10;  {FIXED [Resource],[Zone]: MAX([Value])}&#13;&#10;END' />
      </column>
      <column caption='State of Charge' datatype='real' name='[Calculation_889179474279563268]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_889179474278793218]/[Calculation_889179474279444483]' />
      </column>
      <column caption='Weighted State of Charge' datatype='real' name='[Calculation_889179474279690245]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='Sum([Calculation_889179474279563268]*[Calculation_889179474279444483])/SUM([Calculation_889179474279444483])' />
      </column>
      <column caption='Storage Label' datatype='string' name='[Calculation_889179474280439814]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_storage_unit_soc_combined.csv&quot; THEN&#13;&#10;  [Resource]&#13;&#10;END' />
      </column>
      <column caption='Total Generation [MW]' datatype='real' name='[Calculation_918452871620472832]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_generator_power_combined.csv&quot; THEN&#13;&#10;  IF [Resource]==&quot;Unmet Demand&quot; OR [Resource]==&quot;Curtailment&quot; THEN&#13;&#10;    0*[Value]&#13;&#10;  ELSE&#13;&#10;    [Value]&#13;&#10;  END&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&gt;=0 THEN&#13;&#10;  [Value]&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&lt;0 THEN&#13;&#10;  0*[Value]&#13;&#10;END' />
      </column>
      <column caption='Inflexible Load [MW]' datatype='real' name='[Calculation_931963670409289734]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_loads_combined.csv&quot; THEN&#13;&#10;  [Value]&#13;&#10;ELSE&#13;&#10;  0&#13;&#10;END' />
      </column>
      <column caption='Flexible Load [MW]' datatype='real' name='[Calculation_931963670409551879]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_demand_response_load_combined.csv&quot; THEN&#13;&#10;  [Value]&#13;&#10;ELSE&#13;&#10;  0&#13;&#10;END' />
      </column>
      <column caption='Load Labels' datatype='string' name='[Calculation_931963670409670664]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_loads_combined.csv&quot; THEN&#13;&#10;  &quot;Inflexible&quot;&#13;&#10;ELSEIF [Table Name]==&quot;tab_dam_demand_response_load_combined.csv&quot; THEN&#13;&#10;  &quot;Flexible&quot;&#13;&#10;ELSEIF [Table Name]==&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&lt;0 THEN&#13;&#10;  &quot;Charging&quot;&#13;&#10;END' />
      </column>
      <column caption='Weights' datatype='real' name='[Calculation_931963670410043401]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Timeblock]&#13;&#10;  WHEN &quot;t1&quot; THEN 36 &#13;&#10;  WHEN &quot;t2&quot; THEN 14&#13;&#10;  WHEN &quot;t3&quot; THEN 9.18368717&#13;&#10;  WHEN &quot;t4&quot; THEN 13&#13;&#10;END' />
      </column>
      <column caption='Total Load [MW]' datatype='real' name='[Calculation_931963670410522634]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_931963670409551879]+[Calculation_931963670409289734]-[Calculation_884112924457828355]' />
      </column>
      <column caption='Weighted Load [MW]' datatype='real' name='[Calculation_931963670410706955]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_931963670410043401]*[Calculation_931963670410522634]' />
      </column>
      <column caption='Generation Labels (group)' datatype='string' name='[Generation Labels (group) (copy)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Calculation_884112924428046337]' new-bin='true'>
          <bin default-name='false' value='&quot;Batteries&quot;'>
            <value>&quot;Batteries&quot;</value>
            <value>&quot;Batteries Charging&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;CCGT&quot;'>
            <value>&quot;CCGT New&quot;</value>
            <value>&quot;CCGT Old&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Coal&quot;'>
            <value>&quot;Coal new&quot;</value>
            <value>&quot;Coal Old&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Diesel&quot;'>
            <value>&quot;Backup&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Hydro&quot;'>
            <value>&quot;Hydro Reservoir&quot;</value>
            <value>&quot;Hydro Reservoir Charging&quot;</value>
            <value>&quot;Hydro Run of River&quot;</value>
            <value>&quot;Pumped Hydro Storage&quot;</value>
            <value>&quot;Pumped Hydro Storage Charging&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Nuclear&quot;'>
            <value>&quot;Nuclear New&quot;</value>
            <value>&quot;Nuclear Old&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Other &quot;'>
            <value>&quot;Biomass&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Solar&quot;'>
            <value>&quot;Curtailment&quot;</value>
            <value>&quot;Solar&quot;</value>
          </bin>
        </calculation>
      </column>
      <column caption='Generation Labels with Charging (group)' datatype='string' name='[Generation Labels (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Calculation_884112924428046337]' new-bin='true'>
          <bin default-name='false' value='&quot;CCGT&quot;'>
            <value>&quot;CCGT New&quot;</value>
            <value>&quot;CCGT Old&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Coal&quot;'>
            <value>&quot;Coal new&quot;</value>
            <value>&quot;Coal Old&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Diesel&quot;'>
            <value>&quot;Backup&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Hydro&quot;'>
            <value>&quot;Hydro Reservoir&quot;</value>
            <value>&quot;Hydro Run of River&quot;</value>
            <value>&quot;Pumped Hydro Storage&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Nuclear&quot;'>
            <value>&quot;Nuclear New&quot;</value>
            <value>&quot;Nuclear Old&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Other &quot;'>
            <value>&quot;Biomass&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Solar&quot;'>
            <value>&quot;Curtailment&quot;</value>
            <value>&quot;Solar&quot;</value>
          </bin>
        </calculation>
      </column>
      <column caption='Generation for Load (no charging) [MW]' datatype='real' name='[Generation for Load [MW]] (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_generator_power_combined.csv&quot; THEN&#13;&#10;  IF [Resource]==&quot;Curtailment&quot; THEN&#13;&#10;    -1*Value&#13;&#10;  ELSE&#13;&#10;    [Value]&#13;&#10;  END&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; THEN&#13;&#10;  IF [Value]&lt;0 THEN&#13;&#10;    0*[Value]&#13;&#10;  ELSE&#13;&#10;    [Value]&#13;&#10;  END&#13;&#10;END' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='5-day time period' datatype='string' name='[Representative Days (copy)]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Timeblock]==&quot;t1&quot; THEN &quot;April 21-25&quot;&#13;&#10;ELSEIF [Timeblock]==&quot;t2&quot; THEN &quot;June 15-19&quot;&#13;&#10;ELSEIF [Timeblock]==&quot;t3&quot; THEN &quot;October 13-17&quot;&#13;&#10;ELSEIF [Timeblock]==&quot;t4&quot; THEN &quot;December 12-16&quot;&#13;&#10;END' />
      </column>
      <column datatype='string' name='[Resource]' role='dimension' type='nominal' />
      <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
      <column datatype='real' name='[Value]' role='measure' type='quantitative' />
      <column caption='Weighted Generation for Dispatch [MW]' datatype='real' name='[Weighted Generation for Load [MW]] (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_931963670410043401]*[Calculation_918452871620472832]' />
      </column>
      <column aggregation='Sum' datatype='integer' name='[Zone]' role='dimension' type='ordinal' />
      <column-instance column='[Calculation_889179474271539201]' derivation='Avg' name='[avg:Calculation_889179474271539201:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_889179474271539201]' derivation='Max' name='[max:Calculation_889179474271539201:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_889179474271539201]' derivation='Min' name='[min:Calculation_889179474271539201:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_884112924428046337]' derivation='None' name='[none:Calculation_884112924428046337:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_889179474280439814]' derivation='None' name='[none:Calculation_889179474280439814:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_931963670409670664]' derivation='None' name='[none:Calculation_931963670409670664:nk]' pivot='key' type='nominal' />
      <column-instance column='[Resource]' derivation='None' name='[none:Resource:nk]' pivot='key' type='nominal' />
      <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_884112924430045186]' derivation='Sum' name='[pcto:sum:Calculation_884112924430045186:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_884112924430045186]' derivation='Sum' name='[pcto:sum:Calculation_884112924430045186:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_884112924427558912]' derivation='Sum' name='[sum:Calculation_884112924427558912:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_884112924430045186]' derivation='Sum' name='[sum:Calculation_884112924430045186:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_884112924457828355]' derivation='Sum' name='[sum:Calculation_884112924457828355:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_889179474271539201]' derivation='Sum' name='[sum:Calculation_889179474271539201:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_889179474278793218]' derivation='Sum' name='[sum:Calculation_889179474278793218:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_889179474279444483]' derivation='Sum' name='[sum:Calculation_889179474279444483:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_889179474279563268]' derivation='Sum' name='[sum:Calculation_889179474279563268:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_918452871620472832]' derivation='Sum' name='[sum:Calculation_918452871620472832:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_931963670409289734]' derivation='Sum' name='[sum:Calculation_931963670409289734:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_931963670409551879]' derivation='Sum' name='[sum:Calculation_931963670409551879:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_931963670410043401]' derivation='Sum' name='[sum:Calculation_931963670410043401:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_931963670410522634]' derivation='Sum' name='[sum:Calculation_931963670410522634:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_931963670410706955]' derivation='Sum' name='[sum:Calculation_931963670410706955:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Generation for Load [MW]] (copy)]' derivation='Sum' name='[sum:Generation for Load [MW]] (copy):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Value]' derivation='Sum' name='[sum:Value:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Weighted Generation for Load [MW]] (copy)]' derivation='Sum' name='[sum:Weighted Generation for Load [MW]] (copy):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_889179474279690245]' derivation='User' name='[usr:Calculation_889179474279690245:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.5' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Calculation_884112924428046337:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Coal Old&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Biomass&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hydro Run of River&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Curtailment&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;CCGT New&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Unmet Demand&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Backup&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pumped Hydro Storage Charging&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;CCGT Old&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nuclear New&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nuclear Old&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Solar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Wind&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hydro Reservoir&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Coal new&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Batteries&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pumped Hydro Storage&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hydro Reservoir Charging&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Batteries Charging&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Generation Labels (group) (copy)]' type='palette'>
            <map to='#000000'>
              <bucket>&quot;Diesel&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hydro&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Wind&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Batteries&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Coal&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nuclear&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;Unmet Demand&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Other &quot;</bucket>
            </map>
            <map to='#f0bd27'>
              <bucket>&quot;Solar&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;CCGT&quot;</bucket>
            </map>
            <map to='#ffda66'>
              <bucket>&quot;Curtailment&quot;</bucket>
            </map>
            <map to='#ffffff'>
              <bucket>%null%</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Scenario:nk]' type='palette'>
            <map to='#000000'>
              <bucket>&quot;default-L-H-8-1275&quot;</bucket>
            </map>
            <map to='#ae123a'>
              <bucket>&quot;med-night-L-H-8-1275-inflexible&quot;</bucket>
            </map>
            <map to='#ffbeb2'>
              <bucket>&quot;med-night-L-H-8-1275-flexible&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_889179474280439814:nk]' type='palette'>
            <map to='#43719f'>
              <bucket>&quot;Pumped Hydro Storage&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>&quot;Hydro Reservoir&quot;</bucket>
            </map>
            <map to='#d3d3d3'>
              <bucket>&quot;Batteries&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Resource:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Curtailment&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;CCGT New&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nuclear Old&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hydro Reservoir&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;CCGT Old&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Backup&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Wind&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Coal new&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pumped Hydro Storage&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Solar&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hydro Run of River&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Unmet Demand&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Coal Old&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Batteries&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nuclear New&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Biomass&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_931963670409670664:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Charging&quot;</bucket>
            </map>
            <map to='#5c6068'>
              <bucket>&quot;Inflexible&quot;</bucket>
            </map>
            <map to='#b3b7b8'>
              <bucket>&quot;Flexible&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#000000'>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_931963670409289734:qk]&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_889179474279444483:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Value:qk]&quot;</bucket>
            </map>
            <map to='#767f8b'>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_931963670410522634:qk]&quot;</bucket>
            </map>
            <map to='#767f8b'>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_931963670410706955:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_889179474278793218:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_884112924457828355:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[usr:Calculation_889179474279690245:qk]&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[avg:Calculation_889179474271539201:qk]&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[max:Calculation_889179474271539201:qk]&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[min:Calculation_889179474271539201:qk]&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_889179474271539201:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_931963670409551879:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Weighted Generation for Load [MW]] (copy):qk]&quot;</bucket>
            </map>
            <map to='#d3d3d3'>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_918452871620472832:qk]&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_931963670410043401:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[pcto:sum:Calculation_884112924430045186:qk:2]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[pcto:sum:Calculation_884112924430045186:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_884112924427558912:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_884112924430045186:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Generation for Load [MW]] (copy):qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_889179474279563268:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Generation Labels (group)]' type='palette'>
            <map to='#000000'>
              <bucket>&quot;Diesel&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Coal Old&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hydro&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Biomass&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Wind&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Batteries&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hydro Run of River&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;CCGT New&quot;</bucket>
            </map>
            <map to='#92c0df'>
              <bucket>&quot;Hydro Reservoir Charging&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Coal&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Backup&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nuclear&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;CCGT Old&quot;</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>&quot;Pumped Hydro Storage Charging&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nuclear New&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Other &quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nuclear Old&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Resource&quot;</bucket>
            </map>
            <map to='#d5d5d5'>
              <bucket>&quot;Batteries Charging&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hydro Reservoir&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Unmet Demand&quot;</bucket>
            </map>
            <map to='#f0bd27'>
              <bucket>&quot;Solar&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Coal new&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;CCGT&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Curtailment&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pumped Hydro Storage&quot;</bucket>
            </map>
            <map to='#ffffff'>
              <bucket>%null%</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Annual Generation (Absolute) by Type'>
      <table>
        <view>
          <datasources>
            <datasource caption='tab_dam_generator_power_combined' name='federated.0m2ojda1ih48r312ma38r1hlijh9' />
          </datasources>
          <datasource-dependencies datasource='federated.0m2ojda1ih48r312ma38r1hlijh9'>
            <column caption='Charging Time' datatype='string' name='[Calculation_1086493432799272960]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-evening-&quot;) THEN&#13;&#10;  &quot;12-6 PM&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-morning&quot;) THEN&#13;&#10;  &quot;12-6 AM&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='Charging Type' datatype='string' name='[Calculation_1086493432799367169]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-flexible&quot;) THEN&#13;&#10;  &quot;Flexible&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-inflexible&quot;) THEN&#13;&#10;  &quot;Inflexible&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='EV Adoption Level' datatype='string' name='[Calculation_1086493432800079874]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;low-&quot;) THEN&#13;&#10;  &quot;Low&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;med-&quot;) THEN&#13;&#10;  &quot;Med&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;high-&quot;) THEN&#13;&#10;  &quot;High&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='Generation for Load [MW]' datatype='real' name='[Calculation_884112924427558912]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_generator_power_combined.csv&quot; THEN&#13;&#10;  IF [Resource]==&quot;Curtailment&quot; THEN&#13;&#10;    -1*Value&#13;&#10;  ELSE&#13;&#10;    [Value]&#13;&#10;  END&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; THEN&#13;&#10;  [Value]&#13;&#10;END' />
            </column>
            <column caption='Generation Labels' datatype='string' name='[Calculation_884112924428046337]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_generator_power_combined.csv&quot; THEN&#13;&#10;  [Resource]&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&gt;=0 THEN&#13;&#10;  [Resource]&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&lt;0 THEN&#13;&#10;   [Resource]+&quot; Charging&quot;&#13;&#10;END' />
            </column>
            <column caption='Weighted Generation for Load [MW]' datatype='real' name='[Calculation_884112924430045186]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_931963670410043401]*[Calculation_884112924427558912]' />
            </column>
            <column caption='Weights' datatype='real' name='[Calculation_931963670410043401]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Timeblock]&#13;&#10;  WHEN &quot;t1&quot; THEN 36 &#13;&#10;  WHEN &quot;t2&quot; THEN 14&#13;&#10;  WHEN &quot;t3&quot; THEN 9.18368717&#13;&#10;  WHEN &quot;t4&quot; THEN 13&#13;&#10;END' />
            </column>
            <column caption='Generation Labels (group)' datatype='string' name='[Generation Labels (group) (copy)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Calculation_884112924428046337]' new-bin='true'>
                <bin default-name='false' value='&quot;Batteries&quot;'>
                  <value>&quot;Batteries&quot;</value>
                  <value>&quot;Batteries Charging&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;CCGT&quot;'>
                  <value>&quot;CCGT New&quot;</value>
                  <value>&quot;CCGT Old&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Coal&quot;'>
                  <value>&quot;Coal new&quot;</value>
                  <value>&quot;Coal Old&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Diesel&quot;'>
                  <value>&quot;Backup&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Hydro&quot;'>
                  <value>&quot;Hydro Reservoir&quot;</value>
                  <value>&quot;Hydro Reservoir Charging&quot;</value>
                  <value>&quot;Hydro Run of River&quot;</value>
                  <value>&quot;Pumped Hydro Storage&quot;</value>
                  <value>&quot;Pumped Hydro Storage Charging&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Nuclear&quot;'>
                  <value>&quot;Nuclear New&quot;</value>
                  <value>&quot;Nuclear Old&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Other &quot;'>
                  <value>&quot;Biomass&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Solar&quot;'>
                  <value>&quot;Curtailment&quot;</value>
                  <value>&quot;Solar&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Resource]' role='dimension' type='nominal' />
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Timeblock]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1086493432799272960]' derivation='None' name='[none:Calculation_1086493432799272960:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1086493432799367169]' derivation='None' name='[none:Calculation_1086493432799367169:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1086493432800079874]' derivation='None' name='[none:Calculation_1086493432800079874:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_884112924430045186]' derivation='Sum' name='[pcto:sum:Calculation_884112924430045186:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_884112924430045186]' derivation='Sum' name='[sum:Calculation_884112924430045186:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group) (copy)]' direction='ASC'>
            <dictionary>
              <bucket>%null%</bucket>
              <bucket>&quot;Unmet Demand&quot;</bucket>
              <bucket>&quot;Curtailment&quot;</bucket>
              <bucket>&quot;Solar&quot;</bucket>
              <bucket>&quot;Wind&quot;</bucket>
              <bucket>&quot;Batteries&quot;</bucket>
              <bucket>&quot;Diesel&quot;</bucket>
              <bucket>&quot;Other &quot;</bucket>
              <bucket>&quot;CCGT&quot;</bucket>
              <bucket>&quot;Hydro&quot;</bucket>
              <bucket>&quot;Coal&quot;</bucket>
              <bucket>&quot;Nuclear&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;None&quot;</bucket>
              <bucket>&quot;Med&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0m2ojda1ih48r312ma38r1hlijh9].[pcto:sum:Calculation_884112924430045186:qk:2]' value='p0%' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group) (copy)]' />
              <text column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[pcto:sum:Calculation_884112924430045186:qk:2]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_884112924430045186:qk]</rows>
        <cols>([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk] / [federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk]))</cols>
      </table>
      <simple-id uuid='{98271FCC-EAFA-491F-835D-6B4CE10B71C3}' />
    </worksheet>
    <worksheet name='Annual Generation (Percentage) by Type'>
      <table>
        <view>
          <datasources>
            <datasource caption='tab_dam_generator_power_combined' name='federated.0m2ojda1ih48r312ma38r1hlijh9' />
          </datasources>
          <datasource-dependencies datasource='federated.0m2ojda1ih48r312ma38r1hlijh9'>
            <column caption='Charging Time' datatype='string' name='[Calculation_1086493432799272960]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-evening-&quot;) THEN&#13;&#10;  &quot;12-6 PM&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-morning&quot;) THEN&#13;&#10;  &quot;12-6 AM&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='Charging Type' datatype='string' name='[Calculation_1086493432799367169]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-flexible&quot;) THEN&#13;&#10;  &quot;Flexible&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-inflexible&quot;) THEN&#13;&#10;  &quot;Inflexible&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='EV Adoption Level' datatype='string' name='[Calculation_1086493432800079874]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;low-&quot;) THEN&#13;&#10;  &quot;Low&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;med-&quot;) THEN&#13;&#10;  &quot;Med&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;high-&quot;) THEN&#13;&#10;  &quot;High&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='Generation for Load [MW]' datatype='real' name='[Calculation_884112924427558912]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_generator_power_combined.csv&quot; THEN&#13;&#10;  IF [Resource]==&quot;Curtailment&quot; THEN&#13;&#10;    -1*Value&#13;&#10;  ELSE&#13;&#10;    [Value]&#13;&#10;  END&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; THEN&#13;&#10;  [Value]&#13;&#10;END' />
            </column>
            <column caption='Generation Labels' datatype='string' name='[Calculation_884112924428046337]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_generator_power_combined.csv&quot; THEN&#13;&#10;  [Resource]&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&gt;=0 THEN&#13;&#10;  [Resource]&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&lt;0 THEN&#13;&#10;   [Resource]+&quot; Charging&quot;&#13;&#10;END' />
            </column>
            <column caption='Weighted Generation for Load [MW]' datatype='real' name='[Calculation_884112924430045186]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_931963670410043401]*[Calculation_884112924427558912]' />
            </column>
            <column caption='Weights' datatype='real' name='[Calculation_931963670410043401]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Timeblock]&#13;&#10;  WHEN &quot;t1&quot; THEN 36 &#13;&#10;  WHEN &quot;t2&quot; THEN 14&#13;&#10;  WHEN &quot;t3&quot; THEN 9.18368717&#13;&#10;  WHEN &quot;t4&quot; THEN 13&#13;&#10;END' />
            </column>
            <column caption='Generation Labels (group)' datatype='string' name='[Generation Labels (group) (copy)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Calculation_884112924428046337]' new-bin='true'>
                <bin default-name='false' value='&quot;Batteries&quot;'>
                  <value>&quot;Batteries&quot;</value>
                  <value>&quot;Batteries Charging&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;CCGT&quot;'>
                  <value>&quot;CCGT New&quot;</value>
                  <value>&quot;CCGT Old&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Coal&quot;'>
                  <value>&quot;Coal new&quot;</value>
                  <value>&quot;Coal Old&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Diesel&quot;'>
                  <value>&quot;Backup&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Hydro&quot;'>
                  <value>&quot;Hydro Reservoir&quot;</value>
                  <value>&quot;Hydro Reservoir Charging&quot;</value>
                  <value>&quot;Hydro Run of River&quot;</value>
                  <value>&quot;Pumped Hydro Storage&quot;</value>
                  <value>&quot;Pumped Hydro Storage Charging&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Nuclear&quot;'>
                  <value>&quot;Nuclear New&quot;</value>
                  <value>&quot;Nuclear Old&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Other &quot;'>
                  <value>&quot;Biomass&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Solar&quot;'>
                  <value>&quot;Curtailment&quot;</value>
                  <value>&quot;Solar&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Resource]' role='dimension' type='nominal' />
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Timeblock]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1086493432799272960]' derivation='None' name='[none:Calculation_1086493432799272960:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1086493432799367169]' derivation='None' name='[none:Calculation_1086493432799367169:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1086493432800079874]' derivation='None' name='[none:Calculation_1086493432800079874:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_884112924430045186]' derivation='Sum' name='[pcto:sum:Calculation_884112924430045186:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group) (copy)]' direction='ASC'>
            <dictionary>
              <bucket>%null%</bucket>
              <bucket>&quot;Unmet Demand&quot;</bucket>
              <bucket>&quot;Curtailment&quot;</bucket>
              <bucket>&quot;Solar&quot;</bucket>
              <bucket>&quot;Wind&quot;</bucket>
              <bucket>&quot;Batteries&quot;</bucket>
              <bucket>&quot;Diesel&quot;</bucket>
              <bucket>&quot;Other &quot;</bucket>
              <bucket>&quot;CCGT&quot;</bucket>
              <bucket>&quot;Hydro&quot;</bucket>
              <bucket>&quot;Coal&quot;</bucket>
              <bucket>&quot;Nuclear&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;None&quot;</bucket>
              <bucket>&quot;Med&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0m2ojda1ih48r312ma38r1hlijh9].[pcto:sum:Calculation_884112924430045186:qk:2]' value='p0%' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group) (copy)]' />
              <text column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[pcto:sum:Calculation_884112924430045186:qk:2]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0m2ojda1ih48r312ma38r1hlijh9].[pcto:sum:Calculation_884112924430045186:qk:2]</rows>
        <cols>([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk] / [federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk]))</cols>
      </table>
      <simple-id uuid='{E0FF1331-7B26-4488-BFB2-4036D97C9AF0}' />
    </worksheet>
    <worksheet name='Dispatch with Load'>
      <table>
        <view>
          <datasources>
            <datasource caption='tab_dam_generator_power_combined' name='federated.0m2ojda1ih48r312ma38r1hlijh9' />
          </datasources>
          <datasource-dependencies datasource='federated.0m2ojda1ih48r312ma38r1hlijh9'>
            <column datatype='string' name='[Attribute]' role='dimension' type='nominal' />
            <column caption='Charging Time' datatype='string' name='[Calculation_1086493432799272960]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-evening-&quot;) THEN&#13;&#10;  &quot;12-6 PM&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-morning&quot;) THEN&#13;&#10;  &quot;12-6 AM&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='Charging Type' datatype='string' name='[Calculation_1086493432799367169]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-flexible&quot;) THEN&#13;&#10;  &quot;Flexible&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-inflexible&quot;) THEN&#13;&#10;  &quot;Inflexible&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='EV Adoption Level' datatype='string' name='[Calculation_1086493432800079874]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;low-&quot;) THEN&#13;&#10;  &quot;Low&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;med-&quot;) THEN&#13;&#10;  &quot;Med&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;high-&quot;) THEN&#13;&#10;  &quot;High&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='Representative Days' datatype='datetime' name='[Calculation_1086493432800321539]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF [Timeblock]==&quot;t1&quot; THEN DATEPARSE(&quot;dd.MMMM.yyyy&quot;,&quot;21.April.2037&quot;)&#13;&#10;ELSEIF [Timeblock]==&quot;t2&quot; THEN DATEPARSE(&quot;dd.MMMM.yyyy&quot;,&quot;15.June.2037&quot;)&#13;&#10;ELSEIF [Timeblock]==&quot;t3&quot; THEN DATEPARSE(&quot;dd.MMMM.yyyy&quot;,&quot;13.October.2037&quot;)&#13;&#10;ELSEIF [Timeblock]==&quot;t4&quot; THEN DATEPARSE(&quot;dd.MMMM.yyyy&quot;,&quot;12.December.2037&quot;)&#13;&#10;END' />
            </column>
            <column caption='Time Interval' datatype='string' name='[Calculation_1086493432800645124]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Timeblock]==&quot;t1&quot; THEN&#13;&#10;  [Attribute]&#13;&#10;ELSEIF [Timeblock]==&quot;t2&quot; THEN&#13;&#10;  &quot;t&quot;+STR(INT(RIGHT([Attribute],LEN([Attribute])-1)))&#13;&#10;ELSEIF [Timeblock]==&quot;t3&quot; THEN&#13;&#10;  &quot;t&quot;+STR(INT(RIGHT([Attribute],LEN([Attribute])-1)))&#13;&#10;ELSE&#13;&#10;  &quot;t&quot;+STR(INT(RIGHT([Attribute],LEN([Attribute])-1)))&#13;&#10;END' />
            </column>
            <column caption='Generation for Load [MW]' datatype='real' name='[Calculation_884112924427558912]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_generator_power_combined.csv&quot; THEN&#13;&#10;  IF [Resource]==&quot;Curtailment&quot; THEN&#13;&#10;    -1*Value&#13;&#10;  ELSE&#13;&#10;    [Value]&#13;&#10;  END&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; THEN&#13;&#10;  [Value]&#13;&#10;END' />
            </column>
            <column caption='Generation Labels' datatype='string' name='[Calculation_884112924428046337]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_generator_power_combined.csv&quot; THEN&#13;&#10;  [Resource]&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&gt;=0 THEN&#13;&#10;  [Resource]&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&lt;0 THEN&#13;&#10;   [Resource]+&quot; Charging&quot;&#13;&#10;END' />
            </column>
            <column caption='Charging [MW]' datatype='real' name='[Calculation_884112924457828355]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&lt;0 THEN&#13;&#10;  [Value]&#13;&#10;ELSE&#13;&#10;  0&#13;&#10;END' />
            </column>
            <column caption='Date Time' datatype='datetime' name='[Calculation_889179474267987968]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATEADD(&apos;hour&apos;,INT(RIGHT([Calculation_1086493432800645124],LEN([Calculation_1086493432800645124])-1))-1,[Calculation_1086493432800321539])' />
            </column>
            <column caption='Total Generation [MW]' datatype='real' name='[Calculation_918452871620472832]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_generator_power_combined.csv&quot; THEN&#13;&#10;  IF [Resource]==&quot;Unmet Demand&quot; OR [Resource]==&quot;Curtailment&quot; THEN&#13;&#10;    0*[Value]&#13;&#10;  ELSE&#13;&#10;    [Value]&#13;&#10;  END&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&gt;=0 THEN&#13;&#10;  [Value]&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&lt;0 THEN&#13;&#10;  0*[Value]&#13;&#10;END' />
            </column>
            <column caption='Inflexible Load [MW]' datatype='real' name='[Calculation_931963670409289734]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_loads_combined.csv&quot; THEN&#13;&#10;  [Value]&#13;&#10;ELSE&#13;&#10;  0&#13;&#10;END' />
            </column>
            <column caption='Flexible Load [MW]' datatype='real' name='[Calculation_931963670409551879]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_demand_response_load_combined.csv&quot; THEN&#13;&#10;  [Value]&#13;&#10;ELSE&#13;&#10;  0&#13;&#10;END' />
            </column>
            <column caption='Total Load [MW]' datatype='real' name='[Calculation_931963670410522634]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_931963670409551879]+[Calculation_931963670409289734]-[Calculation_884112924457828355]' />
            </column>
            <column caption='Generation Labels with Charging (group)' datatype='string' name='[Generation Labels (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Calculation_884112924428046337]' new-bin='true'>
                <bin default-name='false' value='&quot;CCGT&quot;'>
                  <value>&quot;CCGT New&quot;</value>
                  <value>&quot;CCGT Old&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Coal&quot;'>
                  <value>&quot;Coal new&quot;</value>
                  <value>&quot;Coal Old&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Diesel&quot;'>
                  <value>&quot;Backup&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Hydro&quot;'>
                  <value>&quot;Hydro Reservoir&quot;</value>
                  <value>&quot;Hydro Run of River&quot;</value>
                  <value>&quot;Pumped Hydro Storage&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Nuclear&quot;'>
                  <value>&quot;Nuclear New&quot;</value>
                  <value>&quot;Nuclear Old&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Other &quot;'>
                  <value>&quot;Biomass&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Solar&quot;'>
                  <value>&quot;Curtailment&quot;</value>
                  <value>&quot;Solar&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Resource]' role='dimension' type='nominal' />
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Timeblock]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_889179474267987968]' derivation='Day' name='[dy:Calculation_889179474267987968:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_889179474267987968]' derivation='Hour' name='[hr:Calculation_889179474267987968:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_889179474267987968]' derivation='Month' name='[mn:Calculation_889179474267987968:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1086493432799272960]' derivation='None' name='[none:Calculation_1086493432799272960:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1086493432799367169]' derivation='None' name='[none:Calculation_1086493432799367169:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1086493432800079874]' derivation='None' name='[none:Calculation_1086493432800079874:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_889179474267987968]' derivation='Quarter' name='[qr:Calculation_889179474267987968:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_884112924427558912]' derivation='Sum' name='[sum:Calculation_884112924427558912:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_918452871620472832]' derivation='Sum' name='[sum:Calculation_918452871620472832:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_931963670409289734]' derivation='Sum' name='[sum:Calculation_931963670409289734:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_931963670410522634]' derivation='Sum' name='[sum:Calculation_931963670410522634:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_889179474267987968]' derivation='Year' name='[yr:Calculation_889179474267987968:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_918452871620472832:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_931963670410522634:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_931963670409289734:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_918452871620472832:qk]&quot;</bucket>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_931963670410522634:qk]&quot;</bucket>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_931963670409289734:qk]&quot;</bucket>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_884112924427558912:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group)]' direction='ASC'>
            <dictionary>
              <bucket>%null%</bucket>
              <bucket>&quot;Hydro Reservoir Charging&quot;</bucket>
              <bucket>&quot;Batteries Charging&quot;</bucket>
              <bucket>&quot;Pumped Hydro Storage Charging&quot;</bucket>
              <bucket>&quot;Unmet Demand&quot;</bucket>
              <bucket>&quot;Curtailment&quot;</bucket>
              <bucket>&quot;Solar&quot;</bucket>
              <bucket>&quot;Wind&quot;</bucket>
              <bucket>&quot;Batteries&quot;</bucket>
              <bucket>&quot;Diesel&quot;</bucket>
              <bucket>&quot;Other &quot;</bucket>
              <bucket>&quot;CCGT&quot;</bucket>
              <bucket>&quot;Hydro&quot;</bucket>
              <bucket>&quot;Coal&quot;</bucket>
              <bucket>&quot;Nuclear&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[mn:Calculation_889179474267987968:ok]'>
            <groupfilter function='member' level='[mn:Calculation_889179474267987968:ok]' member='12' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;None&quot;</bucket>
              <bucket>&quot;12-3 AM&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;None&quot;</bucket>
              <bucket>&quot;Flexible&quot;</bucket>
              <bucket>&quot;Inflexible&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;None&quot;</bucket>
              <bucket>&quot;Med&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]'>
            <groupfilter from='&quot;default-L-H-8-1275&quot;' function='range' level='[none:Scenario:nk]' to='&quot;med-day-L-H-8-1275-inflexible&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0m2ojda1ih48r312ma38r1hlijh9].[:Measure Names]</column>
            <column>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]</column>
            <column>[federated.0m2ojda1ih48r312ma38r1hlijh9].[mn:Calculation_889179474267987968:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0m2ojda1ih48r312ma38r1hlijh9].[Multiple Values]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='width' field='[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_884112924427558912:qk]' value='10' />
            <format attr='width' field='[federated.0m2ojda1ih48r312ma38r1hlijh9].[Multiple Values]' value='10' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_884112924427558912:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group)]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0m2ojda1ih48r312ma38r1hlijh9].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>(([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk] / [federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk])) * ([federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_884112924427558912:qk] + [federated.0m2ojda1ih48r312ma38r1hlijh9].[Multiple Values]))</rows>
        <cols>([federated.0m2ojda1ih48r312ma38r1hlijh9].[yr:Calculation_889179474267987968:ok] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[qr:Calculation_889179474267987968:ok] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[mn:Calculation_889179474267987968:ok] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[dy:Calculation_889179474267987968:ok] / [federated.0m2ojda1ih48r312ma38r1hlijh9].[hr:Calculation_889179474267987968:ok]))))</cols>
      </table>
      <simple-id uuid='{D2ED8F6E-8B18-4B2D-98CF-511577BAE9A3}' />
    </worksheet>
    <worksheet name='Dispatch with Load (no charging)'>
      <table>
        <view>
          <datasources>
            <datasource caption='tab_dam_generator_power_combined' name='federated.0m2ojda1ih48r312ma38r1hlijh9' />
          </datasources>
          <datasource-dependencies datasource='federated.0m2ojda1ih48r312ma38r1hlijh9'>
            <column datatype='string' name='[Attribute]' role='dimension' type='nominal' />
            <column caption='Charging Time' datatype='string' name='[Calculation_1086493432799272960]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-evening-&quot;) THEN&#13;&#10;  &quot;12-6 PM&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-morning&quot;) THEN&#13;&#10;  &quot;12-6 AM&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='Charging Type' datatype='string' name='[Calculation_1086493432799367169]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-flexible&quot;) THEN&#13;&#10;  &quot;Flexible&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-inflexible&quot;) THEN&#13;&#10;  &quot;Inflexible&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='EV Adoption Level' datatype='string' name='[Calculation_1086493432800079874]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;low-&quot;) THEN&#13;&#10;  &quot;Low&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;med-&quot;) THEN&#13;&#10;  &quot;Med&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;high-&quot;) THEN&#13;&#10;  &quot;High&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='Representative Days' datatype='datetime' name='[Calculation_1086493432800321539]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF [Timeblock]==&quot;t1&quot; THEN DATEPARSE(&quot;dd.MMMM.yyyy&quot;,&quot;21.April.2037&quot;)&#13;&#10;ELSEIF [Timeblock]==&quot;t2&quot; THEN DATEPARSE(&quot;dd.MMMM.yyyy&quot;,&quot;15.June.2037&quot;)&#13;&#10;ELSEIF [Timeblock]==&quot;t3&quot; THEN DATEPARSE(&quot;dd.MMMM.yyyy&quot;,&quot;13.October.2037&quot;)&#13;&#10;ELSEIF [Timeblock]==&quot;t4&quot; THEN DATEPARSE(&quot;dd.MMMM.yyyy&quot;,&quot;12.December.2037&quot;)&#13;&#10;END' />
            </column>
            <column caption='Time Interval' datatype='string' name='[Calculation_1086493432800645124]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Timeblock]==&quot;t1&quot; THEN&#13;&#10;  [Attribute]&#13;&#10;ELSEIF [Timeblock]==&quot;t2&quot; THEN&#13;&#10;  &quot;t&quot;+STR(INT(RIGHT([Attribute],LEN([Attribute])-1)))&#13;&#10;ELSEIF [Timeblock]==&quot;t3&quot; THEN&#13;&#10;  &quot;t&quot;+STR(INT(RIGHT([Attribute],LEN([Attribute])-1)))&#13;&#10;ELSE&#13;&#10;  &quot;t&quot;+STR(INT(RIGHT([Attribute],LEN([Attribute])-1)))&#13;&#10;END' />
            </column>
            <column caption='Generation for Load [MW]' datatype='real' name='[Calculation_884112924427558912]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_generator_power_combined.csv&quot; THEN&#13;&#10;  IF [Resource]==&quot;Curtailment&quot; THEN&#13;&#10;    -1*Value&#13;&#10;  ELSE&#13;&#10;    [Value]&#13;&#10;  END&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; THEN&#13;&#10;  [Value]&#13;&#10;END' />
            </column>
            <column caption='Generation Labels' datatype='string' name='[Calculation_884112924428046337]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_generator_power_combined.csv&quot; THEN&#13;&#10;  [Resource]&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&gt;=0 THEN&#13;&#10;  [Resource]&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&lt;0 THEN&#13;&#10;   [Resource]+&quot; Charging&quot;&#13;&#10;END' />
            </column>
            <column caption='Charging [MW]' datatype='real' name='[Calculation_884112924457828355]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&lt;0 THEN&#13;&#10;  [Value]&#13;&#10;ELSE&#13;&#10;  0&#13;&#10;END' />
            </column>
            <column caption='Date Time' datatype='datetime' name='[Calculation_889179474267987968]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATEADD(&apos;hour&apos;,INT(RIGHT([Calculation_1086493432800645124],LEN([Calculation_1086493432800645124])-1))-1,[Calculation_1086493432800321539])' />
            </column>
            <column caption='Total Generation [MW]' datatype='real' name='[Calculation_918452871620472832]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_generator_power_combined.csv&quot; THEN&#13;&#10;  IF [Resource]==&quot;Unmet Demand&quot; OR [Resource]==&quot;Curtailment&quot; THEN&#13;&#10;    0*[Value]&#13;&#10;  ELSE&#13;&#10;    [Value]&#13;&#10;  END&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&gt;=0 THEN&#13;&#10;  [Value]&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&lt;0 THEN&#13;&#10;  0*[Value]&#13;&#10;END' />
            </column>
            <column caption='Inflexible Load [MW]' datatype='real' name='[Calculation_931963670409289734]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_loads_combined.csv&quot; THEN&#13;&#10;  [Value]&#13;&#10;ELSE&#13;&#10;  0&#13;&#10;END' />
            </column>
            <column caption='Flexible Load [MW]' datatype='real' name='[Calculation_931963670409551879]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_demand_response_load_combined.csv&quot; THEN&#13;&#10;  [Value]&#13;&#10;ELSE&#13;&#10;  0&#13;&#10;END' />
            </column>
            <column caption='Total Load [MW]' datatype='real' name='[Calculation_931963670410522634]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_931963670409551879]+[Calculation_931963670409289734]-[Calculation_884112924457828355]' />
            </column>
            <column caption='Generation Labels with Charging (group)' datatype='string' name='[Generation Labels (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Calculation_884112924428046337]' new-bin='true'>
                <bin default-name='false' value='&quot;CCGT&quot;'>
                  <value>&quot;CCGT New&quot;</value>
                  <value>&quot;CCGT Old&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Coal&quot;'>
                  <value>&quot;Coal new&quot;</value>
                  <value>&quot;Coal Old&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Diesel&quot;'>
                  <value>&quot;Backup&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Hydro&quot;'>
                  <value>&quot;Hydro Reservoir&quot;</value>
                  <value>&quot;Hydro Run of River&quot;</value>
                  <value>&quot;Pumped Hydro Storage&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Nuclear&quot;'>
                  <value>&quot;Nuclear New&quot;</value>
                  <value>&quot;Nuclear Old&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Other &quot;'>
                  <value>&quot;Biomass&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Solar&quot;'>
                  <value>&quot;Curtailment&quot;</value>
                  <value>&quot;Solar&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Generation for Load (no charging) [MW]' datatype='real' name='[Generation for Load [MW]] (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_generator_power_combined.csv&quot; THEN&#13;&#10;  IF [Resource]==&quot;Curtailment&quot; THEN&#13;&#10;    -1*Value&#13;&#10;  ELSE&#13;&#10;    [Value]&#13;&#10;  END&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; THEN&#13;&#10;  IF [Value]&lt;0 THEN&#13;&#10;    0*[Value]&#13;&#10;  ELSE&#13;&#10;    [Value]&#13;&#10;  END&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Resource]' role='dimension' type='nominal' />
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Timeblock]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_889179474267987968]' derivation='Day' name='[dy:Calculation_889179474267987968:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_889179474267987968]' derivation='Hour' name='[hr:Calculation_889179474267987968:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_889179474267987968]' derivation='Month' name='[mn:Calculation_889179474267987968:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1086493432799272960]' derivation='None' name='[none:Calculation_1086493432799272960:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1086493432799367169]' derivation='None' name='[none:Calculation_1086493432799367169:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1086493432800079874]' derivation='None' name='[none:Calculation_1086493432800079874:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_889179474267987968]' derivation='Quarter' name='[qr:Calculation_889179474267987968:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_884112924427558912]' derivation='Sum' name='[sum:Calculation_884112924427558912:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_918452871620472832]' derivation='Sum' name='[sum:Calculation_918452871620472832:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_931963670409289734]' derivation='Sum' name='[sum:Calculation_931963670409289734:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_931963670410522634]' derivation='Sum' name='[sum:Calculation_931963670410522634:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Generation for Load [MW]] (copy)]' derivation='Sum' name='[sum:Generation for Load [MW]] (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_889179474267987968]' derivation='Year' name='[yr:Calculation_889179474267987968:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_918452871620472832:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_931963670410522634:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_931963670409289734:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_918452871620472832:qk]&quot;</bucket>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_931963670410522634:qk]&quot;</bucket>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_931963670409289734:qk]&quot;</bucket>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_884112924427558912:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group)]' direction='ASC'>
            <dictionary>
              <bucket>%null%</bucket>
              <bucket>&quot;Hydro Reservoir Charging&quot;</bucket>
              <bucket>&quot;Batteries Charging&quot;</bucket>
              <bucket>&quot;Pumped Hydro Storage Charging&quot;</bucket>
              <bucket>&quot;Unmet Demand&quot;</bucket>
              <bucket>&quot;Curtailment&quot;</bucket>
              <bucket>&quot;Solar&quot;</bucket>
              <bucket>&quot;Wind&quot;</bucket>
              <bucket>&quot;Batteries&quot;</bucket>
              <bucket>&quot;Diesel&quot;</bucket>
              <bucket>&quot;Other &quot;</bucket>
              <bucket>&quot;CCGT&quot;</bucket>
              <bucket>&quot;Hydro&quot;</bucket>
              <bucket>&quot;Coal&quot;</bucket>
              <bucket>&quot;Nuclear&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;None&quot;</bucket>
              <bucket>&quot;12-3 AM&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;None&quot;</bucket>
              <bucket>&quot;Flexible&quot;</bucket>
              <bucket>&quot;Inflexible&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;None&quot;</bucket>
              <bucket>&quot;Med&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;med-night-L-H-8-1275-inflexible&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;real-high-evening-L-H-8-1275-flexible&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;real-high-evening-L-H-8-1275-inflexible&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0m2ojda1ih48r312ma38r1hlijh9].[:Measure Names]</column>
            <column>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0m2ojda1ih48r312ma38r1hlijh9].[Multiple Values]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Generation for Load [MW]] (copy):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group)]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0m2ojda1ih48r312ma38r1hlijh9].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>(([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk] / [federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk])) * ([federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Generation for Load [MW]] (copy):qk] + [federated.0m2ojda1ih48r312ma38r1hlijh9].[Multiple Values]))</rows>
        <cols>([federated.0m2ojda1ih48r312ma38r1hlijh9].[yr:Calculation_889179474267987968:ok] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[qr:Calculation_889179474267987968:ok] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[mn:Calculation_889179474267987968:ok] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[dy:Calculation_889179474267987968:ok] / [federated.0m2ojda1ih48r312ma38r1hlijh9].[hr:Calculation_889179474267987968:ok]))))</cols>
      </table>
      <simple-id uuid='{8516D35C-BF73-4F75-93DB-FF00EB025770}' />
    </worksheet>
    <worksheet name='Dispatch with Price'>
      <table>
        <view>
          <datasources>
            <datasource caption='tab_dam_generator_power_combined' name='federated.0m2ojda1ih48r312ma38r1hlijh9' />
          </datasources>
          <datasource-dependencies datasource='federated.0m2ojda1ih48r312ma38r1hlijh9'>
            <column datatype='string' name='[Attribute]' role='dimension' type='nominal' />
            <column caption='Charging Time' datatype='string' name='[Calculation_1086493432799272960]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-evening-&quot;) THEN&#13;&#10;  &quot;12-6 PM&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-morning&quot;) THEN&#13;&#10;  &quot;12-6 AM&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='Charging Type' datatype='string' name='[Calculation_1086493432799367169]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-flexible&quot;) THEN&#13;&#10;  &quot;Flexible&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-inflexible&quot;) THEN&#13;&#10;  &quot;Inflexible&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='EV Adoption Level' datatype='string' name='[Calculation_1086493432800079874]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;low-&quot;) THEN&#13;&#10;  &quot;Low&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;med-&quot;) THEN&#13;&#10;  &quot;Med&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;high-&quot;) THEN&#13;&#10;  &quot;High&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='Representative Days' datatype='datetime' name='[Calculation_1086493432800321539]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF [Timeblock]==&quot;t1&quot; THEN DATEPARSE(&quot;dd.MMMM.yyyy&quot;,&quot;21.April.2037&quot;)&#13;&#10;ELSEIF [Timeblock]==&quot;t2&quot; THEN DATEPARSE(&quot;dd.MMMM.yyyy&quot;,&quot;15.June.2037&quot;)&#13;&#10;ELSEIF [Timeblock]==&quot;t3&quot; THEN DATEPARSE(&quot;dd.MMMM.yyyy&quot;,&quot;13.October.2037&quot;)&#13;&#10;ELSEIF [Timeblock]==&quot;t4&quot; THEN DATEPARSE(&quot;dd.MMMM.yyyy&quot;,&quot;12.December.2037&quot;)&#13;&#10;END' />
            </column>
            <column caption='Time Interval' datatype='string' name='[Calculation_1086493432800645124]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Timeblock]==&quot;t1&quot; THEN&#13;&#10;  [Attribute]&#13;&#10;ELSEIF [Timeblock]==&quot;t2&quot; THEN&#13;&#10;  &quot;t&quot;+STR(INT(RIGHT([Attribute],LEN([Attribute])-1)))&#13;&#10;ELSEIF [Timeblock]==&quot;t3&quot; THEN&#13;&#10;  &quot;t&quot;+STR(INT(RIGHT([Attribute],LEN([Attribute])-1)))&#13;&#10;ELSE&#13;&#10;  &quot;t&quot;+STR(INT(RIGHT([Attribute],LEN([Attribute])-1)))&#13;&#10;END' />
            </column>
            <column caption='Generation for Load [MW]' datatype='real' name='[Calculation_884112924427558912]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_generator_power_combined.csv&quot; THEN&#13;&#10;  IF [Resource]==&quot;Curtailment&quot; THEN&#13;&#10;    -1*Value&#13;&#10;  ELSE&#13;&#10;    [Value]&#13;&#10;  END&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; THEN&#13;&#10;  [Value]&#13;&#10;END' />
            </column>
            <column caption='Generation Labels' datatype='string' name='[Calculation_884112924428046337]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_generator_power_combined.csv&quot; THEN&#13;&#10;  [Resource]&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&gt;=0 THEN&#13;&#10;  [Resource]&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&lt;0 THEN&#13;&#10;   [Resource]+&quot; Charging&quot;&#13;&#10;END' />
            </column>
            <column caption='Date Time' datatype='datetime' name='[Calculation_889179474267987968]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATEADD(&apos;hour&apos;,INT(RIGHT([Calculation_1086493432800645124],LEN([Calculation_1086493432800645124])-1))-1,[Calculation_1086493432800321539])' />
            </column>
            <column caption='Price' datatype='real' name='[Calculation_889179474271539201]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_prices_combined.csv&quot; THEN&#13;&#10;  [Value]&#13;&#10;END' />
            </column>
            <column caption='Generation Labels with Charging (group)' datatype='string' name='[Generation Labels (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Calculation_884112924428046337]' new-bin='true'>
                <bin default-name='false' value='&quot;CCGT&quot;'>
                  <value>&quot;CCGT New&quot;</value>
                  <value>&quot;CCGT Old&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Coal&quot;'>
                  <value>&quot;Coal new&quot;</value>
                  <value>&quot;Coal Old&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Diesel&quot;'>
                  <value>&quot;Backup&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Hydro&quot;'>
                  <value>&quot;Hydro Reservoir&quot;</value>
                  <value>&quot;Hydro Run of River&quot;</value>
                  <value>&quot;Pumped Hydro Storage&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Nuclear&quot;'>
                  <value>&quot;Nuclear New&quot;</value>
                  <value>&quot;Nuclear Old&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Other &quot;'>
                  <value>&quot;Biomass&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Solar&quot;'>
                  <value>&quot;Curtailment&quot;</value>
                  <value>&quot;Solar&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Resource]' role='dimension' type='nominal' />
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Timeblock]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_889179474267987968]' derivation='Day' name='[dy:Calculation_889179474267987968:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_889179474267987968]' derivation='Hour' name='[hr:Calculation_889179474267987968:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_889179474271539201]' derivation='Max' name='[max:Calculation_889179474271539201:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_889179474267987968]' derivation='Month' name='[mn:Calculation_889179474267987968:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1086493432799272960]' derivation='None' name='[none:Calculation_1086493432799272960:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1086493432799367169]' derivation='None' name='[none:Calculation_1086493432799367169:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1086493432800079874]' derivation='None' name='[none:Calculation_1086493432800079874:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_889179474267987968]' derivation='Quarter' name='[qr:Calculation_889179474267987968:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_884112924427558912]' derivation='Sum' name='[sum:Calculation_884112924427558912:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_889179474267987968]' derivation='Year' name='[yr:Calculation_889179474267987968:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group)]' direction='ASC'>
            <dictionary>
              <bucket>%null%</bucket>
              <bucket>&quot;Hydro Reservoir Charging&quot;</bucket>
              <bucket>&quot;Batteries Charging&quot;</bucket>
              <bucket>&quot;Pumped Hydro Storage Charging&quot;</bucket>
              <bucket>&quot;Unmet Demand&quot;</bucket>
              <bucket>&quot;Curtailment&quot;</bucket>
              <bucket>&quot;Solar&quot;</bucket>
              <bucket>&quot;Wind&quot;</bucket>
              <bucket>&quot;Batteries&quot;</bucket>
              <bucket>&quot;Diesel&quot;</bucket>
              <bucket>&quot;Other &quot;</bucket>
              <bucket>&quot;CCGT&quot;</bucket>
              <bucket>&quot;Hydro&quot;</bucket>
              <bucket>&quot;Coal&quot;</bucket>
              <bucket>&quot;Nuclear&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;None&quot;</bucket>
              <bucket>&quot;12-3 AM&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;None&quot;</bucket>
              <bucket>&quot;Flexible&quot;</bucket>
              <bucket>&quot;Inflexible&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;None&quot;</bucket>
              <bucket>&quot;Med&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]'>
            <groupfilter function='level-members' level='[none:Scenario:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0m2ojda1ih48r312ma38r1hlijh9].[max:Calculation_889179474271539201:qk]' field-type='quantitative' fold='true' scale='log' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_884112924427558912:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group)]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0m2ojda1ih48r312ma38r1hlijh9].[max:Calculation_889179474271539201:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>(([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk] / [federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk])) * ([federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_884112924427558912:qk] + [federated.0m2ojda1ih48r312ma38r1hlijh9].[max:Calculation_889179474271539201:qk]))</rows>
        <cols>([federated.0m2ojda1ih48r312ma38r1hlijh9].[yr:Calculation_889179474267987968:ok] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[qr:Calculation_889179474267987968:ok] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[mn:Calculation_889179474267987968:ok] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[dy:Calculation_889179474267987968:ok] / [federated.0m2ojda1ih48r312ma38r1hlijh9].[hr:Calculation_889179474267987968:ok]))))</cols>
      </table>
      <simple-id uuid='{D19C0504-D9E3-4DEE-A328-55DAD0946331}' />
    </worksheet>
    <worksheet name='Generation (Absolute) by Type'>
      <table>
        <view>
          <datasources>
            <datasource caption='tab_dam_generator_power_combined' name='federated.0m2ojda1ih48r312ma38r1hlijh9' />
          </datasources>
          <datasource-dependencies datasource='federated.0m2ojda1ih48r312ma38r1hlijh9'>
            <column caption='Charging Time' datatype='string' name='[Calculation_1086493432799272960]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-evening-&quot;) THEN&#13;&#10;  &quot;12-6 PM&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-morning&quot;) THEN&#13;&#10;  &quot;12-6 AM&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='Charging Type' datatype='string' name='[Calculation_1086493432799367169]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-flexible&quot;) THEN&#13;&#10;  &quot;Flexible&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-inflexible&quot;) THEN&#13;&#10;  &quot;Inflexible&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='EV Adoption Level' datatype='string' name='[Calculation_1086493432800079874]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;low-&quot;) THEN&#13;&#10;  &quot;Low&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;med-&quot;) THEN&#13;&#10;  &quot;Med&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;high-&quot;) THEN&#13;&#10;  &quot;High&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='Generation for Load [MW]' datatype='real' name='[Calculation_884112924427558912]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_generator_power_combined.csv&quot; THEN&#13;&#10;  IF [Resource]==&quot;Curtailment&quot; THEN&#13;&#10;    -1*Value&#13;&#10;  ELSE&#13;&#10;    [Value]&#13;&#10;  END&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; THEN&#13;&#10;  [Value]&#13;&#10;END' />
            </column>
            <column caption='Generation Labels' datatype='string' name='[Calculation_884112924428046337]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_generator_power_combined.csv&quot; THEN&#13;&#10;  [Resource]&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&gt;=0 THEN&#13;&#10;  [Resource]&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&lt;0 THEN&#13;&#10;   [Resource]+&quot; Charging&quot;&#13;&#10;END' />
            </column>
            <column caption='Weighted Generation for Load [MW]' datatype='real' name='[Calculation_884112924430045186]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_931963670410043401]*[Calculation_884112924427558912]' />
            </column>
            <column caption='Weights' datatype='real' name='[Calculation_931963670410043401]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Timeblock]&#13;&#10;  WHEN &quot;t1&quot; THEN 36 &#13;&#10;  WHEN &quot;t2&quot; THEN 14&#13;&#10;  WHEN &quot;t3&quot; THEN 9.18368717&#13;&#10;  WHEN &quot;t4&quot; THEN 13&#13;&#10;END' />
            </column>
            <column caption='Generation Labels (group)' datatype='string' name='[Generation Labels (group) (copy)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Calculation_884112924428046337]' new-bin='true'>
                <bin default-name='false' value='&quot;Batteries&quot;'>
                  <value>&quot;Batteries&quot;</value>
                  <value>&quot;Batteries Charging&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;CCGT&quot;'>
                  <value>&quot;CCGT New&quot;</value>
                  <value>&quot;CCGT Old&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Coal&quot;'>
                  <value>&quot;Coal new&quot;</value>
                  <value>&quot;Coal Old&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Diesel&quot;'>
                  <value>&quot;Backup&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Hydro&quot;'>
                  <value>&quot;Hydro Reservoir&quot;</value>
                  <value>&quot;Hydro Reservoir Charging&quot;</value>
                  <value>&quot;Hydro Run of River&quot;</value>
                  <value>&quot;Pumped Hydro Storage&quot;</value>
                  <value>&quot;Pumped Hydro Storage Charging&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Nuclear&quot;'>
                  <value>&quot;Nuclear New&quot;</value>
                  <value>&quot;Nuclear Old&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Other &quot;'>
                  <value>&quot;Biomass&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Solar&quot;'>
                  <value>&quot;Curtailment&quot;</value>
                  <value>&quot;Solar&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='5-day time period' datatype='string' name='[Representative Days (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Timeblock]==&quot;t1&quot; THEN &quot;April 21-25&quot;&#13;&#10;ELSEIF [Timeblock]==&quot;t2&quot; THEN &quot;June 15-19&quot;&#13;&#10;ELSEIF [Timeblock]==&quot;t3&quot; THEN &quot;October 13-17&quot;&#13;&#10;ELSEIF [Timeblock]==&quot;t4&quot; THEN &quot;December 12-16&quot;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Resource]' role='dimension' type='nominal' />
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Timeblock]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1086493432799272960]' derivation='None' name='[none:Calculation_1086493432799272960:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1086493432799367169]' derivation='None' name='[none:Calculation_1086493432799367169:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1086493432800079874]' derivation='None' name='[none:Calculation_1086493432800079874:nk]' pivot='key' type='nominal' />
            <column-instance column='[Representative Days (copy)]' derivation='None' name='[none:Representative Days (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_884112924430045186]' derivation='Sum' name='[pcto:sum:Calculation_884112924430045186:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_884112924427558912]' derivation='Sum' name='[sum:Calculation_884112924427558912:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group) (copy)]' direction='ASC'>
            <dictionary>
              <bucket>%null%</bucket>
              <bucket>&quot;Unmet Demand&quot;</bucket>
              <bucket>&quot;Curtailment&quot;</bucket>
              <bucket>&quot;Solar&quot;</bucket>
              <bucket>&quot;Wind&quot;</bucket>
              <bucket>&quot;Batteries&quot;</bucket>
              <bucket>&quot;Diesel&quot;</bucket>
              <bucket>&quot;Other &quot;</bucket>
              <bucket>&quot;CCGT&quot;</bucket>
              <bucket>&quot;Hydro&quot;</bucket>
              <bucket>&quot;Coal&quot;</bucket>
              <bucket>&quot;Nuclear&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;None&quot;</bucket>
              <bucket>&quot;Med&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Representative Days (copy):nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;April 21-25&quot;</bucket>
              <bucket>&quot;June 15-19&quot;</bucket>
              <bucket>&quot;October 13-17&quot;</bucket>
              <bucket>&quot;December 12-16&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0m2ojda1ih48r312ma38r1hlijh9].[pcto:sum:Calculation_884112924430045186:qk:2]' value='p0%' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group) (copy)]' />
              <text column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[pcto:sum:Calculation_884112924430045186:qk:2]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_884112924427558912:qk]</rows>
        <cols>([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk] / [federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Representative Days (copy):nk])))</cols>
      </table>
      <simple-id uuid='{616E2DBF-D898-4487-A202-E0974F0137E8}' />
    </worksheet>
    <worksheet name='Generation (Percentage) by Type'>
      <table>
        <view>
          <datasources>
            <datasource caption='tab_dam_generator_power_combined' name='federated.0m2ojda1ih48r312ma38r1hlijh9' />
          </datasources>
          <datasource-dependencies datasource='federated.0m2ojda1ih48r312ma38r1hlijh9'>
            <column caption='Charging Time' datatype='string' name='[Calculation_1086493432799272960]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-evening-&quot;) THEN&#13;&#10;  &quot;12-6 PM&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-morning&quot;) THEN&#13;&#10;  &quot;12-6 AM&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='Charging Type' datatype='string' name='[Calculation_1086493432799367169]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-flexible&quot;) THEN&#13;&#10;  &quot;Flexible&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-inflexible&quot;) THEN&#13;&#10;  &quot;Inflexible&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='EV Adoption Level' datatype='string' name='[Calculation_1086493432800079874]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;low-&quot;) THEN&#13;&#10;  &quot;Low&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;med-&quot;) THEN&#13;&#10;  &quot;Med&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;high-&quot;) THEN&#13;&#10;  &quot;High&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='Generation for Load [MW]' datatype='real' name='[Calculation_884112924427558912]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_generator_power_combined.csv&quot; THEN&#13;&#10;  IF [Resource]==&quot;Curtailment&quot; THEN&#13;&#10;    -1*Value&#13;&#10;  ELSE&#13;&#10;    [Value]&#13;&#10;  END&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; THEN&#13;&#10;  [Value]&#13;&#10;END' />
            </column>
            <column caption='Generation Labels' datatype='string' name='[Calculation_884112924428046337]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_generator_power_combined.csv&quot; THEN&#13;&#10;  [Resource]&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&gt;=0 THEN&#13;&#10;  [Resource]&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&lt;0 THEN&#13;&#10;   [Resource]+&quot; Charging&quot;&#13;&#10;END' />
            </column>
            <column caption='Weighted Generation for Load [MW]' datatype='real' name='[Calculation_884112924430045186]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_931963670410043401]*[Calculation_884112924427558912]' />
            </column>
            <column caption='Weights' datatype='real' name='[Calculation_931963670410043401]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Timeblock]&#13;&#10;  WHEN &quot;t1&quot; THEN 36 &#13;&#10;  WHEN &quot;t2&quot; THEN 14&#13;&#10;  WHEN &quot;t3&quot; THEN 9.18368717&#13;&#10;  WHEN &quot;t4&quot; THEN 13&#13;&#10;END' />
            </column>
            <column caption='Generation Labels (group)' datatype='string' name='[Generation Labels (group) (copy)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Calculation_884112924428046337]' new-bin='true'>
                <bin default-name='false' value='&quot;Batteries&quot;'>
                  <value>&quot;Batteries&quot;</value>
                  <value>&quot;Batteries Charging&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;CCGT&quot;'>
                  <value>&quot;CCGT New&quot;</value>
                  <value>&quot;CCGT Old&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Coal&quot;'>
                  <value>&quot;Coal new&quot;</value>
                  <value>&quot;Coal Old&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Diesel&quot;'>
                  <value>&quot;Backup&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Hydro&quot;'>
                  <value>&quot;Hydro Reservoir&quot;</value>
                  <value>&quot;Hydro Reservoir Charging&quot;</value>
                  <value>&quot;Hydro Run of River&quot;</value>
                  <value>&quot;Pumped Hydro Storage&quot;</value>
                  <value>&quot;Pumped Hydro Storage Charging&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Nuclear&quot;'>
                  <value>&quot;Nuclear New&quot;</value>
                  <value>&quot;Nuclear Old&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Other &quot;'>
                  <value>&quot;Biomass&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Solar&quot;'>
                  <value>&quot;Curtailment&quot;</value>
                  <value>&quot;Solar&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='5-day time period' datatype='string' name='[Representative Days (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Timeblock]==&quot;t1&quot; THEN &quot;April 21-25&quot;&#13;&#10;ELSEIF [Timeblock]==&quot;t2&quot; THEN &quot;June 15-19&quot;&#13;&#10;ELSEIF [Timeblock]==&quot;t3&quot; THEN &quot;October 13-17&quot;&#13;&#10;ELSEIF [Timeblock]==&quot;t4&quot; THEN &quot;December 12-16&quot;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Resource]' role='dimension' type='nominal' />
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Timeblock]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1086493432799272960]' derivation='None' name='[none:Calculation_1086493432799272960:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1086493432799367169]' derivation='None' name='[none:Calculation_1086493432799367169:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1086493432800079874]' derivation='None' name='[none:Calculation_1086493432800079874:nk]' pivot='key' type='nominal' />
            <column-instance column='[Representative Days (copy)]' derivation='None' name='[none:Representative Days (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_884112924430045186]' derivation='Sum' name='[pcto:sum:Calculation_884112924430045186:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group) (copy)]' direction='ASC'>
            <dictionary>
              <bucket>%null%</bucket>
              <bucket>&quot;Unmet Demand&quot;</bucket>
              <bucket>&quot;Curtailment&quot;</bucket>
              <bucket>&quot;Solar&quot;</bucket>
              <bucket>&quot;Wind&quot;</bucket>
              <bucket>&quot;Batteries&quot;</bucket>
              <bucket>&quot;Diesel&quot;</bucket>
              <bucket>&quot;Other &quot;</bucket>
              <bucket>&quot;CCGT&quot;</bucket>
              <bucket>&quot;Hydro&quot;</bucket>
              <bucket>&quot;Coal&quot;</bucket>
              <bucket>&quot;Nuclear&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;None&quot;</bucket>
              <bucket>&quot;Med&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Representative Days (copy):nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;April 21-25&quot;</bucket>
              <bucket>&quot;June 15-19&quot;</bucket>
              <bucket>&quot;October 13-17&quot;</bucket>
              <bucket>&quot;December 12-16&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0m2ojda1ih48r312ma38r1hlijh9].[pcto:sum:Calculation_884112924430045186:qk:2]' value='p0%' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group) (copy)]' />
              <text column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[pcto:sum:Calculation_884112924430045186:qk:2]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0m2ojda1ih48r312ma38r1hlijh9].[pcto:sum:Calculation_884112924430045186:qk:2]</rows>
        <cols>([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk] / [federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Representative Days (copy):nk])))</cols>
      </table>
      <simple-id uuid='{0FFE1D90-1BE5-483C-940F-F4A13ABE567A}' />
    </worksheet>
    <worksheet name='Load'>
      <table>
        <view>
          <datasources>
            <datasource caption='tab_dam_generator_power_combined' name='federated.0m2ojda1ih48r312ma38r1hlijh9' />
          </datasources>
          <datasource-dependencies datasource='federated.0m2ojda1ih48r312ma38r1hlijh9'>
            <column caption='Charging Time' datatype='string' name='[Calculation_1086493432799272960]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-evening-&quot;) THEN&#13;&#10;  &quot;12-6 PM&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-morning&quot;) THEN&#13;&#10;  &quot;12-6 AM&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='Charging Type' datatype='string' name='[Calculation_1086493432799367169]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-flexible&quot;) THEN&#13;&#10;  &quot;Flexible&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-inflexible&quot;) THEN&#13;&#10;  &quot;Inflexible&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='EV Adoption Level' datatype='string' name='[Calculation_1086493432800079874]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;low-&quot;) THEN&#13;&#10;  &quot;Low&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;med-&quot;) THEN&#13;&#10;  &quot;Med&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;high-&quot;) THEN&#13;&#10;  &quot;High&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='Charging [MW]' datatype='real' name='[Calculation_884112924457828355]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&lt;0 THEN&#13;&#10;  [Value]&#13;&#10;ELSE&#13;&#10;  0&#13;&#10;END' />
            </column>
            <column caption='Inflexible Load [MW]' datatype='real' name='[Calculation_931963670409289734]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_loads_combined.csv&quot; THEN&#13;&#10;  [Value]&#13;&#10;ELSE&#13;&#10;  0&#13;&#10;END' />
            </column>
            <column caption='Flexible Load [MW]' datatype='real' name='[Calculation_931963670409551879]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_demand_response_load_combined.csv&quot; THEN&#13;&#10;  [Value]&#13;&#10;ELSE&#13;&#10;  0&#13;&#10;END' />
            </column>
            <column caption='Load Labels' datatype='string' name='[Calculation_931963670409670664]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_loads_combined.csv&quot; THEN&#13;&#10;  &quot;Inflexible&quot;&#13;&#10;ELSEIF [Table Name]==&quot;tab_dam_demand_response_load_combined.csv&quot; THEN&#13;&#10;  &quot;Flexible&quot;&#13;&#10;ELSEIF [Table Name]==&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&lt;0 THEN&#13;&#10;  &quot;Charging&quot;&#13;&#10;END' />
            </column>
            <column caption='Total Load [MW]' datatype='real' name='[Calculation_931963670410522634]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_931963670409551879]+[Calculation_931963670409289734]-[Calculation_884112924457828355]' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1086493432799272960]' derivation='None' name='[none:Calculation_1086493432799272960:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1086493432799367169]' derivation='None' name='[none:Calculation_1086493432799367169:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1086493432800079874]' derivation='None' name='[none:Calculation_1086493432800079874:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_931963670409670664]' derivation='None' name='[none:Calculation_931963670409670664:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_931963670410522634]' derivation='Sum' name='[sum:Calculation_931963670410522634:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;None&quot;</bucket>
              <bucket>&quot;Med&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_931963670409670664:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_931963670409670664:nk]' />
              <groupfilter function='member' level='[none:Calculation_931963670409670664:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_931963670409670664:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_931963670409670664:nk]' />
              <text column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_931963670410522634:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_931963670410522634:qk]</rows>
        <cols>([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk] / [federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk]))</cols>
      </table>
      <simple-id uuid='{063BAC5D-D5E3-4C86-8100-20C8056CD6F8}' />
    </worksheet>
    <worksheet name='Load (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='tab_dam_generator_power_combined' name='federated.0m2ojda1ih48r312ma38r1hlijh9' />
          </datasources>
          <datasource-dependencies datasource='federated.0m2ojda1ih48r312ma38r1hlijh9'>
            <column caption='Charging Time' datatype='string' name='[Calculation_1086493432799272960]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-evening-&quot;) THEN&#13;&#10;  &quot;12-6 PM&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-morning&quot;) THEN&#13;&#10;  &quot;12-6 AM&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='Charging Type' datatype='string' name='[Calculation_1086493432799367169]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-flexible&quot;) THEN&#13;&#10;  &quot;Flexible&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-inflexible&quot;) THEN&#13;&#10;  &quot;Inflexible&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='EV Adoption Level' datatype='string' name='[Calculation_1086493432800079874]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;low-&quot;) THEN&#13;&#10;  &quot;Low&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;med-&quot;) THEN&#13;&#10;  &quot;Med&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;high-&quot;) THEN&#13;&#10;  &quot;High&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='Charging [MW]' datatype='real' name='[Calculation_884112924457828355]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&lt;0 THEN&#13;&#10;  [Value]&#13;&#10;ELSE&#13;&#10;  0&#13;&#10;END' />
            </column>
            <column caption='Inflexible Load [MW]' datatype='real' name='[Calculation_931963670409289734]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_loads_combined.csv&quot; THEN&#13;&#10;  [Value]&#13;&#10;ELSE&#13;&#10;  0&#13;&#10;END' />
            </column>
            <column caption='Flexible Load [MW]' datatype='real' name='[Calculation_931963670409551879]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_demand_response_load_combined.csv&quot; THEN&#13;&#10;  [Value]&#13;&#10;ELSE&#13;&#10;  0&#13;&#10;END' />
            </column>
            <column caption='Load Labels' datatype='string' name='[Calculation_931963670409670664]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_loads_combined.csv&quot; THEN&#13;&#10;  &quot;Inflexible&quot;&#13;&#10;ELSEIF [Table Name]==&quot;tab_dam_demand_response_load_combined.csv&quot; THEN&#13;&#10;  &quot;Flexible&quot;&#13;&#10;ELSEIF [Table Name]==&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&lt;0 THEN&#13;&#10;  &quot;Charging&quot;&#13;&#10;END' />
            </column>
            <column caption='Total Load [MW]' datatype='real' name='[Calculation_931963670410522634]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_931963670409551879]+[Calculation_931963670409289734]-[Calculation_884112924457828355]' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1086493432799272960]' derivation='None' name='[none:Calculation_1086493432799272960:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1086493432799367169]' derivation='None' name='[none:Calculation_1086493432799367169:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1086493432800079874]' derivation='None' name='[none:Calculation_1086493432800079874:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_931963670409670664]' derivation='None' name='[none:Calculation_931963670409670664:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_931963670410522634]' derivation='Sum' name='[sum:Calculation_931963670410522634:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;None&quot;</bucket>
              <bucket>&quot;Med&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_931963670409670664:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_931963670409670664:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Calculation_931963670409670664:nk]' member='%null%' />
                <groupfilter function='member' level='[none:Calculation_931963670409670664:nk]' member='&quot;Flexible&quot;' />
                <groupfilter function='member' level='[none:Calculation_931963670409670664:nk]' member='&quot;Inflexible&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_931963670409670664:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_931963670409670664:nk]' />
              <text column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_931963670410522634:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_931963670410522634:qk]</rows>
        <cols>([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk] / [federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk]))</cols>
      </table>
      <simple-id uuid='{3AA364E5-9004-4503-AB54-E9BE7FA1EFF9}' />
    </worksheet>
    <worksheet name='Load Duration med-day-flex'>
      <table>
        <view>
          <datasources>
            <datasource caption='tab_dam_generator_power_combined' name='federated.0m2ojda1ih48r312ma38r1hlijh9' />
          </datasources>
          <datasource-dependencies datasource='federated.0m2ojda1ih48r312ma38r1hlijh9'>
            <column datatype='string' name='[Attribute]' role='dimension' type='nominal' />
            <column caption='Price' datatype='real' name='[Calculation_889179474271539201]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_prices_combined.csv&quot; THEN&#13;&#10;  [Value]&#13;&#10;END' />
            </column>
            <column caption='Generation for Load (no charging) [MW]' datatype='real' name='[Generation for Load [MW]] (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_generator_power_combined.csv&quot; THEN&#13;&#10;  IF [Resource]==&quot;Curtailment&quot; THEN&#13;&#10;    -1*Value&#13;&#10;  ELSE&#13;&#10;    [Value]&#13;&#10;  END&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; THEN&#13;&#10;  IF [Value]&lt;0 THEN&#13;&#10;    0*[Value]&#13;&#10;  ELSE&#13;&#10;    [Value]&#13;&#10;  END&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Resource]' role='dimension' type='nominal' />
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_889179474271539201]' derivation='Avg' name='[avg:Calculation_889179474271539201:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Attribute]' derivation='None' name='[none:Attribute:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[Generation for Load [MW]] (copy)]' derivation='Sum' name='[sum:Generation for Load [MW]] (copy):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Attribute:nk]' direction='DESC' using='[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Generation for Load [MW]] (copy):qk]' />
          <filter class='categorical' column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]'>
            <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;med-day-L-H-8-1275-flexible&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Generation for Load [MW]] (copy):qk]' field-type='quantitative' max='3000000.1022999999' min='0.0' range-type='fixed' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Generation for Load [MW]] (copy):qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Generation for Load [MW]] (copy):qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]' value='208' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0m2ojda1ih48r312ma38r1hlijh9].[avg:Calculation_889179474271539201:qk]' max='9000.0' palette='red_green_diverging_10_0' reverse='true' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[avg:Calculation_889179474271539201:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#75a1c7' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Generation for Load [MW]] (copy):qk]</rows>
        <cols>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Attribute:nk]</cols>
      </table>
      <simple-id uuid='{2BD708CB-A6D6-48B7-B11A-CCF89874D6FA}' />
    </worksheet>
    <worksheet name='Load Duration med-day-inflex'>
      <table>
        <view>
          <datasources>
            <datasource caption='tab_dam_generator_power_combined' name='federated.0m2ojda1ih48r312ma38r1hlijh9' />
          </datasources>
          <datasource-dependencies datasource='federated.0m2ojda1ih48r312ma38r1hlijh9'>
            <column datatype='string' name='[Attribute]' role='dimension' type='nominal' />
            <column caption='Price' datatype='real' name='[Calculation_889179474271539201]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_prices_combined.csv&quot; THEN&#13;&#10;  [Value]&#13;&#10;END' />
            </column>
            <column caption='Generation for Load (no charging) [MW]' datatype='real' name='[Generation for Load [MW]] (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_generator_power_combined.csv&quot; THEN&#13;&#10;  IF [Resource]==&quot;Curtailment&quot; THEN&#13;&#10;    -1*Value&#13;&#10;  ELSE&#13;&#10;    [Value]&#13;&#10;  END&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; THEN&#13;&#10;  IF [Value]&lt;0 THEN&#13;&#10;    0*[Value]&#13;&#10;  ELSE&#13;&#10;    [Value]&#13;&#10;  END&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Resource]' role='dimension' type='nominal' />
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_889179474271539201]' derivation='Avg' name='[avg:Calculation_889179474271539201:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Attribute]' derivation='None' name='[none:Attribute:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[Generation for Load [MW]] (copy)]' derivation='Sum' name='[sum:Generation for Load [MW]] (copy):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Attribute:nk]' direction='DESC' using='[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Generation for Load [MW]] (copy):qk]' />
          <filter class='categorical' column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]'>
            <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;med-day-L-H-8-1275-inflexible&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Generation for Load [MW]] (copy):qk]' field-type='quantitative' max='3000000.1022999999' min='0.0' range-type='fixed' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Generation for Load [MW]] (copy):qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Generation for Load [MW]] (copy):qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]' value='208' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0m2ojda1ih48r312ma38r1hlijh9].[avg:Calculation_889179474271539201:qk]' max='9000.0' palette='red_green_diverging_10_0' reverse='true' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[avg:Calculation_889179474271539201:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#75a1c7' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Generation for Load [MW]] (copy):qk]</rows>
        <cols>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Attribute:nk]</cols>
      </table>
      <simple-id uuid='{78A72AB2-1121-4886-972B-B40E3D2EF3C2}' />
    </worksheet>
    <worksheet name='Load Duration med-night-flex'>
      <table>
        <view>
          <datasources>
            <datasource caption='tab_dam_generator_power_combined' name='federated.0m2ojda1ih48r312ma38r1hlijh9' />
          </datasources>
          <datasource-dependencies datasource='federated.0m2ojda1ih48r312ma38r1hlijh9'>
            <column datatype='string' name='[Attribute]' role='dimension' type='nominal' />
            <column caption='Price' datatype='real' name='[Calculation_889179474271539201]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_prices_combined.csv&quot; THEN&#13;&#10;  [Value]&#13;&#10;END' />
            </column>
            <column caption='Generation for Load (no charging) [MW]' datatype='real' name='[Generation for Load [MW]] (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_generator_power_combined.csv&quot; THEN&#13;&#10;  IF [Resource]==&quot;Curtailment&quot; THEN&#13;&#10;    -1*Value&#13;&#10;  ELSE&#13;&#10;    [Value]&#13;&#10;  END&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; THEN&#13;&#10;  IF [Value]&lt;0 THEN&#13;&#10;    0*[Value]&#13;&#10;  ELSE&#13;&#10;    [Value]&#13;&#10;  END&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Resource]' role='dimension' type='nominal' />
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_889179474271539201]' derivation='Avg' name='[avg:Calculation_889179474271539201:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Attribute]' derivation='None' name='[none:Attribute:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[Generation for Load [MW]] (copy)]' derivation='Sum' name='[sum:Generation for Load [MW]] (copy):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Attribute:nk]' direction='DESC' using='[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Generation for Load [MW]] (copy):qk]' />
          <filter class='categorical' column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]'>
            <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;med-night-L-H-8-1275-flexible&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Generation for Load [MW]] (copy):qk]' field-type='quantitative' max='3000000.2733999998' min='0.0' range-type='fixed' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Generation for Load [MW]] (copy):qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Generation for Load [MW]] (copy):qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]' value='208' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0m2ojda1ih48r312ma38r1hlijh9].[avg:Calculation_889179474271539201:qk]' max='9000.0' palette='red_green_diverging_10_0' reverse='true' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[avg:Calculation_889179474271539201:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#75a1c7' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Generation for Load [MW]] (copy):qk]</rows>
        <cols>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Attribute:nk]</cols>
      </table>
      <simple-id uuid='{599FC51C-18DD-4896-9B26-94620351B8EF}' />
    </worksheet>
    <worksheet name='Load Duration med-night-inflex'>
      <table>
        <view>
          <datasources>
            <datasource caption='tab_dam_generator_power_combined' name='federated.0m2ojda1ih48r312ma38r1hlijh9' />
          </datasources>
          <datasource-dependencies datasource='federated.0m2ojda1ih48r312ma38r1hlijh9'>
            <column datatype='string' name='[Attribute]' role='dimension' type='nominal' />
            <column caption='Price' datatype='real' name='[Calculation_889179474271539201]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_prices_combined.csv&quot; THEN&#13;&#10;  [Value]&#13;&#10;END' />
            </column>
            <column caption='Generation for Load (no charging) [MW]' datatype='real' name='[Generation for Load [MW]] (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_generator_power_combined.csv&quot; THEN&#13;&#10;  IF [Resource]==&quot;Curtailment&quot; THEN&#13;&#10;    -1*Value&#13;&#10;  ELSE&#13;&#10;    [Value]&#13;&#10;  END&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; THEN&#13;&#10;  IF [Value]&lt;0 THEN&#13;&#10;    0*[Value]&#13;&#10;  ELSE&#13;&#10;    [Value]&#13;&#10;  END&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Resource]' role='dimension' type='nominal' />
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_889179474271539201]' derivation='Avg' name='[avg:Calculation_889179474271539201:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Attribute]' derivation='None' name='[none:Attribute:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[Generation for Load [MW]] (copy)]' derivation='Sum' name='[sum:Generation for Load [MW]] (copy):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Attribute:nk]' direction='DESC' using='[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Generation for Load [MW]] (copy):qk]' />
          <filter class='categorical' column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]'>
            <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;med-night-L-H-8-1275-inflexible&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Generation for Load [MW]] (copy):qk]' field-type='quantitative' max='3000000.1022999999' min='0.0' range-type='fixed' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Generation for Load [MW]] (copy):qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Generation for Load [MW]] (copy):qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]' value='208' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0m2ojda1ih48r312ma38r1hlijh9].[avg:Calculation_889179474271539201:qk]' max='9000.0' palette='red_green_diverging_10_0' reverse='true' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[avg:Calculation_889179474271539201:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#75a1c7' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Generation for Load [MW]] (copy):qk]</rows>
        <cols>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Attribute:nk]</cols>
      </table>
      <simple-id uuid='{CBF4B443-7B0D-47C9-B123-41E090ED427D}' />
    </worksheet>
    <worksheet name='Price'>
      <table>
        <view>
          <datasources>
            <datasource caption='tab_dam_generator_power_combined' name='federated.0m2ojda1ih48r312ma38r1hlijh9' />
          </datasources>
          <datasource-dependencies datasource='federated.0m2ojda1ih48r312ma38r1hlijh9'>
            <column datatype='string' name='[Attribute]' role='dimension' type='nominal' />
            <column caption='Representative Days' datatype='datetime' name='[Calculation_1086493432800321539]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF [Timeblock]==&quot;t1&quot; THEN DATEPARSE(&quot;dd.MMMM.yyyy&quot;,&quot;21.April.2037&quot;)&#13;&#10;ELSEIF [Timeblock]==&quot;t2&quot; THEN DATEPARSE(&quot;dd.MMMM.yyyy&quot;,&quot;15.June.2037&quot;)&#13;&#10;ELSEIF [Timeblock]==&quot;t3&quot; THEN DATEPARSE(&quot;dd.MMMM.yyyy&quot;,&quot;13.October.2037&quot;)&#13;&#10;ELSEIF [Timeblock]==&quot;t4&quot; THEN DATEPARSE(&quot;dd.MMMM.yyyy&quot;,&quot;12.December.2037&quot;)&#13;&#10;END' />
            </column>
            <column caption='Time Interval' datatype='string' name='[Calculation_1086493432800645124]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Timeblock]==&quot;t1&quot; THEN&#13;&#10;  [Attribute]&#13;&#10;ELSEIF [Timeblock]==&quot;t2&quot; THEN&#13;&#10;  &quot;t&quot;+STR(INT(RIGHT([Attribute],LEN([Attribute])-1)))&#13;&#10;ELSEIF [Timeblock]==&quot;t3&quot; THEN&#13;&#10;  &quot;t&quot;+STR(INT(RIGHT([Attribute],LEN([Attribute])-1)))&#13;&#10;ELSE&#13;&#10;  &quot;t&quot;+STR(INT(RIGHT([Attribute],LEN([Attribute])-1)))&#13;&#10;END' />
            </column>
            <column caption='Date Time' datatype='datetime' name='[Calculation_889179474267987968]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATEADD(&apos;hour&apos;,INT(RIGHT([Calculation_1086493432800645124],LEN([Calculation_1086493432800645124])-1))-1,[Calculation_1086493432800321539])' />
            </column>
            <column caption='Price' datatype='real' name='[Calculation_889179474271539201]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_prices_combined.csv&quot; THEN&#13;&#10;  [Value]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Timeblock]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_889179474267987968]' derivation='Day' name='[dy:Calculation_889179474267987968:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_889179474267987968]' derivation='Hour' name='[hr:Calculation_889179474267987968:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_889179474271539201]' derivation='Max' name='[max:Calculation_889179474271539201:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_889179474267987968]' derivation='Month' name='[mn:Calculation_889179474267987968:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_889179474267987968]' derivation='Quarter' name='[qr:Calculation_889179474267987968:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_889179474267987968]' derivation='Year' name='[yr:Calculation_889179474267987968:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]'>
            <groupfilter function='level-members' level='[none:Scenario:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0m2ojda1ih48r312ma38r1hlijh9].[max:Calculation_889179474271539201:qk]' field-type='quantitative' scale='log' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0m2ojda1ih48r312ma38r1hlijh9].[max:Calculation_889179474271539201:qk]</rows>
        <cols>([federated.0m2ojda1ih48r312ma38r1hlijh9].[yr:Calculation_889179474267987968:ok] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[qr:Calculation_889179474267987968:ok] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[mn:Calculation_889179474267987968:ok] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[dy:Calculation_889179474267987968:ok] / [federated.0m2ojda1ih48r312ma38r1hlijh9].[hr:Calculation_889179474267987968:ok]))))</cols>
      </table>
      <simple-id uuid='{1B81A435-EA8A-4398-A596-3DE7859F3899}' />
    </worksheet>
    <worksheet name='Price (table)'>
      <table>
        <view>
          <datasources>
            <datasource caption='tab_dam_generator_power_combined' name='federated.0m2ojda1ih48r312ma38r1hlijh9' />
          </datasources>
          <datasource-dependencies datasource='federated.0m2ojda1ih48r312ma38r1hlijh9'>
            <column datatype='string' name='[Attribute]' role='dimension' type='nominal' />
            <column caption='Charging Time' datatype='string' name='[Calculation_1086493432799272960]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-evening-&quot;) THEN&#13;&#10;  &quot;12-6 PM&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-morning&quot;) THEN&#13;&#10;  &quot;12-6 AM&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='Charging Type' datatype='string' name='[Calculation_1086493432799367169]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-flexible&quot;) THEN&#13;&#10;  &quot;Flexible&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-inflexible&quot;) THEN&#13;&#10;  &quot;Inflexible&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='EV Adoption Level' datatype='string' name='[Calculation_1086493432800079874]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;low-&quot;) THEN&#13;&#10;  &quot;Low&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;med-&quot;) THEN&#13;&#10;  &quot;Med&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;high-&quot;) THEN&#13;&#10;  &quot;High&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='Representative Days' datatype='datetime' name='[Calculation_1086493432800321539]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF [Timeblock]==&quot;t1&quot; THEN DATEPARSE(&quot;dd.MMMM.yyyy&quot;,&quot;21.April.2037&quot;)&#13;&#10;ELSEIF [Timeblock]==&quot;t2&quot; THEN DATEPARSE(&quot;dd.MMMM.yyyy&quot;,&quot;15.June.2037&quot;)&#13;&#10;ELSEIF [Timeblock]==&quot;t3&quot; THEN DATEPARSE(&quot;dd.MMMM.yyyy&quot;,&quot;13.October.2037&quot;)&#13;&#10;ELSEIF [Timeblock]==&quot;t4&quot; THEN DATEPARSE(&quot;dd.MMMM.yyyy&quot;,&quot;12.December.2037&quot;)&#13;&#10;END' />
            </column>
            <column caption='Time Interval' datatype='string' name='[Calculation_1086493432800645124]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Timeblock]==&quot;t1&quot; THEN&#13;&#10;  [Attribute]&#13;&#10;ELSEIF [Timeblock]==&quot;t2&quot; THEN&#13;&#10;  &quot;t&quot;+STR(INT(RIGHT([Attribute],LEN([Attribute])-1)))&#13;&#10;ELSEIF [Timeblock]==&quot;t3&quot; THEN&#13;&#10;  &quot;t&quot;+STR(INT(RIGHT([Attribute],LEN([Attribute])-1)))&#13;&#10;ELSE&#13;&#10;  &quot;t&quot;+STR(INT(RIGHT([Attribute],LEN([Attribute])-1)))&#13;&#10;END' />
            </column>
            <column caption='Date Time' datatype='datetime' name='[Calculation_889179474267987968]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATEADD(&apos;hour&apos;,INT(RIGHT([Calculation_1086493432800645124],LEN([Calculation_1086493432800645124])-1))-1,[Calculation_1086493432800321539])' />
            </column>
            <column caption='Price' datatype='real' name='[Calculation_889179474271539201]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_prices_combined.csv&quot; THEN&#13;&#10;  [Value]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Timeblock]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column aggregation='Sum' datatype='integer' name='[Zone]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_889179474267987968]' derivation='Day' name='[dy:Calculation_889179474267987968:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_889179474267987968]' derivation='Hour' name='[hr:Calculation_889179474267987968:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_889179474271539201]' derivation='Max' name='[max:Calculation_889179474271539201:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_889179474267987968]' derivation='Month' name='[mn:Calculation_889179474267987968:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1086493432799272960]' derivation='None' name='[none:Calculation_1086493432799272960:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1086493432799367169]' derivation='None' name='[none:Calculation_1086493432799367169:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1086493432800079874]' derivation='None' name='[none:Calculation_1086493432800079874:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[Zone]' derivation='None' name='[none:Zone:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_889179474267987968]' derivation='Quarter' name='[qr:Calculation_889179474267987968:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_889179474267987968]' derivation='Year' name='[yr:Calculation_889179474267987968:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;None&quot;</bucket>
              <bucket>&quot;12-3 AM&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;None&quot;</bucket>
              <bucket>&quot;Flexible&quot;</bucket>
              <bucket>&quot;Inflexible&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;None&quot;</bucket>
              <bucket>&quot;Med&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]'>
            <groupfilter function='level-members' level='[none:Scenario:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0m2ojda1ih48r312ma38r1hlijh9].[max:Calculation_889179474271539201:qk]' field-type='quantitative' scale='log' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[max:Calculation_889179474271539201:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk] / [federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Zone:ok])))</rows>
        <cols>([federated.0m2ojda1ih48r312ma38r1hlijh9].[yr:Calculation_889179474267987968:ok] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[qr:Calculation_889179474267987968:ok] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[mn:Calculation_889179474267987968:ok] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[dy:Calculation_889179474267987968:ok] / [federated.0m2ojda1ih48r312ma38r1hlijh9].[hr:Calculation_889179474267987968:ok]))))</cols>
      </table>
      <simple-id uuid='{8DC4007B-3FAF-4BA6-9574-498A04CE69F5}' />
    </worksheet>
    <worksheet name='State of Charge'>
      <table>
        <view>
          <datasources>
            <datasource caption='tab_dam_generator_power_combined' name='federated.0m2ojda1ih48r312ma38r1hlijh9' />
          </datasources>
          <datasource-dependencies datasource='federated.0m2ojda1ih48r312ma38r1hlijh9'>
            <column datatype='string' name='[Attribute]' role='dimension' type='nominal' />
            <column caption='Charging Time' datatype='string' name='[Calculation_1086493432799272960]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-evening-&quot;) THEN&#13;&#10;  &quot;12-6 PM&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-morning&quot;) THEN&#13;&#10;  &quot;12-6 AM&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='Charging Type' datatype='string' name='[Calculation_1086493432799367169]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-flexible&quot;) THEN&#13;&#10;  &quot;Flexible&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-inflexible&quot;) THEN&#13;&#10;  &quot;Inflexible&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='EV Adoption Level' datatype='string' name='[Calculation_1086493432800079874]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;low-&quot;) THEN&#13;&#10;  &quot;Low&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;med-&quot;) THEN&#13;&#10;  &quot;Med&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;high-&quot;) THEN&#13;&#10;  &quot;High&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='Representative Days' datatype='datetime' name='[Calculation_1086493432800321539]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF [Timeblock]==&quot;t1&quot; THEN DATEPARSE(&quot;dd.MMMM.yyyy&quot;,&quot;21.April.2037&quot;)&#13;&#10;ELSEIF [Timeblock]==&quot;t2&quot; THEN DATEPARSE(&quot;dd.MMMM.yyyy&quot;,&quot;15.June.2037&quot;)&#13;&#10;ELSEIF [Timeblock]==&quot;t3&quot; THEN DATEPARSE(&quot;dd.MMMM.yyyy&quot;,&quot;13.October.2037&quot;)&#13;&#10;ELSEIF [Timeblock]==&quot;t4&quot; THEN DATEPARSE(&quot;dd.MMMM.yyyy&quot;,&quot;12.December.2037&quot;)&#13;&#10;END' />
            </column>
            <column caption='Time Interval' datatype='string' name='[Calculation_1086493432800645124]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Timeblock]==&quot;t1&quot; THEN&#13;&#10;  [Attribute]&#13;&#10;ELSEIF [Timeblock]==&quot;t2&quot; THEN&#13;&#10;  &quot;t&quot;+STR(INT(RIGHT([Attribute],LEN([Attribute])-1)))&#13;&#10;ELSEIF [Timeblock]==&quot;t3&quot; THEN&#13;&#10;  &quot;t&quot;+STR(INT(RIGHT([Attribute],LEN([Attribute])-1)))&#13;&#10;ELSE&#13;&#10;  &quot;t&quot;+STR(INT(RIGHT([Attribute],LEN([Attribute])-1)))&#13;&#10;END' />
            </column>
            <column caption='Date Time' datatype='datetime' name='[Calculation_889179474267987968]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATEADD(&apos;hour&apos;,INT(RIGHT([Calculation_1086493432800645124],LEN([Calculation_1086493432800645124])-1))-1,[Calculation_1086493432800321539])' />
            </column>
            <column caption='Storage Level' datatype='real' name='[Calculation_889179474278793218]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_storage_unit_soc_combined.csv&quot; THEN&#13;&#10;  [Value]&#13;&#10;END' />
            </column>
            <column caption='Max Storage Level' datatype='real' name='[Calculation_889179474279444483]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_storage_unit_soc_combined.csv&quot; THEN&#13;&#10;  {FIXED [Resource],[Zone]: MAX([Value])}&#13;&#10;END' />
            </column>
            <column caption='State of Charge' datatype='real' name='[Calculation_889179474279563268]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_889179474278793218]/[Calculation_889179474279444483]' />
            </column>
            <column caption='Weighted State of Charge' datatype='real' name='[Calculation_889179474279690245]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Sum([Calculation_889179474279563268]*[Calculation_889179474279444483])/SUM([Calculation_889179474279444483])' />
            </column>
            <column caption='Storage Label' datatype='string' name='[Calculation_889179474280439814]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_storage_unit_soc_combined.csv&quot; THEN&#13;&#10;  [Resource]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Resource]' role='dimension' type='nominal' />
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Timeblock]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column aggregation='Sum' datatype='integer' name='[Zone]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_889179474267987968]' derivation='Day' name='[dy:Calculation_889179474267987968:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_889179474267987968]' derivation='Hour' name='[hr:Calculation_889179474267987968:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_889179474267987968]' derivation='Month' name='[mn:Calculation_889179474267987968:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1086493432799272960]' derivation='None' name='[none:Calculation_1086493432799272960:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1086493432799367169]' derivation='None' name='[none:Calculation_1086493432799367169:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1086493432800079874]' derivation='None' name='[none:Calculation_1086493432800079874:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_889179474280439814]' derivation='None' name='[none:Calculation_889179474280439814:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_889179474267987968]' derivation='Quarter' name='[qr:Calculation_889179474267987968:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_889179474279690245]' derivation='User' name='[usr:Calculation_889179474279690245:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_889179474267987968]' derivation='Year' name='[yr:Calculation_889179474267987968:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[mn:Calculation_889179474267987968:ok]'>
            <groupfilter function='member' level='[mn:Calculation_889179474267987968:ok]' member='12' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;None&quot;</bucket>
              <bucket>&quot;Med&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;default-L-H-8-1275&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;med-night-L-H-8-1275-flexible&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0m2ojda1ih48r312ma38r1hlijh9].[mn:Calculation_889179474267987968:ok]</column>
            <column>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_889179474280439814:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>(([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk] / [federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk])) * [federated.0m2ojda1ih48r312ma38r1hlijh9].[usr:Calculation_889179474279690245:qk])</rows>
        <cols>([federated.0m2ojda1ih48r312ma38r1hlijh9].[yr:Calculation_889179474267987968:ok] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[qr:Calculation_889179474267987968:ok] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[mn:Calculation_889179474267987968:ok] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[dy:Calculation_889179474267987968:ok] / [federated.0m2ojda1ih48r312ma38r1hlijh9].[hr:Calculation_889179474267987968:ok]))))</cols>
      </table>
      <simple-id uuid='{4798B9FC-87CC-4355-8716-BCDF2D867AF9}' />
    </worksheet>
    <worksheet name='Weighted Load'>
      <table>
        <view>
          <datasources>
            <datasource caption='tab_dam_generator_power_combined' name='federated.0m2ojda1ih48r312ma38r1hlijh9' />
          </datasources>
          <datasource-dependencies datasource='federated.0m2ojda1ih48r312ma38r1hlijh9'>
            <column caption='Charging Time' datatype='string' name='[Calculation_1086493432799272960]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-evening-&quot;) THEN&#13;&#10;  &quot;12-6 PM&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-morning&quot;) THEN&#13;&#10;  &quot;12-6 AM&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='Charging Type' datatype='string' name='[Calculation_1086493432799367169]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-flexible&quot;) THEN&#13;&#10;  &quot;Flexible&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-inflexible&quot;) THEN&#13;&#10;  &quot;Inflexible&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='EV Adoption Level' datatype='string' name='[Calculation_1086493432800079874]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;low-&quot;) THEN&#13;&#10;  &quot;Low&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;med-&quot;) THEN&#13;&#10;  &quot;Med&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;high-&quot;) THEN&#13;&#10;  &quot;High&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='Charging [MW]' datatype='real' name='[Calculation_884112924457828355]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&lt;0 THEN&#13;&#10;  [Value]&#13;&#10;ELSE&#13;&#10;  0&#13;&#10;END' />
            </column>
            <column caption='Inflexible Load [MW]' datatype='real' name='[Calculation_931963670409289734]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_loads_combined.csv&quot; THEN&#13;&#10;  [Value]&#13;&#10;ELSE&#13;&#10;  0&#13;&#10;END' />
            </column>
            <column caption='Flexible Load [MW]' datatype='real' name='[Calculation_931963670409551879]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_demand_response_load_combined.csv&quot; THEN&#13;&#10;  [Value]&#13;&#10;ELSE&#13;&#10;  0&#13;&#10;END' />
            </column>
            <column caption='Load Labels' datatype='string' name='[Calculation_931963670409670664]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_loads_combined.csv&quot; THEN&#13;&#10;  &quot;Inflexible&quot;&#13;&#10;ELSEIF [Table Name]==&quot;tab_dam_demand_response_load_combined.csv&quot; THEN&#13;&#10;  &quot;Flexible&quot;&#13;&#10;ELSEIF [Table Name]==&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&lt;0 THEN&#13;&#10;  &quot;Charging&quot;&#13;&#10;END' />
            </column>
            <column caption='Weights' datatype='real' name='[Calculation_931963670410043401]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Timeblock]&#13;&#10;  WHEN &quot;t1&quot; THEN 36 &#13;&#10;  WHEN &quot;t2&quot; THEN 14&#13;&#10;  WHEN &quot;t3&quot; THEN 9.18368717&#13;&#10;  WHEN &quot;t4&quot; THEN 13&#13;&#10;END' />
            </column>
            <column caption='Total Load [MW]' datatype='real' name='[Calculation_931963670410522634]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_931963670409551879]+[Calculation_931963670409289734]-[Calculation_884112924457828355]' />
            </column>
            <column caption='Weighted Load [MW]' datatype='real' name='[Calculation_931963670410706955]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_931963670410043401]*[Calculation_931963670410522634]' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Timeblock]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1086493432799272960]' derivation='None' name='[none:Calculation_1086493432799272960:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1086493432799367169]' derivation='None' name='[none:Calculation_1086493432799367169:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1086493432800079874]' derivation='None' name='[none:Calculation_1086493432800079874:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_931963670409670664]' derivation='None' name='[none:Calculation_931963670409670664:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_931963670410706955]' derivation='Sum' name='[sum:Calculation_931963670410706955:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;None&quot;</bucket>
              <bucket>&quot;Med&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_931963670409670664:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_931963670409670664:nk]' />
              <groupfilter function='member' level='[none:Calculation_931963670409670664:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_931963670409670664:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_931963670409670664:nk]' />
              <text column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_931963670410706955:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_931963670410706955:qk]</rows>
        <cols>([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk] / [federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk]))</cols>
      </table>
      <simple-id uuid='{D20E3FAC-BC3D-4C5E-AF64-5AB27D23BEEB}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Load Duration Day Summary'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='tab_dam_generator_power_combined' name='federated.0m2ojda1ih48r312ma38r1hlijh9' />
      </datasources>
      <datasource-dependencies datasource='federated.0m2ojda1ih48r312ma38r1hlijh9'>
        <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
        <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='5' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='3' type='layout-basic' w='82400' x='800' y='1000'>
              <zone h='49000' id='8' name='Load Duration med-day-flex' w='82400' x='800' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='10' name='Load Duration med-day-inflex' w='82400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='4' is-fixed='true' param='vert' type='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='18250' id='9' name='Load Duration med-day-flex' param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]' type='filter' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                  <format attr='background-color' value='#ffffff' />
                </zone-style>
              </zone>
              <zone h='18250' id='11' name='Load Duration med-day-inflex' param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]' type='filter' w='16000' x='83200' y='19250'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                  <format attr='background-color' value='#ffffff' />
                </zone-style>
              </zone>
              <zone h='8125' id='12' name='Load Duration med-day-inflex' pane-specification-id='0' param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[avg:Calculation_889179474271539201:qk]' type='color' w='16000' x='83200' y='37500'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{B6C65B80-8DE3-4846-895F-7DA90897ED74}' />
    </dashboard>
    <dashboard name='Load Duration Night Summary'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='tab_dam_generator_power_combined' name='federated.0m2ojda1ih48r312ma38r1hlijh9' />
      </datasources>
      <datasource-dependencies datasource='federated.0m2ojda1ih48r312ma38r1hlijh9'>
        <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
        <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='5' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='3' type='layout-basic' w='82400' x='800' y='1000'>
              <zone h='49000' id='1' name='Load Duration med-night-inflex' w='82400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='7' name='Load Duration med-night-flex' w='82400' x='800' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='4' is-fixed='true' param='vert' type='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='18250' id='6' name='Load Duration med-night-inflex' param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]' type='filter' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                  <format attr='background-color' value='#ffffff' />
                </zone-style>
              </zone>
              <zone h='18250' id='8' name='Load Duration med-night-flex' param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]' type='filter' w='16000' x='83200' y='19250'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                  <format attr='background-color' value='#ffffff' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{57EFBDF4-0229-446A-B48B-8CE6FF01EF98}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Load'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_931963670409670664:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_931963670409670664:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{364D6FFF-3EA5-41AF-B33A-219C6D8FB0CD}' />
    </window>
    <window class='worksheet' name='Load (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_931963670409670664:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_931963670409670664:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Timeblock:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{59E472A1-26FF-4A80-9B4C-99FE160DEC3E}' />
    </window>
    <window class='worksheet' name='Weighted Load'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_931963670409670664:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_931963670409670664:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3C87C163-E6B0-4FF7-A76D-F8555F248314}' />
    </window>
    <window class='worksheet' name='Dispatch with Load'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='48'>
            <card type='columns' />
          </strip>
          <strip size='48'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='240'>
            <card param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[mn:Calculation_889179474267987968:ok]' type='filter' />
            <card param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]' type='filter' />
            <card pane-specification-id='2' param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[:Measure Names]' type='color' />
            <card pane-specification-id='1' param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[:Measure Names]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[mn:Calculation_889179474267987968:ok]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Attribute:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800321539:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800645124:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Timeblock:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[tyr:Calculation_889179474267987968:qk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[yr:Calculation_889179474267987968:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D892E6A1-35D3-4E79-8AAD-66ECD3C7D847}' />
    </window>
    <window class='worksheet' maximized='true' name='Dispatch with Load (no charging)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='48'>
            <card type='columns' />
          </strip>
          <strip size='135'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='250'>
            <card param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]' type='filter' />
            <card pane-specification-id='2' param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[:Measure Names]' type='color' />
            <card pane-specification-id='1' param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[:Measure Names]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group)]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Attribute:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800321539:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800645124:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Timeblock:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[tyr:Calculation_889179474267987968:qk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[yr:Calculation_889179474267987968:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5FE2BC45-BB5D-4629-94A5-D7B132965C25}' />
    </window>
    <window class='worksheet' name='Dispatch with Price'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]' type='filter' />
            <card pane-specification-id='2' param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[:Measure Names]' type='color' />
            <card pane-specification-id='1' param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[:Measure Names]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Attribute:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800321539:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800645124:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Timeblock:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[tyr:Calculation_889179474267987968:qk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[yr:Calculation_889179474267987968:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F7B21278-5EB6-44EE-96B8-1A52FF33F0AE}' />
    </window>
    <window class='worksheet' name='Price'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]' type='filter' />
            <card pane-specification-id='2' param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Attribute:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800321539:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800645124:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Timeblock:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[tyr:Calculation_889179474267987968:qk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[yr:Calculation_889179474267987968:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CE4DB763-114F-4368-80EB-C96B606F9BF7}' />
    </window>
    <window class='worksheet' name='Price (table)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{08CA8AC4-3189-4C41-A333-4822099FF7B2}' />
    </window>
    <window class='worksheet' name='Annual Generation (Absolute) by Type'>
      <cards>
        <edge name='left'>
          <strip size='244'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group) (copy)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[:Measure Names]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group) (copy)]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Attribute:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Timeblock:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{52FAD36B-F799-4516-8C19-7B1275ED2157}' />
    </window>
    <window class='worksheet' name='Annual Generation (Percentage) by Type'>
      <cards>
        <edge name='left'>
          <strip size='244'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group) (copy)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[:Measure Names]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group) (copy)]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Attribute:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Timeblock:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C351662A-5563-4D6F-BB80-EF16B262F0CD}' />
    </window>
    <window class='worksheet' name='Generation (Absolute) by Type'>
      <cards>
        <edge name='left'>
          <strip size='244'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group) (copy)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[:Measure Names]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group) (copy)]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Attribute:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Representative Days (copy):nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Timeblock:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[yr:Calculation_1086493432800321539:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8E7195A0-DFDA-4DF2-8E3E-82AF5DB30F44}' />
    </window>
    <window class='worksheet' name='Generation (Percentage) by Type'>
      <cards>
        <edge name='left'>
          <strip size='244'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group) (copy)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[:Measure Names]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group) (copy)]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Attribute:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Representative Days (copy):nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Timeblock:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D07C2676-3872-4FF3-BB80-18250A501A06}' />
    </window>
    <window class='worksheet' name='State of Charge'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_889179474280439814:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group) (copy)]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[mn:Calculation_889179474267987968:ok]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_889179474280439814:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[yr:Calculation_889179474267987968:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{20378E64-8CDF-4112-8CD1-6772EB553AD3}' />
    </window>
    <window class='worksheet' name='Load Duration med-day-inflex'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='258'>
            <card param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[avg:Calculation_889179474271539201:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[avg:Calculation_889179474271539201:qk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Attribute:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Resource:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BED18ECD-BCFC-4FA6-92CC-3FF61E88336C}' />
    </window>
    <window class='worksheet' name='Load Duration med-day-flex'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='258'>
            <card param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[avg:Calculation_889179474271539201:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[avg:Calculation_889179474271539201:qk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Attribute:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Resource:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8C09D128-8C91-4F99-8732-D4D99616FE99}' />
    </window>
    <window class='worksheet' name='Load Duration med-night-inflex'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='258'>
            <card param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[avg:Calculation_889179474271539201:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[avg:Calculation_889179474271539201:qk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Attribute:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Resource:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3DB457C3-02DA-470B-8DEC-4CEA2B1AD1A7}' />
    </window>
    <window class='worksheet' name='Load Duration med-night-flex'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='258'>
            <card param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[avg:Calculation_889179474271539201:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[avg:Calculation_889179474271539201:qk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Attribute:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Resource:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E2493FFE-3449-46FE-9C70-A64D0C9A540E}' />
    </window>
    <window class='dashboard' name='Load Duration Night Summary'>
      <viewpoints>
        <viewpoint name='Load Duration med-night-flex'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Load Duration med-night-inflex'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{F58D72AF-0E22-4709-807B-FC099243BA91}' />
    </window>
    <window class='dashboard' name='Load Duration Day Summary'>
      <viewpoints>
        <viewpoint name='Load Duration med-day-flex'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Load Duration med-day-inflex'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{98B60FEC-8E52-4E23-9F5B-0B6230933BEB}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Annual Generation (Absolute) by Type' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Annual Generation (Percentage) by Type' width='192'>
      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
    </thumbnail>
    <thumbnail height='384' name='Dispatch with Load' width='384'>
      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
      IaBJlVUi5glooogR1m7Rz/dtKyZr6fZneWVQY0VNY83uz0RT4j31Edb6l3koeZ+j1UmCoAEI
      GrxMSp2VZcvKygrWFg3mGDaZEzZF6x6pyRiICGxKjQH99ASdbgd/05oEpVKJMAy3lSXPc5Ik
      IUkSBoPBRhwmtQm5zRFIpBBIJFJIJAopipnJeqxlc8zF9/2Nm+d5d80wuBjAPhIP+gRRGbn5
      O7aWdNBhuZMy1qgilUfg39pObz2Wod+JiWrlPSv0MGmXN155hfLYNKdPn96jo94/bM62yfOc
      LMu2+OXXR5o3et2NMDpBkeDTpizniMQyAR3kHc6e2S8G8Sovt/u85z2JEbdfTBjqNU7pdzhX
      hnrlMFL6aOvTt4exeCgGSHKsTUmTRdYGy8zlHkvqKD1ZR2F5Jv9LXg6+RMUbY9QboypreMLH
      93xKpRK1Wo1KpYLv+wghyPOcOI5ptVrEcUySJuQmJzEDerpLUzfp6Q65zYdKX2xS/gqFRAkP
      JTwCESCRlFWFUEZIFEooPFGsjrbZEKzPTjzP2xK4vzaw/0FwM4B95J23XuWBx56l7G/eannt
      hW/TDY+TdVagOsnJ6bGbHmPl4sukY0+y8t6rnNk4VszL33mJJz7zSfZmGQ3NO9/8ff5y9RBf
      +MT0nhzxXmc9x3090yaOY/I8J01TsixjPRNGYApFLjqE9BFcq/CLEehmBJpAtghFE08c7GpW
      ay1a93m3tcQF75lbKn9rLZb1bKeMOI0RUlIrVZHyqr8+UaO8LZ9mdXCBR5J3OVw/iufXqMlL
      w3WsB/TjVZbjPhf1KMvqARK/DsNRuLWGFJ/UtOhlCYvZHJEoURJlqtSorY0QhRHlcpkoipBS
      Escx/X6fwWDApUuX+Pbz32alv0TP9ND26ndcqZcp18qEpZD6WI1yrUy5WkJ6CikFQkqUkiAE
      nq/wlU8gQgIZUpIlQhFRSspUVQ0hJLIpkVxV+L7vb3EheZ5HEAQopQiCYMNg7SS+4QzAvtPn
      zRfeYmbuMmr6UZ4a6/Kdl95l7HSZI7VJPCBuzfI3f/084fGn+OTZCpc7EUcrOQt9qBIRBJB1
      F/nzP/oaYycf4dmnjhaHtpbZd37A915f4LFP/jgPHKrdKMy2AzRzF7p88ud/Fa87u2WPtXYj
      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
      oG7rmzSkIwt2srzCOFev3aJ9++tkYlZoAEKeHjeeIpI/yf/79VWqW3cSi86fDLw41sfhw/vp
      uD1Gd08/P/5nn5CaR7b/xmUuXOvhTtd14nWb+OSjXcxtBjT3r53hZMddjDE0btsz/5DWSfMn
      /+IvAZ9TXx9l81tb5mn8AXxunj1Mx70htIjwzg/na0QAbFrqHL747W/QdpIPPtq5gKxh/O5F
      Yq07sZ6QkSWWSDJy9ji/6TCIqrZ5rr9CefQ++w+fZLwIr33w6Zwy2f4b7Nt/mp6RUe6PlPnB
      tnq+Ofh7itrljQ8/mSXb33mWQ8cu0l8I6B96l1fj4xw/e55e7yLF3Xv4aGf75OUY7lw8wokz
      HYyIKONvvsXElbOMWBHuXDzOh5/+CQ0PDV15hP1fHuJ2913czmE++N4Gzl+6jB8YItVts6ZU
      dKGPzz47zP2+Xqr7inz60c/5qw8synePc6y0Y1bjnxu4xVf7T3FvaIT7I2XeaLU5d6mTgmfY
      sGvPrOsauH2eQ0cv0FfweDD0Hh9vaeKLL35HOTBseuvjWbJdl45w/HQHw8Zl7O2PeGdDhBFR
      zfbII9+bLnP11BHOXbhKNnqT0nt7iJd6+WzvLYRw2LNpxm/Cz3Hy8CE6rt3Eu9iN/+mPGTl3
      kK7hHHVbdrNzZqd9oouDp66SztzlQiTBe9//AQz+lr/7dUDD1vdJujOmq0au8s2pmzR19xKt
      auTNHS2cPXiMzqEs3f3j/OKT3ViT92zs3kVOnO3i1p0ukk2b+P8PkHn3Kl7JmQAAAABJRU5E
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Dispatch with Load (no charging)' width='192'>
      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
      h9ujKEJKuev2w/6uu22PTaAj5qk1a4/492f7KA+jVI+6XAf5e+w2OELqlSW+vHodL+o/GR9W
      uK3aGovLj5PbPtxeXb7PF1e/Jnxqf83q4jxfXLv56An7cP/I6/Dl9ds7znP35nVu31sCtivB
      9vbF+RvcW6482t5/agfcvHaNL67d6C+8tL1dRSHfXPuS+cXVp/YPfYevr37FSnXz0Wdq5XPz
      +g28KOLG1c9ZXNlASkno29z45hZBFHL7m2vYQX9/3+3yzY07hIHDN9eusrja39/rtblx+y6+
      2+Xra1dZqW4ipcTpNLk1fx+AlTtXqbYDpJT0WlvcWXhA1K3xu8+v0eg4SCnpNGrcvb+M32vG
      AjhKOk7EuVNjtJpP9wHK4xP9cYNnGJuapph/NtxBUCgUCILgme2a5dUNUtbOW2w79i5zEEIq
      lTpRGD4VVC2Exfl3TjM2Ovb0PAMd4Xk+/jN5TVUUEISatUrl0TZpJBkfzaG8LVJjF4j8fjoZ
      M5GhXMyAMJkaHyHY/sqJVI5CPoVhppiZmSJp9Q2VZLZAPpMgkUqTMgVh1DfH0vkRsikDr9ck
      CEN6Xn97tlgmnRDYXQcMkNvTLvOlcZKmZnVlNRbAUSKVy+35FdLZ5FPba2vLzM8vYPtPukc1
      33z1Ba2O88wyqIqtrSae4/CUZFSIbXdZXlrCf8pJpMjnCtRrtWd8RwaFQobG5tYz2zXV9RqT
      U0+HWSgdEgQax3GfKo2ZSJNOSQqFx+kZI9/mzp15Vuou9aVvcMN+tQvcDvPz86xUKszfnmd5
      rS8ar9fi7vw8i4sLfHn99qOK7nS2mJ+fZ2lplV6g6Nl9Z0KvWe9vX9ug2Wyy1WgA0N5aZ35+
      nlZkkFI+m42+8Bq1CvPz88hEmv8f1UPAtfLexoYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dispatch with Price' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9aYxkS3bf94uIu+TNrbKy1q7q9fX2tnmzcmY44oyooblI3ESaEkXKliES
      BgyTH2QC+mDYhj8KsAHBkGzDMAFLNiyDEKkhuIxIzlDzRuQsnHlvhm+bt/beXfuW+10jwh8y
      s7qyurqrqquXqlf5b2Tnzci490beihMR58Q5/yOstZYhhjimkE+7AUMM8TQxFIAhjjWGAjDE
      scX1K+8OBWCI44v51Y2hAAxxfFHOuYihFejh0H9sQogHlg1xuDGcAR4S1lra7fZAmdaaMAyf
      UouGeBg4T7sBRxlRfZ1OZnCxjFZGnnZzhngIDGeAAyAJY1bWl6k3Wk+7KUM8JIYCcAA4fo7Z
      8VFSY2k3m8SpedpNGmKfGC6BDoD86CjFYpFKufs5yzKS5Om2aYj9YTgDDHGsMZwBDoCwvkYn
      MzjWUh0dKsFHEcMZ4ABIw4SV9WUazaESfFQxFIADwPVznJwYJTMMleAjiuES6AAIekrwSKn7
      eagEHz0MZ4AhjjWGM8ABENbWaKcaF0t1tPK0mzPEQ2A4AxwAaZSwtrFCo9nevfIQhxJDATgA
      3FzAyckqmR0qwUcVwyXQARBUKhSLRcrF7uehEnz0MJwBhjjWGM4AB0BYW6WVZLjAWPUYKcEm
      4+qVqxRGRomTjDOnZp52ix4awxngAEijlPXaKo3WMVOChWKkUiYoFPHcox39NhSAA6CrBI9h
      rDheSrCOuDO/QtRusrS4RDvKnnaLHhrCdkGapk+7LUcK1lrCMCSfz2+Waa1J05RcLvcUWzbE
      frCpAxhzTEav+6BeqzOyj7BGay3GmIHn1v983J/lUYIDXRaD4z5qrcQr+3oGxhi01gPnZFk2
      fJZHDMfeCvTB26+zsFpH43PqzKmn3ZwhnjCGvEAYksTgefsbC4wxdDodisXiZll3IywZ0AuG
      ONwYWoHI+MqX/5grN+efdkOGeAo49ksgUFSrI/cQWsWtGvO1ENPZoFgZY2VpmdHJWQpORr4y
      gXO0zd9D9HDsBaBeX6fZCClNDq4Er964hVGCSmmS9ZvXmf3oS1z5/rvkygVerE6QZRpjDFl2
      1wautUZrPVA2xOHGsReAlflbNKMUz/cHymdPnqTeCkk664ydfYb5968x+8w5Ck5GnFk8pZBS
      4jiDj1ApdU/ZEIcXQyUYy/ydWzjBCJNje/fnGSrBHw4MlWASXvn294ZBLccUQwHAYaTs0Y6G
      jvzHEQOL1ebiHRZSQSAExXyOQrFAqx2Sz7loFIVgfzucizevkHkB1uYoBIpC4NOJUzwFygvI
      ee6+rnf9/R8QlEewqkzOhcCTJFqASQkKZVznYeRZY/AIW42HOHeIo44BAbBWIUxIrbZGqzNO
      89otxsolrtaXyZUm+MizF/Z3ca9Au73K6kbGaDHPHQQFz2V54SZjs+e5dG5/O69BaZT66jy1
      qMZoQWFcH4+MO3fucPbSS5yeGd/X9QA21moEeZ/KaHWgPGw30cLFphG5YplWvU6xXEJhMNId
      Tp0fEgwIQFCpcNYbo16s0KrXmH32Er4SjFaLxHZ/ozVAqVKhVCkyOqap1+rMTk2iBJTyLirY
      P5XgSGWUUiFgykhqjRZTE91O63sepZHCvq8HYHWblfUItzQ4A8RRxEptGbRG37iKU6ly7eYi
      pYLL+QvnMcZgrUVrvXlO3xFua9kQhxsDAuAGAQDjY1XGx+6OiH6vfL/on+cHDNCG5IKTD3W9
      IAigd83KFs/N2dNnH+p6AOXRcWqLLzNz7vRA+dLiApWpWTaWFpFKkcQx0lE4ErS1qF4apK3p
      kIQQm68hjgaOvcHacQMuP3ceIQYXNafPnccKReX8MzhejiQK8XwfKcAgEHQ7vJR3zzPG3FM2
      xOHGsRcAMDQ7Cc9fHtQfgnxh2+e7tn0FGHPMt08+JBgOVUjazRZraytPuyFDPAUMBQBBzhNk
      w8nwWGIoAGg0klJh6L5wHDEc9lAEOY84ju9bwyRtfvDuVUbGZyi6mmJ1cugO/SHBUADQXHn3
      Oqo8BpzbsUZnfYOTz17gyvffpV4u8OL4JFk26Pq8dV8gyzKstVhrkVLecwxdC1LfarTbcd+q
      pLVGKbXn4/65e2nLXtvVb8t+27XTuY+jXft9RsdeABYX17j87EmCwv035goTE7zzzhVOXzxP
      Xt11h97u+pxl2WN1h9563b0cPykctbYMHD+ZZh1e3LryPv7IOGkU3reOUD7Pv/jCQNmQ+uTD
      gU1irE6n87Tb8lRgdEarHVIsFZH72MG11hJFUXd3uochMdbRw+YMcJz/aPlCkfW1dapj1d0r
      99Anxtr63LTWSCmP9bM8atgkxuorBccVnXaHicmJPdfvK15bn1tfiTvuz/Io4djrAH1iLOEW
      OXPuzNNuzhBPGMOYYDSdTkY+7+9edQs+7DHBNk1I71wnq90BMhAWm7SxaRvhBkiviiydQI2O
      o0YnjqwH7LGfAcDwF//hK1x46ZNcOHN0Ez0cFFZnpLevkq1dwbSvY5I7qKpA5HrLOQEy1+3k
      XZs9ZG1DMp9hI4nMncapfgzv/MeQuaMzAAwFAAiCHI1GA7grAJ362iYxVqFcYW11nfLYDEU3
      ozw+/aHYCTbtJsmNH6Dr76DDK6hRg8grVEGguH8AlBACBAhPISf6+s4CJpuj9a0/ROYu4VQ/
      inf6MjJfvO91DgOOvQCsra4QhSlT24J+3nnvfYzrcWLiJI3565zqEWM1ywXGJqePADGWxUYd
      TNh92U4b017BmhCyJiTLWD2HmnCgIlAVgLs7sg8FCWpaAVfR8Qc0/yqD1EUG0yBHwB9HFmdw
      T5xGFvcfEfggWK3JwjY6ChFKoYI8zh5momMvAK3aGpG2iG1BLB/75Kep1+s0N1aZuvgsix9c
      5+zlC+SVfmrEWFZn6NoaptXEtGqYeB1IMOEq2A42bWGTDSADJRAKUCB8kAUXGfRG7s31+v70
      nn3Bl3gz/eewAqxg7QeQWeLXU2yaR+ZmkflZhFtFFavIYhFVGUe4HtZo9OoS2cYKpr1I2L7N
      fFaibTISk5KlMVHcIdYxWliMkmgp0AqEBUeDNAapLY5QeI6P7+Xx3BzKWJRQSMRQCQbLO2++
      hj8yzTOnT+z5rN2U4G995/dZvXPlkbRQWU3JrhAqB8fLcArg5gQFZZh0M0pegFLeI7nXk4a1
      FizYRGPaGhuBTUEoS+x2mM953NR5Oi8vUviD18m8/h6LBbavQ/tdWWw5BtmOsYGHleKe74/9
      DAAx7719jRc/M/lIr7pWgKWZR6MMjpolFsVpjNj258osZJZ8u8aEbDPlJpzwLCX/cK+7t2JT
      n8g5yJxDkoXMR5obScCCfQZturPU2Ff+guS//yHmR87vek0pJEoqlNx9P2YoAHjMnpoge8RM
      Dp2NGnO3bz6SawlvlTtJdE+547vkSwUoVblJlZupRaYppzvLPJsLGcsV7ol1PozIdMxSlHA9
      yTFvJkhEAYQgzmJ0q0PwwToqN4qMzzC1kCM1DyZpMMKg0WhM95/QWAesMmip0coQZRE42wSg
      PneLee2wcuMqn/r4R2inEhOu07EB505O7fuHdZo1FtYalH3JwnqLl164yA9ef4vZZy5SVAmv
      XVmk6kYUTzzDu2+9wxd+5DMPvN6NK+8igzI21TiOoDI2jhLQrq8zv7rBzFSVzAZonTIzvddd
      XU2nnSBbrX3/vgfh7+YsPzd+cJcIKyKggrA7X+t6Y4M7K4tsKJd15VDzfLLxGW6Elqlwmef8
      JieCHErun9bmccGYjHbSZil1WMo8FkyFSJRBCDKbsbo4T3q9yaQoMR0Ucf7kLaILY6S31hkt
      XmWtObbrPSSD0V6lnMSXGnRKpeDiKYMjtgmAkC7Edbz8CFeuXEF5BQoFH9d/OJtfUBwhaIUg
      4ezpWebm52l3IhaXlsgREzVrOGdOs3D1XSZndhcwCwgpiJrL3KxnnM1SmqkkT4dKpcj8wgph
      J8HNBUxOT+xpettY2yAoBBRLpYHy+voKmQowYYPS2BRrSwuMT0x0ibGc3BM0g7YQ9v6EX+fK
      Aee4OyI2E82rt67yrvIIJyZZYppCuM6M0+KkmzDpOzgq99g2rrarlFpHxFlCTQtaxmEtc1nW
      AS15AoTqOhUmIc3lW8zqmGd0xt+rjlB4aRQAk7R4Y2OJF37yOYQSoAwYA/b+7TfWYixoY0mM
      JLEOxgq6ItEdCCygcQb7SL5a5XRWhhmFSEPqoUGkIcV9ZE/cilZ9nVY7pBS4dOotzpw8ReC6
      eMUqjjCcPiPopJax0ZE9+c/MnjqH53tElQrByhIj1UkmlEBgWV5e4eKly1idsbxWZ6/eOGm0
      wQfXFjjvleCZu0x1juuxtraCQrH6xiuUz5zjjTfeIyjmeOHZi7uaQb+1WmX+Zm2/j2wAAksl
      F7ER7Z21WknIu2O8KFMW31tnzhesVCQb1Wne0y5ep82UrFFVCb4AV4LC4AiDwJJZhUaSWkiM
      JdujicQgyVAYJKmB2EJkHdpUSWURu0VhTdKYjbUFoqYkrjuUUpfzxWmkgEVgsQ0aRYZL7p0r
      2NkXeHX542gUJWcdi6SV3f+ZWKGw0sPK3YfAgRqO7+P0efJzOfKlnU7ZO0qVMUqVwemqOjE9
      8Lm4j5m5z+GfCwJObSPDOn2m78fjcya/d5a4ydkziPi7OO7gw/rgvXcZmz1DbWmeoFBiaW4e
      v1ihEpg9mUHH8h7uxOjef9wOyKllEnOOcml/SyljLVFqqagJAi1orcPt2ytEQYdgJKYxViUI
      egq65tHPBr21R39PodGo0aw10HGBuG4pmzynypcY9Syjs6Dkzve31hK9+Q7+f/pFzlT7Ias+
      Bec27ezRWL2GSjAuL750CbxBm/jHPtXVR06dmN7ppCcSECNFjLnP2v/B5wnynmCrDepiZYIo
      s6yEirl3a8xFK+B5ePk8Jm2hTUJqMniEVnEl87iRYMIb4XL5HEUnoTKztcM/WPBsrYlNUsTU
      1kFUYJGAhj3P8/fHUADIuHb9Ni9+5nClSJXEGPtoN6pyjuBU0XCqWAbKQHeU1aZMZiz6Ect0
      zpVbOnvKbh1+O7Lv/gD3h164Z4aKdRVfbhCb/ZMhb8dQAJC4Xp40OlwJMnJqlY7eefZ5lBBC
      4CiBc8hCGKwxZK+/T/Abf/+e77TNk1OrxI9AYA+/kfixQ5FzM2JzmHqABWF4FFP8UYW5uYAc
      H0UUdrb5G+shSA98n6EAkNGJMorBY/SL2Sc8WSPRe7f8fBiRfvN1nL/x0ft+H+kxcmr1wPcZ
      LoFQFAp54vjendY+dNTgrfeuUxydouRqKpMzu+8DJB5Zc3slyXYVU2BhW6nvR0TRo9NJuibz
      w+m/LeAexdvGMfrmKuqnz5E1umO0BRjQBVw8X5DFB/tdQwFAc+39a6iR+ytUUa3Bqcvnufr6
      B3RKeSam2ZUYa2T9Bu7CG2As1hisMbTFCJHtTek9f6yi3cAnYqtzl2YMZVZACKwxXXcGcS+5
      lNAalc9jlcTxfYTj4I6PMfpDHwfVdW0WQrJsFA/r6JFGnU3R2ep+9jDH0B0CJJacqwh8F99z
      UVHakwFLVm9w45//b0z87N9h6os/sbmxZoSk2bPr913ZXNHmsr2OtXdlY/DYbirQ9zs+9t6g
      t2/f5vaVd/DGzvCply7vXMlkvP/+FcZPnCRQGuGX8BQP9AZd+bOXiRaXEFKAkF13657j16OC
      brWRnodJM2yWYtKM8PpNmu+8z8zf+3lO/NLP4ZQe3jFOa83i4uJDn59Z6KSgkXiei+95TJd9
      XNcdyKFgrSXdqHPr//y/Wfv6Nzj1j3+V6V/8GaT7+N03jr0AvPqtv6CTGrzSBJ/9xAu7n9DD
      YY4JTusN5n/nSyz+/pepfPqTTP/iz+CNVhC+i/S8bseSsjsKSgH9rDabSwyxOcyGUbh9hXYf
      bFvGWGimgpHAwVcSrAFrsdqgoxgThuhOSNZus/JnL7P+F9/udfyffiIdv48jIQBZlhGG92du
      OxgsumcA3w+diTGGOI4PNTGWzTJWv/aXLP/7r6I7ISZJMUmCTTOEoxCui3Sd3ruLcJwtwsDd
      473cq7eEwXZf1gJGY5IUm3ZnJ5Ok2CxFeh4qHyCDAJUPqHzyo0z9/N9+oh2/jyMhAE8Cqyur
      jE/sfWPlMM8AQ+wdQzNoD63mo3WHHuJo4NhbgfrEWF6+wtlnnnZrhnjSOPYCcPH5F5mqh5RH
      jk4Y4RCPDsMlEJbvfPM/cuXG/NNuyI6wWpMuLBC9/Ta61Xp4ypIhdsSxnwHAoqTD+voanL1L
      jNVcX2auFkKnRr5YYr3eoDAyRdnTjE7N7roTbLK0S5arnAHKFZNlmDiis75CVFuj06qRL4zg
      5PLkyhW8Ujf4qH3rBuu3P2Bp9RY12yDvbhC84jJTmmDkxIv4Z1/EmZhCOAe3nFhrse0m6fIt
      bJqA0di4S4Nozd44jlRpGu/M84h88UjRJB57AZi7fYt2u8OJ8mDU2wdXrpIql5mJWVrLNzn5
      /PNcf/MqUSnP5Al2jQj75qt/QH35Np7jo5Ao0/W87NiYhu4Q5xySfJeqQzRAraQ4icZJNNJC
      p+iSFTwoSEZtyrw4SYrLa2SMpN9m6rU/4Rw+ldLzqOoLeKefReQeHCw+AGPQ64skd36Abb8P
      dh5RsAhXIlwFHt3XHpFlhuSVL4E8hchfwDv1IrI0ilAK1KPvZlZrbJZhjQZjMVlKGrbJesRY
      bo8YS0jZ3fOQqmv63cYUcezNoEtzV3nrnds8c/ky504N8gI1mk0a6yuUx6ZYnp9j/MQsOanB
      K+66E/xHb/0+i80HL6usMZBmvbzzgxCw6VpRiW+xlIzjFnK4rtutL0DJlI8FS1xwFdQUwjmN
      8E4gnALSL4Jyux0QsHGI6axiCbFpA5ssI/w6ctR95CO2NRa9kWAjByF9ULlu/AoKpI9wCwi3
      AEYACuGWkflRZK6AHJlA+jms1ui1eXRzlaw9T6N1h7mwSNsYEpuhdUqsY1Kr0RKMozBKYKRA
      WIvUvVemcTS4ysVzfBzldomxUEghhjPA1Ow5FhdW0Ttkfi+XSpR7wfLlS5cGvtstIiz46puU
      PnhnYINUaI1sRNh6B1NrY9sJmaHnFnDXa8b0dkz7LG75nOJcpGhJgza6u2RRluJokVf/2d9n
      Plvi09WQojcHzHXbZy2kBht22yl8B1HeLmqPh0xLSIEz1veuzYDdTcwmM+gVjZ2zmNiAMjRV
      zG0nx21dQv/5NYov/4AkKAzQXjmiG+Z+r5OhwPa8kWQYY3yXcIfQy2MvAJBy+/Yiz0482oiw
      kydmyLfq3Q+bHgaSLPBJHEWsJKkS7OQc5CjBSMFnxBeM5JsEygXrkgmfVqSpR5ZGpNH/z58z
      9+Z15j5yjj9tdfiUv8SZfA4hem4OruouZ44AhCOhCJ0k5LYruJkVWOcUxrpYaxj7y68Q/Xef
      Zq5wdrcrIYVAqq7/lRACgUBIgdyBI+lICcDW9JZJHCGUg7stKL1bR6K12aNrg8P42AhRdH93
      6IfBufOSs2MPMq3uFs6U9mqtIBhHiBToUA2gz4Ky/pNnSP7kHd4PXNIzU3yDM9xMlngh12Is
      lz8SpFjWWsIsZD6y3EjzrNiTaOljrCGJY2in5N9exhk9gROd53QnR2IebLI2wmIwaKtJs4TM
      ZmiVkQiNVhocyESGkeZoCcDyyjI5R9JOLDc+eJvpM5cYyQmUX0ApRRRH1FYXGZs+QasWIaXm
      xMlTuOr+HUHrjDCKcePkCf6SvcH2JvaddASA0Y+coPo7f82vjXt8484871fK3K7OMBemzEbL
      h1YQrLUkWcxCnHEzCVi006Qyj8USRh3CtUXErQ6TqsxoLof9yuuYl2Zo355ntLjBeuvBudx8
      CQVfUfAFWZqC1Ts+QU8dQR2gHWVIKTh/+TkwmvfefY+J2TO0W22qo2U8P2BjfY20GbKwWqM4
      NkW1eH/ntHazRXmkQqk4SKWytryAVgE6rFMam2JlYZ6J6RO4aIRf2D0gxhqMfjiadAsYY8lM
      m1D7xNoSG0VBpXjS4CuLoyRSQPnyBJ235/jii9M822nwtesbNMcnuFWcYS7MmI2WedZvMubn
      cNTTY4ez1pDqhJU45WaSY86MEYsixhqajQZmfY7ZNOYFKThbLOJdLAEWEzX4oLXBpc9/HKEk
      QimscR5IjDWIrp6jEWgrMFaQGEVsFIYjJgAT4/fSHZaKJVAOnutiESRhGyeXxxGC6WaDcvBg
      RS9qr/LOe7e47A1Oq7l8nrVaHbTD7R+8RvXiJd556z2CUn5PxFh/uTbN3K2HW1ZZFKkMqARL
      LKYXsKLXca1FmATXxrgmwrER6uJnKX75O9RLHwdgRBrKzVVWnEXiyVHS0SluhVDu1DjlNDnj
      Z4x4OaTYv25gsV235r35R5MZTT1NWUwdljOfdTtKJIqAIIpC1hYXiNc8qnaEajBNR7q8ieK1
      DadHfQKF77+O+8wneW3jk93PqoaQhla694yeAFZIrFCw7XcfKQHYiXe/uM1+73t3Y2mrY7tz
      SE7OnkG3v0G6bbS+duUKlamTNNcXCEarLNy4RbE6TiW3t/wAk3lJbnzvBF33wpJ3Yk5kjft8
      r4ACdixP+OWvMVZ0ETkPYy3NpIhOHOpzTebm6njVmM5oQKNQ5Z3QMNrZoCI6vXDMB8MIQWYV
      BkVGl2ZQ73H0jUVALAogJMjucrO+XmNjIaEYj/B86TzT012lv3e33qur/3SJsV7B/4d/m7OV
      PmuH0yPGejQx3EdKAB4PXD79uY9DYZDF7SMf6444nNiZs/RxE2Mp0SYzu7tVCyFwPnaZ7K/f
      xf3hl5BCMOLDiK+xxYCLWcBqRzC30uCmbOKWE2pVh1ywd7LjvqD3QzP7sNaiswxt9Y6TQpql
      tBsrdGoJWeTjZj6z3jgfKQeUqnbX/Qe7WgMpEGNbBzmBtQpBhn0E3XcoAGiuXr3Js598/Bw8
      +4En64R6b53U+eyLxP/6j3B/+KWBciEEgQunXDhVKpPqEhuxZPFWxGJjeU9+RVZYcCSOJxG6
      gzUxYBHCwzpFstRAahA7zArlQoUZb4zRnEsxb8g5W2kYd59F0r96E+czH7lHUCIzhq/WifTB
      czoMBQBBFFnazQ22Jsl72hBi79R/olLCCoHZaCBHy/et5yrBZN4ymfd5afxJMuHtlM1llzMy
      jX77Gt6P30uZb2wOJZYfScsOl33sqUBRyCXE5vDw53dpEfe+SyuEwP3Mi2TfeesxturJQl+7
      g5ydROR2Xutr6yOJd/xuPxgKACmJ9qiWD6KwPlr4ap1Y78/K4Xz8Mtlfv/ehcZfOvvk67ufu
      T4wV6zF8tXbg+wyXQLiMT47BA5hzsk6NNz+4QVAcZ8Q3jJ04tes+gEx9bHuwkrGDuqLdZDoe
      rOd7ijTcb4COj6hMkryzhpqdHfjGykM6zvUzVmaDz952OuiFBs7oWbL6/dru4+ckNjlYaquh
      AJBx7d0PID/ChbOnd6yRtNrMnjvDzXdvkhYDpmZB70KMNXb5HKUzd4PspZSs6wAjJb7jkHNV
      NzmF6P8B766Tc7hI6yN6ZFhd357esZQIQBuDkrK3adY9boyPs/B7f8jF/+IfIdyuD42QkuVM
      ovuX70mgTiKyrM+tudW9bKfj/dNhGWtJNGgL2oqeXw5MBBLPkThKknN7puRUb2afj27d5tr/
      9C+Y/c9/mamf+TsYa3sEFQJjbJdaqXesZIhied9kWENirC24fu0aCzevokZO8JlPvLhzJau5
      fv0m41Mn8KXGOPld3aEbjQbWWlzXxfM8lFKPPVDEZBlX/tn/Qu2vXmXqZ3+KmV/+u7ijO3OM
      WmvJsowoioiiiDRNd1w+pT1r724tzyyEGRihyPkege8ReA6B5+BIgask8gGJMMIbt7j+L3+b
      6PYcZ/7rX2fsCz+86cr9OHHsBeD1V75FI0zJj07zyY/chxluBxxmWpS00WTx3/0RC1/6Y0ov
      PMvMr/wi/uQ4TrGIKuTvSQpurb1nV7uPWqTJTNe9WpvuawfPcXKuolr0yLuDgm6t7Vp02h10
      u40OI3QYYsJokxhr9atfJ5pb5Oxv/BrVzz+Zjt/HYxEAYwzt9uHi278/LMZY0iTFv4/FYScc
      BWIsk6asf+M7LP/xnwECGeRwCnncsSpupXyXrhE23zcZ4rYSZEGX8wruEtlued+xHNBhRLq2
      Ttpodjt8FGPTFOl3ibFUECDzASOfeInq5z79RDt+H8d+BuhjSIx1PHFIzQNPHkNirOOJY28F
      6hNjFUYmOPu0GzPEE8exF4CLz79IdbXJ2PjxzsjyINgsxbQbmDDCtNaxyb36nSxN4E6fQriP
      J874ceHYCwBYvv5nf8C5j/0NPvHChS3FmnaYopOQoDRCs7ZBqTyCxGCV+6FcO1pj0LVVspXb
      mOYcJprHhIsIR4NMEIFAeHLHhbNeNMQfOAj3JLJ4DmfiIqqwzS9JgPB8RHB4uIOGAoCmODJJ
      c2MNuCsAS/NzbEQJjrZkN67ijo1z/dYSxYLHhQvnn0ie4McNqzOypTmylSvo5jVMfAeRi1BF
      BQWJKoot7ni7jOyeQpYA5rDmDunCy8ThDs/IKKx2wfrIYBzwUaWzuCefx6ke3Ltzvzj2AvDa
      K3/FwuIKP3R5MDnGRm2DeqQp+x7KcYk6IcpxcRVoY1FCPDAi7FDC6LsdvnUdkd5BFBNkQSGq
      /c7ubJo1D2QgLChk4X5mTQ10gFu9Zr1P+M6fYuIqsnARZ+p5ZGEw0MliyDILWmPTlCRqk8Qh
      Uiq8XB43lwelujkOdnD9kI6D9HOobQnRj70ZVOuEeq1DsVTA89xt32myLMV1fZIkxvU8JBaD
      RGAfuxnUWotOYkwcQRrvSOtx70kGm6agDSZudSkOkwa6dR0T3UKWeh3+AUQBTxNdmsYM3U7p
      pCFrKSzrgNB6hNKj5ZYxrsIKsRkWLCwIY1CJRmmD2KFHKytwrMRBILXFEQpx1N44HdUAACAA
      SURBVGKCHweUErz5/VeZvfQ8F87MbPtObVKrbN3cUnSD1h+EV175I1bnrg2USSHw3By+n8cR
      DsqCFBJtNVoK0iwmjjskWUzWK9PCIgjJiyapcCkSUhAxI8ow4kDeKwyyRggQLghPgRLd/S1H
      oMZkb4Q/PG7f1lriLKSeamIraGtBZB06RlBzijScWXTe627MWcu4XSCR999kzPbBDNnHsReA
      boidfuRuxItBxuLUTo83Ber3P7EI3U56t6OO6Q3uyJPYrTOAtSibMCnWOOOGzPqQc/OHRrl8
      EIzRrMchVyKP22aKWAS9negtLhTCkmYpOguxiUWkgpiY2LQwdstzkHRHJNkN2rfCggShug54
      UnRJsZRyUPLeJdljFYCw3aQVZUgd0c4kp2emWLhzk2BkApImy7WQYt5jemqS+fkVTp488cDr
      rS3N084ElVKRcrm0WR512hipcIRG4xP4+/lZhiQ1LC0ucvHs7O7V94iwXmdx7s5goQChFH7g
      4+yQDyuOItK4u3zxhKDkO5AlpGaJTtzBKeapxRqR88jlAzzPZ8GdYSG1uEnItNzgGS9kJvBR
      8vCM9NALcE873I4FV5Mi62IaKxQGQ5LE6FgjM4lMJSpTOJlDyRTx8TCpxmiDEC4nnZRWcq/J
      upttuZufTFuDMYY0S+mELRIdYWWK42lc34BjEV6Xje6xCoCfy7PRWKY6UqKzXmNldYE7t5c4
      m6+QtNpEnQ6khmutkFDDyV2u12g2cAojrC7O8/1X5zl/+dku/XjSYml9g8pImSQ2LK3X+ZHP
      /dCeTJX1jSa1tXmCqZ1doR8WP+1ofry4bcTpu+yKmHqzRSPOyKzFV5LRnEu+t2wBhUTgSBBB
      gmACQdB1MfbAolmtr7OQplxFspIvUhod5bac5XZsqETrXPYanAkknvP0/JKMyWgkIQuJw53U
      Z40ZMpHDCmg2GmSLG0yHEWOxRRqJ5G7QvSMg70tKOadHbNV1iw7UOqF8cLCQpwSlwKEcuJuu
      TlK4KOmh5GDiv8cqAO1mjfmFJerrq+TKY4yUq4yObnSVx6DApROnaDXqrKysMD6y+0ZUqTLO
      +Pgot8MWhVIFR0KUJPh03W2RDoKE6n1cgHdCsVzkR37sZ9k+Oy7cuUlkHLLOBoXyKKura4yM
      z1B0MkpjU7sGxCgMLtusQfbu+4QvmPDdwS+3cfFbDcY0EXYMeuF//T/YiUByIvD5BNBK2rx+
      fYWbjketPIoZHeU76RhvJk0uOOuc9RPyro+jHg2VyFYYkxKmEU0NiZW0NMS9dfy6CWiIaaxw
      sMJS21jHr80zG4d8zvc4OZYjW7Gsfv929/duXYYORA7ZLcUdAru6Q527BRZoA20L1miM1l2l
      2fYcH60gNRIl7NAKtDz3Pv/2d7/CS5/7Al/49F1WhfrGKqmFqKNpLlxn+qMvceX775IrF3jx
      uUubqVu3Wny01iRJQhAE/Iev/jlzt28dqG1SaCr+CuvR3hkrwixhSa/jjaZ4oy4jlQoSQ860
      GBFtxpyUcUdTkBmuEDg90ljZI5HdDgsYa7DWkFlLaiyhVaxlirXMoWbydEQJI5zeGD2IZrNO
      a7lFVnMYF2OUvMLddMTGMvqvf5f2xz9KVuiFpG5hjbA75C5WQpN36zTSMTanCwE8IGJBpCko
      1YuM63utdt+OvRI8OXuaguuRJYMsbmurq3jFKllUY/L8JRY/uM6ZS+fJq70RY53IGwpjB1uH
      B2qVSE8zXtj7dax1iHWelUixcjvi1q0NnHKK60cURsos5ItIIwDTW1ZYhM2QNkPsQNhrERjh
      YoUDm2f03KglICGOI6K4SRxFxK0QxynRbsXYjseEHONC4TQTExl5l4HlR/bWFbKpEcZ/7IV9
      Ke955zad7NHoa8deAMDhJ3/up6mMD7pCP3Px2d5Rd3dyrDq47nwSO8FSpNh9mi2FEOQcOFU0
      nCy4aDtJLRbUm4L15Sbzuk3qG1LTQPkOQSGPMCE6izDCoDwHPwhQjurtO1isjdBGE3dCdJKh
      RI5Oy2CzHLYVU/RHKRMwVTqFazJyjiDnQ7lku3qM0GwfoW2mSf79N8n9l7+wb8uVsR6SBPMI
      8hsMBQD4zrf+kmde+hQffe7C7pWfEBzRIjWl3Ss+AEIIHAHjAYwHlvPlItYWSA100mkyK8gi
      QWYMmbFkSEyiMC1BHNYJkxBrLTkvRy6ooIRAWo0vDMU8FFxwJvpJ5QXdHd6tnfn+HTv77luo
      S2ceyGN0P8R6jJxaJtQH53EaCgCGlYU1qqc2nnZDBuCpGp3s0RN1CSHwFHibSn8/oL3fWXtB
      +uUCsJUqZiv7wsH2GmyckH79ewT/5Fcf7nwchOiT9B6sLYdzP/yJQnLx2XNMTB4makTTU9I+
      nH+e9Guv4Hz2I4j8w5totcmhRHjgtnw4n/C+YMmMwHtgKiHLwsICcZKgk4hUP17Dma/WiMze
      wzOPEmyzQ/bX7+F+/uMHuk5sqvhy/cDtGS6BEBijMOn9R5NwbZFMWt544z3yxRzPXb6A0Q9W
      gp1UIZoPlx9AehlJuD9muAfBKrXFnPjksN1QYBGYL30V50d+DN3e/9r/nuvnPER6sNRWx14A
      jAGT1GnG9+/QynVZm5vDy5co+ZZEWzwpH0iM5b75BoX33kKIfrbCrZkLdzi2tmfqFmhGKNka
      WIvJsi49VaZJ6nV0swW9eyqloOsnttm/o5U1zv3WbzD18z+FRSClZDkV6K2bSdYStZubG0+7
      0WJtPX4QLZbtXburDgs2Uoei55D3FAVPEX/ve9QQvPA//hZSqd79LULIHY67+srgsek+rd6x
      IEOx1qsjej5zdjON7K7EWHboDs33Xn0VZTI2IvhbX/jsfWrZHivZIN/Ng9yhO9dvkdZqD9mq
      rgMXQnbfpUQ4CqdUwh0pIz2vb3q558y03uDGv/xtNr79Ks/8N/8V4z/+o/eYGa21tFotsizb
      fPUFeK/o74FsffXLZC87I3QFd/nLX+H2v/r/8CbGufDf/hMK588+5HN59Dj2AnDn+nvcnFtm
      9pnnODvz4aBFsdaSLK9y7Z//77Te/YBTv/4PyZ87gz85gTdeHeDf6f/5++RYe8HWDm7imKzZ
      Qrc7mDjBRDEmjtFxTO2732f5y19l4sd/lFP/+FfxpiYOnbfqkRCAvtvB40Sr2aJY2jsh7VEg
      xsJCeHuOhd/7A3Qn7JJdKYU3PoY7OrJ3vWArCZa12CQla7bImk1Mkm7ea8A5RwiKly8w9XM/
      1Z2xDimOhAA8CQyJsY4njr0ZtN1ssL6+zq1bc0+7KUM8BRx7K1B9Y5X1RofJmcOTHmmIJ4dj
      LwAzp0/TeOcaU+Oju1c+xrDWYBobpPM3Me2Ve76XxQm8M5cRuaMRltnHsRcAELz72repJfDZ
      j17aLLUmpdaMycI6pbFpVhfnGZ+cxMFgnNzumeKPGKy1PUaJBL2xgmk1Me0NbLqOCbskWcKP
      UGMeonjvytmkmta3E4ScQgbnUCPnUeV7BxURFLrlQt5loH6KOPYCYG1GUJ4kaQ3a7Bfm5mln
      KZ7wWX3jFUbOnOPNN94jKOY2M8V3z7/XhnBU7Ao2iUlvfUC2cQUT3uh2ctcicxJRdLoscB7I
      Ql9Z7EaU7fj7HIlzIkc34P81TPp9spvpPdVsBjayYD1ErtojyJrFqZzHPX0J4T9ZC9qxF4DX
      vvtN5hfX+Mw2Yqx2u8lGJyWQDYJCmcW5BXKlCpXAbAbEGGMGbOda63vKDgu65suY9PYV9MYV
      TOc6wi6hxhwoSmQR5Db/+gMJshKIkXvNn4Pjfd8Dd5EsfIX4mxlWTCKDsyDvmpettSQ6I5Rl
      PL+A6+cRjkK43h75jQTS83CCAk4Q0N9NhqEZFDBEUYbvu/uajnczg8a1dUyW4uaLPTv41qQT
      9079fVeATUa2rl8BWdQh67QRSRsl1K6me2s0NkkhyzBJu0tkq5vo8AY2W0CNKWTu8I57/e6Y
      mYS1OGYu9ZlL80SiQI6QhhwDY5BJhko1Yhd+pj6kAaUNUlukNjjIITFWFxnfePlrnH3+pXuI
      sQ6Cl6/8OatLNzYfuDLgCIXv+HhegCMUygikEGhr0EqQZglJEpLohAyNURKjJI6MyKmIBJcC
      nU1irKqTMeIXkGKLJ6sE4UqEr7rvvYAypwz9JcxhgbWWdtJmNbXEVnWJsXDpaEGNCpEodzfr
      VLdu2ax3/XikxOQ8zCNYLQ0FAIkSZnNN/6iQ5lzC6v1yD6e9107w2E5EO6brLMkTICQDYTtW
      M2rWOO22OeNllPwCYi/0iU8R1lq0SVmMYj6I8yxwCiMGBdMKizGaOOpABE6icFMXrRwEIbGQ
      4IIWGiN2WG72yLKEFN0Mm1LgOF1irM2lT+/9SAlAo9mgXOq60S7cuYWbLzNevUuB0ul0yHRG
      uVRgY6PN6J7C7TRxCksLCzx7/tQja2u8vsHi7Rv3lEtX4gU5pONsemgKurSJWRyTRgloS04K
      RgMXqVOkWYK4jSoELIUZ+C5uEOD6PjaYYENP8kYnZby9xlmvzZmcxHdyT93C0kc3BaqhmbS5
      GXtcy8q0xCksXb0pCpvYxOBkDjKVOJmDl3nk04AsSjA6I+w0WAbGR1ZpZjNYIRDC33FJaE13
      Oal1jxgri4lliutp3JzBKovwBMI9YkugdrvNxsoyYQat+hrjU5Irb32P0uRpPKXIFwKaGyus
      FEuYTsx3vvVNPvOjX2S0cP+pf2OtTmNjgeLM2Ufa1p8N4Gcmd3aJsNbSjCNaSYa2XdfqkZxD
      rqCgMEhwaWgjOIHoL1+K3dlhoxOy0q7zQZox53ik5TK6NMlKJnm90eaUXOdCLmLMzyN3oAR8
      nOjrM5nJWI8j5lKf+SygLp7BoDBW01hbw12pcSrNKGUCYQd7csGTVIsOXkEwXvLw3S7/oaGJ
      1qs0OylhYgbcvPvwlKCQcyjmnN4gcJdq8q7K23OhPkpK8PrGOtgue43tkhqxurxMcWSUKE7w
      cz5xq4bMFXC0od7qcO7iBQLv/nJudMTiYhMpDdMnpjbLF+7cpJ1C1qlTKJZYr9UpVKYpe5rK
      5AyOeLA7dOvbv022euXgP1quY01118jX5TDhnU7EDeVjJicplMoIDGO2u0SaclNGPB9Heo9s
      ZrDWkOqEdhpT15LYOj1iLJeOldRNnlB2ne601qyvLFNuNDmdxjxXyDNRdAlv1Fj++rVt191+
      H4vRWdd/X6YIkWOAR9QOxi7cJSCzXU6jJMWqXlJxa8msILUKJezRmgGqo/dGSY1Wx7aV3O3E
      e2GOWV+e5/d+5w/56Oe/OCAAfi6HX/JoOz6txRucfPEFrr1xhbCUZ2Iaskw/MD/AN2tnmFs8
      2MgrRUrFG2E93nu8ciXNaL2/xrp3BzumSCbGWGEckVpyrSZjssWUm1CRCZ4AV4JEooTYeTlB
      t9MYa0mtJTHQsS5rmcO6dmnYUWJZZKfgdIOhtrpCZyWGRo6Z3Ay+k2MV+MsWUNeM/qt/Q+en
      /hbZdgdCIbvEWGxJ1YpACkPZW6aWTA/eU2w76NNQAiLNYDMqrmtp63uvHikBeBwYPzHL+EgF
      myUD5c16HZWvgG4z8+yLLN2c48JzF8nJvRJjZRSqBxtpu8RYU4wX9nMdl8xMsR6dYKNmub24
      hi42UF6H/EiOVmmSO3SDVoDecKsRNkPYHYixhOh2E+Hc4z6dkdHptGg2lkiaEY7KIdwSUSck
      jRK8LM/J3AwX8gFjMxnetu3z9C/ewHzkLBOf3B8va161GNdlDsoIAUdMCX48UHzhJ3+cqROD
      o+yZ8323iC4x1sizg1nkn8RmlxAay/5nEUcKJvOWyTxcslWaCTQzh407Ietpi7ZqE2V1lO+S
      K+RBt8myENsnxioEXY5e0Q1vtFZgEMSdkCxOUaJI0hKoSDKeq3I+f5KcY3AEXXNv3qIKlsAR
      SLkTXxDYdkj6jdcIfus/2/fv0zZAiRBtD+52PhQA4Nv/8WWeeemTfPKl5552UzbhygapOXjg
      uBCCsg9lXzNb8IAqxlqidILMCrQVaAGZA9pKtFaYuiCOW8RpgrUW3/Xw/SJKCqTQ5JSmPG63
      jOjbB4NBrv/tsNaSfPkbuP/JpxG5/QfLxKZKXi3Q0UMBeAQwNGst2p3O027IAFzZeGT8l9sh
      hSDv7dRBDZudubh9P2L7vsXDLz/M4hr6zhLeL/3YQ15BdvMiDYmxHgUkz1w6x/TUYSLG0lj7
      4FH0qMIaS/Klr+H/4hcROySz2ysyU8AR9+Yr3i+GMwBdTpHuWvV+VQw3b95ifGoaFw1efld3
      6P0EmW9HoFaI0ipmB7bmow791lXI5xCnpw+kR0WmTMGZIzngMmgoAEBtI2K83QB29gXqrC7g
      V4q8/eZ7BKVg0x16eye3PUc2Ywy+UeTi+KHa47guUTTTHf+NwWZZNz2o3QMzjxDIfqB+jzDI
      uF3u/v3w/+zl+EEtAVB2i4nYii4Fyx9+m/yv/Tp0igNt7JonuXvcv1PfyL/Dsci1yGURe5kp
      77dYOvYCkCQaT7XpZPefjt18noUrNymMVqnk7rpD9zs83O38/Zf4zmuoH7zZT3DYrZMkSN/v
      eoPKLtd+37JoTd8+bcmMj9t5s0s1kqa4QQ7luQzYxO/T68I780z/yi8x+49+GZXvJp9bTSxb
      nSattbQbtXt3nB4S2zuX6M2oSWZxHAfPcYjeeIvlf/F/cOE3f53pX/mlHrlV9+x7CbD2dty1
      TTX3Jo1b2cO2lB+pneDHgVe+8x1KhYCljQ5/8/P3I8a6F7u5Qyera2TtQSoXE0VdAbBb3Z7t
      gJt0l7pEovJ5VDGP9Pa3c6s7IXf+399l8Ut/zMw/+AVm/sEvoLbRtFhrCcOQLMtI03Rz826v
      XUEIsbnf0X/1U8pKKTd5g6y1tN5+j6v/8/+KdF2e+ae/SfHS+T3/lieBYy8AK/M3uXJjjrOX
      X+TE2N7NjoedFiVrtrj1f/0bVv70a0z9zE+Qv3AOf2oSf2ocVSgg+zPKJuwDch/bu6sS6Apt
      lmHTDB2GZI0mWbuzSYploi4x1trXv0laq3P+n/4mIx998anwk+4GYbug1Wo97bY8VXwoibGA
      dKPGyldeJmv0/r5S4JSKqMLegtf7yxS2vFut0WGEiSLs/dzIpaD0/GUqn/3UofFK3QnHfgbo
      Y2lxianpqd0r9nDYZ4Ah9oZjrwSvLM7RaEcsLa3vSwCG+HDg2AuA63nkNDz3wrO7Vz6GsNZg
      2i30yh2yjdvYeB6sQlWfwzv1HCJfONRLnN0wXAKR8u1vvMrlj7xIdWTvSek+TEsgm8bo+jrZ
      2hw26WA6q0CETerYbANkHVmUiPzdkEKbaPSGQMgZVOkyzolnUZUxpB88+GaHDMd+BgBJu7bI
      zbnJAQEwacRqI0KHdUrVKVYW5hmfPoErMqRfPNLEWLpZJ73zHrpxCxPNg1lD5CJE0A2mlyPb
      f9wO9CaewpkCWMTqBeIbX8WGHlBBBidRxVM40+dR1YlDHad87AUgy2I0OcJWY6B8YXGJUKd4
      MuD2268xduky7/7gPYJSfk87wU8M1mIaG2QLV8jqV7FZC1U4gzN5ETUxg3B7ZFZRh/TmW6Sr
      r2HtLVQFRFmiNi2/7pZL7nNRIEGWXShbulw/G2j9Oum7GptUUcVncaefx5k6Dc7Bkoc/ahx7
      AXj7tVdYWq1z+rlBYqwo7FAPMwLZIj86xvz1m5TGxqn4d3eCHwQdR5g02VYqEI6Dcr2BJBV9
      mCzFpCnWaKTjIl0XsSWe1yYRpt0iW5/HtNcxnXlMeBPpNZAjClnpB7ncIpn/OuZ9F5wTIDzQ
      11FVixrvpXd/zBBKoqoSaAKvkCx+m/B9H+mfQuROoConccZPoUr7yFMAmDRFRx1MHBPW10mj
      DsZojNbEcZs4CTHbAnsEgiAokgtKeLkC+ZExhO93WSOGOoAlSTIcR92NktoDdtMBXv7u77G8
      MBjrKgBXOLjKRRlQdgsvkBRkaFKTYazBEWqznmMtI3aDBhrjtBA5EDmFI6GgwBcZBWnxJZRc
      D885XPw/22GtxYYa0zKQlRDOKMIbAXLI/DjCDbo75UkLHa7SyeosLa6yfr1BiKVjE1JPoh2J
      UQIjJVZtjXDberPN/7r8TIlGZQavGXfTTj3JH344kfLyn32F8y994pESY7Xyisbk/XiBtqMv
      eA47TcoVs8IdMUImPLbGPANb8ld3yW1Hwjqfy9cYyx1eRVwIgcg7yDxADCz2Xj0v2sRgyFjW
      KVcImJdVCn/8PYLWBp1KL4mJAIXoRq7dvfCWY7b4/OyQSy1Jsa4zFACQGB3R6jyc5+b9ELaa
      rCwu7qmuA+RchU2THi/Q4BQeeBusJTvQt0uJV8zT1hbH9/CDAO2W+WonzyfSBS4W/UOtgG5F
      nzCrlsTMJS63shJ10WORjhPU+wu0/4fPsKxmuoO8oSv8e12/uIArcDwHR6lNqpgBAQhrNUS5
      RHNtlWJ5jMB3qNVqVCqVnS65KzrNGrV2iktCIzKcP3uS61c+YHTqJCN5ybVbq+RlQvnEaW5f
      u8qz2+Jut2Nx7iYJHnnfZ3z8LkNEu1FHSwdPZGQiTzG/H0VLI5089bVl4NxD/c6d8BM24fNq
      D2xzAhwhyDng+i4UB9tuSbGUkOxsotXG0ko02oSsrNS4oS3XKlW+O3KGlfoCnyom+M7hzNFl
      rSHOIlYSw1zqsahLtMUsVig0mqQTQRuK37yKPXUeZ/X/b+9MYuQ6zjv+q6q39zrT3TOcIYeS
      aFkrFdmCYiExHMQbAvjiHGI728G+5eBDDs4hl0BBrjkFyNWXADaQxDDkFYbjJbFjy5EtSxQp
      iRxS3GZfe+9+S1Xl0AtnhhrNcJMpkX+g0Q/Vr+vVe6++Wr7l/80xJxX9rHTD19LG0O426CVN
      EqdHbDpIbw8xVtptcXFlCdembGx26dU3CasFFpbXOPn4I/vVvS+iQplGZ5kol0eLPotLV9jc
      aOHlOySNNhvbLeamyyzOv0HnELyVvV4PJ+dRX1/iVy++yBNPnURbiW96bDSbRFGOuJuwutXi
      E5/46KHCybc3G+i0Q6584/f3TggdSRDeusbD0kSwf/IOJQWlYHCdSd/lUWCh0+JHiy3mj8yw
      3WzzhLdJXlpcCYGUuHIwAgrh3DEjlrEaa64fAFKTsZVo1jKX1SygzhFSEWKBXtyjv7VEtd+j
      1NXkU4eJ0Kf+s1eZ+NOnsPECYbBN9+1mw3eAAEo5h/KEgyMh8hRiOKDsEgA3V+SxI7M01pfo
      tBIWGi2efvyDN02p2qpvsra+RbfZQEUlHjx2nKyfDB6+F/LAtIP18wQFmMwdvF6erM1QKhVY
      E5aHTjjkohBjBY5VhHFMqTRBFqZExfKhgwmjnM+Jx57BC3Z31uWFyzT7Gt1tEkYR9U6XIFel
      HBgqM3MH2gE6KcSdvVqgG4dUA2rAw0IJqDmSL7jwf0tXOJ0vU598eBBAQoZC49gEn5hQZPgk
      5JQlEJpIaiIJnoRASZwh6W5PZ3S1paEFbeOSWQilJRAZOWXxBzmnaWpByzg0MkXH+vTt9U6B
      iQhIRQhCkpmUVrNBvL1OtdPkpOdwohAR5CNMTqKRpFtdeo5L9NADGCHwHIEIJrH7arJGd+mi
      USRWERvFBi46dtHCIe07JNbFIPfXAukspdtPKOQPu5F7b6K+ucDX/u2bfOiPPsEfPnNNFbqx
      towX5ahvtuisX2Xyg49w5ewVgnzIk48/gh6mbt1p9dVakyQJYRjyk//6MUuLt5Z4z1ctXGlo
      pzcw5Yth5FcW44qUetLjMl2CQkCaNvHzHo5jsCIjKuRRcuTXPxoALNJqFBmOTbBAKgK02Os+
      veOSQ9qT/TqltZYsG8Qd9HpdOvWEuOXg9j2mgwmKbnj9TCQkFon/41/glCI6zz4zfCY9XNmh
      nR4+o+c7Yd9NsHJcCvm7y2hxJ1Cu1Jidnkbv0dn3ul36WuGqjONPfpj15SUeP/kontAkhyDG
      mg4zwpvbOo0RqQZdfXSv3ucAjMYzD2s9jtqIx2yFzEBf1ogTh147oW8h2dA0u3WyQBAn2yTK
      oLwEP69w3IxcsYiUkiTp0O90ESKg247RaYbju4S5EEyCNSkIiTYevWYX1ynQayfIJMN1fByv
      gE0zVJZRiWo8GEZMTlhCh3dYghmszujNv0H45S8gotH7UUROg25265QxcN8QBiiefu455o4f
      21U69+DuyKXcid0b5Dtv7R3Vf/NrdCFACYECPAUD3YCGaLQ7UlCZwlowtkRmoJdBJ5E02ynt
      1R79pEchf5QJq4lch8BRSGXQSHRHkKQJqdZIKYi8AD/SBMri5AbLMTkOdNt7Hwffl7m0hJya
      RES7l1LGekgSzNu4aNwo7gsA8OL//IS1p5/luQ+f/F03ZQxfbRGbvbyndwZjQZHgO1DGchQH
      KAw/cM1WYfZ8q+EHrhklbs/GOv3fV3E/+vR15bGuEKg1evrW7TbvDSXxHYXBpAat7y4KkgH1
      390TWfZuw/ZizPI68sT15GAWByFuxAiwP+4LAILZ40epVd+d0fYwEKRYu/+m815AdmoedfID
      b+szBfeJsW4jBK53QII8kzF//i1qM0fxRIYTFg8mxtKGLN0vDdI7I3JW6fQrmH3TKL3/kb54
      Cvfzn973GWoK5NxF+umt+T3dFwAMV6+sE01UYR9foM76KhNHjzB/+hxhMceTjxXH+QG0Hqx7
      jTFjV2itNZFyMOLmOrASZbQ5MeAUMnZImQLG2DGDnTFm7Ly3+3h4jmWYUE6Qut6Qa//ug8Di
      JMnYiU0IQbayQkaOsPJ7w3RHb88L5FpDSaTvQAs0ogPb//ieF4BOJ6EQxvTt/hqFoJjn/LmL
      lKePUPKu5QcYEEBJrLUopdBaj8v0D18ieeUVBALLKBfY4Y4THCS/vEb2NvgBuYPbSVrI6g3c
      iTISO/b5cVyXuS/+ObVP//Fg+SAEW7HB3ITTrzWWZn1zF/HcsJGHJKPamsQA/wAACmVJREFU
      faytxREWRyk818H3XDzXIxf4gEX3Y5b/41ssfucFPvSPX2HiY3/wjsxwYAfLxRtvyvj4nneH
      /tUvfsmRI1NcWd7gYx997tD/O8gd2qTp/pQhtwnWmAHB7I68V/H6Jle/+jXqL73M7Oc+y8zn
      Potzk8ZMYwxbW1vj2W0nE96BbbNQTwA56OxKOYS+Sy3vjYmzRtD9Psv//gKLX/sGtT/5OHNf
      +ivc8u3R8x+Ee14AmpurvDF/iUdOPs1E/vBal7s5JthaS9ZssfT1b7DywvfJPXwCZyfnkQAh
      JTIIkEGACvzBsecOBGrEUDdS4l+reH+9i2U3290wrZJkR7kxg4CWbg/d6aI7XbJ2m/ab55n6
      zKeY+9Jf4pbenY4/wntCALKh28GdxPuVGMvECe2z8wOCXRgvY6zW6DjG9GJMEt8OjeKhIRwH
      lQtRuQgnigiOze4W0HcR7wkBeDewvLjMzNGZQ59/0Axw7p/+meapM3eiqWMUn3qCR/7h7+7o
      Ne4WbP7051z616+yV1JvtfPe85vgy+ffZG27Raud3pAAHIQPfOXL10bdO4Rf/9kXsVmGcN7/
      r3HpP7/Nw3//t+Q+eOK21vv+f3IHYGbuIaaOGtRt7kQqvPPLoOLJJ2iefpPSh+4eF447AWsM
      vctXyT/xKCq4vfHO97wAeL7ge9/6ESef/QjHZ6d+p20xvR79M2dIr1xFlcs4tSqqNoVTrSAc
      B5uk6EYdXa+j6w1yUxNs//Kl970A9BeW8aqV29754b4AAA4TpZD2Hi5/HXdYqfcxvW0Kk9Os
      Li5Smz2GLzLcXOm2EmPpep3+qVPE5+axQ1uC3tggnp8f5w+Qvo/p9wd/GGpmPDKWf/ozHvib
      L95yZJc1GtPYRHgBIsztomMZ/G6wcRfT74G1yCBEBNF1590J1H/9W8q//+E7Uvc9LwBx3KHZ
      inHarV3lS6ubpDbBU3mWz55h+qmTXHh1fmgJLl1nCYbBxnhUtvrfP0Svr+GFedx8ARXlcaII
      m6TYNMGm6YBfv9EgXVi4jhtHSoVQkpHRR/f7kHaxbh2Ta5IVurjHfbpff43W979P9MlP3vhe
      wFr00iWS5ZfR7TMIp4s1AoyADLDD6ws9cPiUINTAadAaAVoMA9Mlwp9EOGVkNIP0JlDlGWR1
      GuHd+lJw6+cvMvvXn9/1rG8X7nkBOP/6K2xsd3jg8d1RVzrt0+xlBGKNwvQRrp69wOSRGYr+
      7kzxO7mErLXjspdrXZa9BoIGaIPoaGTjbV5gDtjDBSAsONriZBapDY7WlNlge7JI1/NI5TGM
      cMnRYfaER3fhu5gXFil85i+Qe0JLbdJHb28MBC7T2LiNTTqYeBPdOo0qtJFFhSwC+wa/HsZn
      sjH8XMYaS7qq0fMWxATSm0HmjqHKx1HFEiIIkUHucIRY1tI9f5HCow8jgHhznXhrg2Zrg0av
      jtEZvh/huQHSCpQYWOY1Bo0h7ndI0j6BnyP0cwROQL5YQYQhQjn31aBgydIMISXqALa3nThI
      Dfrt099kpbV0W1pYNmu0RBktrrlrJGmClJLSD07zkfw2s595hGwph1N7FptuY9MtTG8FVIwM
      LMIT4KmhoYvBaP4u+gdZY7F9jWlr0AI7pjVRCLe4ixgL/MEooLv0l65w6l++QfTlj7NqFI0g
      JM77GDW8j3Herx1JPHbmUtv5OyCMRRiL240R2t6fASDlB9/5Ho8+85HbSoxVX6hz8eJbB594
      CMyF2yz2ujg4OBl4SHJS0ZUac6LCme9ewn465uhxCfwMGQ1e+kCc7w5KFCFHZFhv1+U6ww9Y
      ewEspLrPQma4Mr9G/ckHaE9VqZhVeuqa23qapYN8ZVKNHQb3dSEfsVorgVUQlwbW+vszAJrX
      fvsq+eosD80dPln2zhnA2oHH5s4ZoN2skyXJ0Hdm4Kw2Ou+6bIdCYK0BxK4yYw1SCBSD4BiJ
      Ruo+nrJIIUitZLGXkF/axj42Rc3JxnXs9BAd1/e7LhuN0AeUGZPRSA19mUcu1yH0MOUIz8Yk
      wh8k98tShB56YMjB0tP3/OH9j97RwDN2Z4LIvWX3BeAmMRIAnfRpdfsEuQLlQm7IChHQ7faJ
      omtuEqPlRpIkuO6AbEDrDKkcjDGoHa7N1miQzjCedtCh47iP5/njTgWQpQnK9cFe63Sddosg
      yg84GoQg03ocuD/qYGmaorMMLwgGGh0p0VlKqi2B743Py9KEVFvCwN/VsTGaxIAjxbg+x1Fo
      M4gBlkKgjSHLMnx/93/7/T5BEGCM2fFMUvwd17XW0G53KRTyg9hra7BCoXa5ggvSNCPLMsIw
      HP837vdQro+j5Lis3+uiXB/XUbvakiQJ6vnnn3/+TnWS9zOstaRpitUZSZrheD6B76G15vy5
      s0S5iLcuLTBVqyKE4Orli3S6PS5dXWRmegohBG++foZenLK+sU61UkEIweunT7G0tk6r3aFW
      HZS9+dpveeP8JUqTVaLAH5SdO8fG+gr1ZpdadRKs4c2zZ2lsb1Fv96lWJsCk/OaVU+gsQ7o+
      geeCTnjt1GusrK3SM4pKuQC6z+lTr7GwsoJxcpQLIWQ9Tr1xETdrspW6lPMB6Jj5C5eJGyus
      9j1qpQiSOq+8fhkZb7ISh1SLAaa/xUu/OUN9a40srFIKXXTc4aWXT7G4tMTMzCyOknQ2F7i0
      vMGVy5cJyjVyvkNzY5GLV5dZXV0lmpgidBXry5dYWGvQ73XJ5wsoKVlfvMzrZy+w0WhSqdZw
      lWRt4TJvvHWZjY1NpqamUFKyfOk8Hetw6a0LzByZRgjB9toK6/UmZ89fuC8AN4uRABSLJVrN
      bRaW1jgyXUNrTamQp95qM31kBt8bjPaeHzA5OUmxkB/PALl8gclSAaE8oqHlOF8oMnfsKL7v
      4/uD9Xtl6giuI6kNhQQgcCW5UoWJUhnPc0CApySZFRw/PjcYLYWgUCpTq1bx3CELnJAoJSmV
      y1SrVVwlQSjAMvfAg+SjAEcpEA5KZMSpIVcsEfkuSEUUhUyW8qS4FEIPpE+5lMeVBuvkKYQu
      OD6VSo1qwce4OXKeQjoes9NVMBleroTnSNwgj0lTKhNFvDCH70i8sECW9HA9n3K5hKMkyvGo
      VKv4jkAoDyUFYRTheh4SmJiYQElBEPhI5VEu5olyOaQQ+K7kwqUFSqUSkxMDnhqhY3rGo1rO
      398E3ypazW1WVlYp1a7RquSKZXLF3aRAI6/Rna7So+PqpH9dWXGHd6QQgmPH5nbVVyhNshuC
      4kSF4sSO2GYhKe6NBRCC2vSR68qmZ3fTwmBTVtY2qeQV69ttKoUQdML8+beoRtD0Z5mZzIGJ
      OX/+ItVI04qKwOi8i0wGKUmpQC3vouM2r88vkHP6bHUS8oFD2m+zttXEsx0KXplC4BC3t9lq
      JYi0Sbt/lMBVmKTLxYVV0m6dBx95Cs+RdBuDma7TrJNpi6ugU9+i09fUN9eoVGuAYH1tg7m5
      Wc6eu8DDDz0AwPrGFl5xgnPnL93fA9wsRnsAV1quLCyTK1eYmizdFfEAtwvW2mvBXyMtyiHK
      9napu6VsZ3tH+H/qKJatOvcZIQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Generation (Absolute) by Type' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Generation (Percentage) by Type' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Load' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Load (2)' width='192'>
      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
    </thumbnail>
    <thumbnail height='384' name='Load Duration Day Summary' width='384'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Load Duration Night Summary' width='384'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='Load Duration med-day-flex' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Load Duration med-day-inflex' width='384'>
      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
      4YkPtX2u7X8BG0GZqlUhcAwAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Load Duration med-night-flex' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Load Duration med-night-inflex' width='384'>
      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
    </thumbnail>
    <thumbnail height='192' name='Price' width='192'>
      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
      YpRaf9RVAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Price (table)' width='192'>
      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
    </thumbnail>
    <thumbnail height='384' name='State of Charge' width='384'>
      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
      BPv62ZMOSjMAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Weighted Load' width='384'>
      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
      MX+JiD8ALlK2Ox3LJksAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
