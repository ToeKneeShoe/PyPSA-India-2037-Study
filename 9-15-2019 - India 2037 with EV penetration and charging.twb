<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20194.20.0221.0754                               -->
<workbook original-version='18.1' source-build='2019.4.4 (20194.20.0221.0754)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='tab_dam_generator_power_combined' inline='true' name='federated.0m2ojda1ih48r312ma38r1hlijh9' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='tab_dam_generator_power_combined' name='textscan.0yqfx1x1ihmfyd180dyq61xv4d9s'>
            <connection class='textscan' directory='D:/Research-Local/8-23-2019-power-systems/simulation_outputs/combined-outputs' filename='tab_dam_demand_response_load_combined.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation all='true' name='tab_dam_generator_power_combined.csv+' type='union'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='Zone' />
            <column datatype='string' name='Attribute' />
            <column datatype='real' name='Value' />
            <column datatype='string' name='Timeblock' />
            <column datatype='string' name='Scenario' />
            <column datatype='string' name='Resource' />
            <column datatype='string' name='Table Name' />
          </columns>
          <relation connection='textscan.0yqfx1x1ihmfyd180dyq61xv4d9s' name='tab_dam_demand_response_load_combined.csv' table='[tab_dam_demand_response_load_combined#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='Zone' ordinal='0' />
              <column datatype='string' name='Attribute' ordinal='1' />
              <column datatype='real' name='Value' ordinal='2' />
              <column datatype='string' name='Timeblock' ordinal='3' />
              <column datatype='string' name='Scenario' ordinal='4' />
            </columns>
          </relation>
          <relation connection='textscan.0yqfx1x1ihmfyd180dyq61xv4d9s' name='tab_dam_generator_power_combined.csv' table='[tab_dam_generator_power_combined#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='Resource' ordinal='0' />
              <column datatype='integer' name='Zone' ordinal='1' />
              <column datatype='string' name='Attribute' ordinal='2' />
              <column datatype='real' name='Value' ordinal='3' />
              <column datatype='string' name='Timeblock' ordinal='4' />
              <column datatype='string' name='Scenario' ordinal='5' />
            </columns>
          </relation>
          <relation connection='textscan.0yqfx1x1ihmfyd180dyq61xv4d9s' name='tab_dam_loads_combined.csv' table='[tab_dam_loads_combined#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='Zone' ordinal='0' />
              <column datatype='string' name='Attribute' ordinal='1' />
              <column datatype='real' name='Value' ordinal='2' />
              <column datatype='string' name='Timeblock' ordinal='3' />
              <column datatype='string' name='Scenario' ordinal='4' />
            </columns>
          </relation>
          <relation connection='textscan.0yqfx1x1ihmfyd180dyq61xv4d9s' name='tab_dam_prices_combined.csv' table='[tab_dam_prices_combined#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='Zone' ordinal='0' />
              <column datatype='string' name='Attribute' ordinal='1' />
              <column datatype='real' name='Value' ordinal='2' />
              <column datatype='string' name='Timeblock' ordinal='3' />
              <column datatype='string' name='Scenario' ordinal='4' />
            </columns>
          </relation>
          <relation connection='textscan.0yqfx1x1ihmfyd180dyq61xv4d9s' name='tab_dam_storage_unit_soc_combined.csv' table='[tab_dam_storage_unit_soc_combined#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='Resource' ordinal='0' />
              <column datatype='integer' name='Zone' ordinal='1' />
              <column datatype='string' name='Attribute' ordinal='2' />
              <column datatype='real' name='Value' ordinal='3' />
              <column datatype='string' name='Timeblock' ordinal='4' />
              <column datatype='string' name='Scenario' ordinal='5' />
            </columns>
          </relation>
          <relation connection='textscan.0yqfx1x1ihmfyd180dyq61xv4d9s' name='tab_dam_storage_unit_power_combined.csv' table='[tab_dam_storage_unit_power_combined#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='Resource' ordinal='0' />
              <column datatype='integer' name='Zone' ordinal='1' />
              <column datatype='string' name='Attribute' ordinal='2' />
              <column datatype='real' name='Value' ordinal='3' />
              <column datatype='string' name='Timeblock' ordinal='4' />
              <column datatype='string' name='Scenario' ordinal='5' />
            </columns>
          </relation>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[tab_dam_generator_power_combined.csv+]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Zone</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Zone]</local-name>
            <parent-name>[tab_dam_generator_power_combined.csv+]</parent-name>
            <remote-alias>Zone</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Attribute</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Attribute]</local-name>
            <parent-name>[tab_dam_generator_power_combined.csv+]</parent-name>
            <remote-alias>Attribute</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Value]</local-name>
            <parent-name>[tab_dam_generator_power_combined.csv+]</parent-name>
            <remote-alias>Value</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Timeblock</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Timeblock]</local-name>
            <parent-name>[tab_dam_generator_power_combined.csv+]</parent-name>
            <remote-alias>Timeblock</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Scenario</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Scenario]</local-name>
            <parent-name>[tab_dam_generator_power_combined.csv+]</parent-name>
            <remote-alias>Scenario</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Resource</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Resource]</local-name>
            <parent-name>[tab_dam_generator_power_combined.csv+]</parent-name>
            <remote-alias>Resource</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Table Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Table Name]</local-name>
            <parent-name>[tab_dam_generator_power_combined.csv+]</parent-name>
            <remote-alias>Table Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Charging Time' datatype='string' name='[Calculation_1086493432799272960]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-evening-&quot;) THEN&#13;&#10;  &quot;12-6 PM&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-morning&quot;) THEN&#13;&#10;  &quot;12-6 AM&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
      </column>
      <column caption='Charging Type' datatype='string' name='[Calculation_1086493432799367169]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-flexible&quot;) THEN&#13;&#10;  &quot;Flexible&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-inflexible&quot;) THEN&#13;&#10;  &quot;Inflexible&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
      </column>
      <column caption='EV Adoption Level' datatype='string' name='[Calculation_1086493432800079874]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;low-&quot;) THEN&#13;&#10;  &quot;Low&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;med-&quot;) THEN&#13;&#10;  &quot;Med&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;high-&quot;) THEN&#13;&#10;  &quot;High&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
      </column>
      <column caption='Representative Days' datatype='datetime' name='[Calculation_1086493432800321539]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='IF [Timeblock]==&quot;t1&quot; THEN DATEPARSE(&quot;dd.MMMM.yyyy&quot;,&quot;21.April.2037&quot;)&#13;&#10;ELSEIF [Timeblock]==&quot;t2&quot; THEN DATEPARSE(&quot;dd.MMMM.yyyy&quot;,&quot;15.June.2037&quot;)&#13;&#10;ELSEIF [Timeblock]==&quot;t3&quot; THEN DATEPARSE(&quot;dd.MMMM.yyyy&quot;,&quot;13.October.2037&quot;)&#13;&#10;ELSEIF [Timeblock]==&quot;t4&quot; THEN DATEPARSE(&quot;dd.MMMM.yyyy&quot;,&quot;12.December.2037&quot;)&#13;&#10;END' />
      </column>
      <column caption='Time Interval' datatype='string' name='[Calculation_1086493432800645124]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Timeblock]==&quot;t1&quot; THEN&#13;&#10;  [Attribute]&#13;&#10;ELSEIF [Timeblock]==&quot;t2&quot; THEN&#13;&#10;  &quot;t&quot;+STR(INT(RIGHT([Attribute],LEN([Attribute])-1)))&#13;&#10;ELSEIF [Timeblock]==&quot;t3&quot; THEN&#13;&#10;  &quot;t&quot;+STR(INT(RIGHT([Attribute],LEN([Attribute])-1)))&#13;&#10;ELSE&#13;&#10;  &quot;t&quot;+STR(INT(RIGHT([Attribute],LEN([Attribute])-1)))&#13;&#10;END' />
      </column>
      <column caption='Net Generation [MW]' datatype='real' name='[Calculation_202099068255866880]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_generator_power_combined.csv&quot; THEN&#13;&#10;  IF [Resource]==&quot;Curtailment&quot; THEN&#13;&#10;    -1*Value&#13;&#10;  ELSEIF [Resource]==&quot;Solar&quot; THEN&#13;&#10;    0*[Value]&#13;&#10;  ELSEIF [Resource]==&quot;Wind&quot; THEN&#13;&#10;    0*[Value]&#13;&#10;  ELSE&#13;&#10;    [Value]&#13;&#10;  END&#13;&#10;&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; THEN&#13;&#10;  IF [Value]&lt;0 THEN&#13;&#10;    0*[Value]&#13;&#10;  ELSE&#13;&#10;    [Value]&#13;&#10;  END&#13;&#10;END' />
      </column>
      <column caption='VRE Addition' datatype='string' name='[Calculation_803611097201504256]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;wind&quot;) THEN&#13;&#10;  &quot;Added Wind&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;solar&quot;) THEN&#13;&#10;  &quot;Added Solar&quot;&#13;&#10;ELSE&#13;&#10;  &quot;Default VRE&quot;&#13;&#10;END' />
      </column>
      <column caption='Generation for Load [MW]' datatype='real' name='[Calculation_884112924427558912]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_generator_power_combined.csv&quot; THEN&#13;&#10;  IF [Resource]==&quot;Curtailment&quot; THEN&#13;&#10;    -1*Value&#13;&#10;  ELSE&#13;&#10;    [Value]&#13;&#10;  END&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; THEN&#13;&#10;  [Value]&#13;&#10;END' />
      </column>
      <column caption='Generation Labels' datatype='string' name='[Calculation_884112924428046337]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_generator_power_combined.csv&quot; THEN&#13;&#10;  [Resource]&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&gt;=0 THEN&#13;&#10;  [Resource]&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&lt;0 THEN&#13;&#10;   [Resource]+&quot; Charging&quot;&#13;&#10;END' />
      </column>
      <column caption='Weighted Generation for Load [MW]' datatype='real' name='[Calculation_884112924430045186]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_931963670410043401]*[Calculation_884112924427558912]' />
      </column>
      <column caption='Charging [MW]' datatype='real' name='[Calculation_884112924457828355]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&lt;0 THEN&#13;&#10;  [Value]&#13;&#10;ELSE&#13;&#10;  0&#13;&#10;END' />
      </column>
      <column caption='Date Time' datatype='datetime' name='[Calculation_889179474267987968]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATEADD(&apos;hour&apos;,INT(RIGHT([Calculation_1086493432800645124],LEN([Calculation_1086493432800645124])-1))-1,[Calculation_1086493432800321539])' />
      </column>
      <column caption='Price' datatype='real' name='[Calculation_889179474271539201]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_prices_combined.csv&quot; THEN&#13;&#10;  [Value]&#13;&#10;END' />
      </column>
      <column caption='Storage Level' datatype='real' name='[Calculation_889179474278793218]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_storage_unit_soc_combined.csv&quot; THEN&#13;&#10;  [Value]&#13;&#10;END' />
      </column>
      <column caption='Max Storage Level' datatype='real' name='[Calculation_889179474279444483]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_storage_unit_soc_combined.csv&quot; THEN&#13;&#10;  {FIXED [Resource],[Zone]: MAX([Value])}&#13;&#10;END' />
      </column>
      <column caption='State of Charge' datatype='real' name='[Calculation_889179474279563268]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_889179474278793218]/[Calculation_889179474279444483]' />
      </column>
      <column caption='Weighted State of Charge' datatype='real' name='[Calculation_889179474279690245]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='Sum([Calculation_889179474279563268]*[Calculation_889179474279444483])/SUM([Calculation_889179474279444483])' />
      </column>
      <column caption='Storage Label' datatype='string' name='[Calculation_889179474280439814]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_storage_unit_soc_combined.csv&quot; THEN&#13;&#10;  [Resource]&#13;&#10;END' />
      </column>
      <column caption='Total Generation [MW]' datatype='real' name='[Calculation_918452871620472832]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_generator_power_combined.csv&quot; THEN&#13;&#10;  IF [Resource]==&quot;Unmet Demand&quot; OR [Resource]==&quot;Curtailment&quot; THEN&#13;&#10;    0*[Value]&#13;&#10;  ELSE&#13;&#10;    [Value]&#13;&#10;  END&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&gt;=0 THEN&#13;&#10;  [Value]&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&lt;0 THEN&#13;&#10;  0*[Value]&#13;&#10;END' />
      </column>
      <column caption='Inflexible Load [MW]' datatype='real' name='[Calculation_931963670409289734]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_loads_combined.csv&quot; THEN&#13;&#10;  [Value]&#13;&#10;ELSE&#13;&#10;  0&#13;&#10;END' />
      </column>
      <column caption='Flexible Load [MW]' datatype='real' name='[Calculation_931963670409551879]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_demand_response_load_combined.csv&quot; THEN&#13;&#10;  [Value]&#13;&#10;ELSE&#13;&#10;  0&#13;&#10;END' />
      </column>
      <column caption='Load Labels' datatype='string' name='[Calculation_931963670409670664]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_loads_combined.csv&quot; THEN&#13;&#10;  &quot;Inflexible&quot;&#13;&#10;ELSEIF [Table Name]==&quot;tab_dam_demand_response_load_combined.csv&quot; THEN&#13;&#10;  &quot;Flexible&quot;&#13;&#10;ELSEIF [Table Name]==&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&lt;0 THEN&#13;&#10;  &quot;Charging&quot;&#13;&#10;END' />
      </column>
      <column caption='Weights' datatype='real' name='[Calculation_931963670410043401]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Timeblock]&#13;&#10;  WHEN &quot;t1&quot; THEN 36 &#13;&#10;  WHEN &quot;t2&quot; THEN 14&#13;&#10;  WHEN &quot;t3&quot; THEN 9.18368717&#13;&#10;  WHEN &quot;t4&quot; THEN 13&#13;&#10;END' />
      </column>
      <column caption='Total Load [MW]' datatype='real' name='[Calculation_931963670410522634]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_931963670409551879]+[Calculation_931963670409289734]-[Calculation_884112924457828355]' />
      </column>
      <column caption='Weighted Load [MW]' datatype='real' name='[Calculation_931963670410706955]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_931963670410043401]*[Calculation_931963670410522634]' />
      </column>
      <column caption='Generation Labels (group)' datatype='string' name='[Generation Labels (group) (copy)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Calculation_884112924428046337]' new-bin='true'>
          <bin default-name='false' value='&quot;Batteries&quot;'>
            <value>&quot;Batteries&quot;</value>
            <value>&quot;Batteries Charging&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;CCGT&quot;'>
            <value>&quot;CCGT New&quot;</value>
            <value>&quot;CCGT Old&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Coal&quot;'>
            <value>&quot;Coal new&quot;</value>
            <value>&quot;Coal Old&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Diesel&quot;'>
            <value>&quot;Backup&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Hydro&quot;'>
            <value>&quot;Hydro Reservoir&quot;</value>
            <value>&quot;Hydro Reservoir Charging&quot;</value>
            <value>&quot;Hydro Run of River&quot;</value>
            <value>&quot;Pumped Hydro Storage&quot;</value>
            <value>&quot;Pumped Hydro Storage Charging&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Nuclear&quot;'>
            <value>&quot;Nuclear New&quot;</value>
            <value>&quot;Nuclear Old&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Other &quot;'>
            <value>&quot;Biomass&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Solar&quot;'>
            <value>&quot;Curtailment&quot;</value>
            <value>&quot;Solar&quot;</value>
          </bin>
        </calculation>
      </column>
      <column caption='Generation Labels with Charging (group)' datatype='string' name='[Generation Labels (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Calculation_884112924428046337]' new-bin='true'>
          <bin default-name='false' value='&quot;CCGT&quot;'>
            <value>&quot;CCGT New&quot;</value>
            <value>&quot;CCGT Old&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Coal&quot;'>
            <value>&quot;Coal new&quot;</value>
            <value>&quot;Coal Old&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Diesel&quot;'>
            <value>&quot;Backup&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Hydro&quot;'>
            <value>&quot;Hydro Reservoir&quot;</value>
            <value>&quot;Hydro Run of River&quot;</value>
            <value>&quot;Pumped Hydro Storage&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Nuclear&quot;'>
            <value>&quot;Nuclear New&quot;</value>
            <value>&quot;Nuclear Old&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Other &quot;'>
            <value>&quot;Biomass&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Solar&quot;'>
            <value>&quot;Curtailment&quot;</value>
            <value>&quot;Solar&quot;</value>
          </bin>
        </calculation>
      </column>
      <column caption='Generation for Load (no charging) [MW]' datatype='real' name='[Generation for Load [MW]] (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_generator_power_combined.csv&quot; THEN&#13;&#10;  IF [Resource]==&quot;Curtailment&quot; THEN&#13;&#10;    -1*Value&#13;&#10;  ELSE&#13;&#10;    [Value]&#13;&#10;  END&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; THEN&#13;&#10;  IF [Value]&lt;0 THEN&#13;&#10;    0*[Value]&#13;&#10;  ELSE&#13;&#10;    [Value]&#13;&#10;  END&#13;&#10;END' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='5-day time period' datatype='string' name='[Representative Days (copy)]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Timeblock]==&quot;t1&quot; THEN &quot;April 21-25&quot;&#13;&#10;ELSEIF [Timeblock]==&quot;t2&quot; THEN &quot;June 15-19&quot;&#13;&#10;ELSEIF [Timeblock]==&quot;t3&quot; THEN &quot;October 13-17&quot;&#13;&#10;ELSEIF [Timeblock]==&quot;t4&quot; THEN &quot;December 12-16&quot;&#13;&#10;END' />
      </column>
      <column datatype='string' name='[Resource]' role='dimension' type='nominal' />
      <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
      <column datatype='real' name='[Value]' role='measure' type='quantitative' />
      <column caption='Weighted Generation for Dispatch [MW]' datatype='real' name='[Weighted Generation for Load [MW]] (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_931963670410043401]*[Calculation_918452871620472832]' />
      </column>
      <column aggregation='Sum' datatype='integer' name='[Zone]' role='dimension' type='ordinal' />
      <column-instance column='[Calculation_889179474271539201]' derivation='Avg' name='[avg:Calculation_889179474271539201:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_889179474271539201]' derivation='Max' name='[max:Calculation_889179474271539201:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_889179474271539201]' derivation='Min' name='[min:Calculation_889179474271539201:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_884112924428046337]' derivation='None' name='[none:Calculation_884112924428046337:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_889179474280439814]' derivation='None' name='[none:Calculation_889179474280439814:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_931963670409670664]' derivation='None' name='[none:Calculation_931963670409670664:nk]' pivot='key' type='nominal' />
      <column-instance column='[Resource]' derivation='None' name='[none:Resource:nk]' pivot='key' type='nominal' />
      <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_884112924430045186]' derivation='Sum' name='[pcto:sum:Calculation_884112924430045186:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_884112924430045186]' derivation='Sum' name='[pcto:sum:Calculation_884112924430045186:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_202099068255866880]' derivation='Sum' name='[sum:Calculation_202099068255866880:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_884112924427558912]' derivation='Sum' name='[sum:Calculation_884112924427558912:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_884112924430045186]' derivation='Sum' name='[sum:Calculation_884112924430045186:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_884112924457828355]' derivation='Sum' name='[sum:Calculation_884112924457828355:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_889179474271539201]' derivation='Sum' name='[sum:Calculation_889179474271539201:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_889179474278793218]' derivation='Sum' name='[sum:Calculation_889179474278793218:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_889179474279444483]' derivation='Sum' name='[sum:Calculation_889179474279444483:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_889179474279563268]' derivation='Sum' name='[sum:Calculation_889179474279563268:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_918452871620472832]' derivation='Sum' name='[sum:Calculation_918452871620472832:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_931963670409289734]' derivation='Sum' name='[sum:Calculation_931963670409289734:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_931963670409551879]' derivation='Sum' name='[sum:Calculation_931963670409551879:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_931963670410043401]' derivation='Sum' name='[sum:Calculation_931963670410043401:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_931963670410522634]' derivation='Sum' name='[sum:Calculation_931963670410522634:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_931963670410706955]' derivation='Sum' name='[sum:Calculation_931963670410706955:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Generation for Load [MW]] (copy)]' derivation='Sum' name='[sum:Generation for Load [MW]] (copy):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Value]' derivation='Sum' name='[sum:Value:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Weighted Generation for Load [MW]] (copy)]' derivation='Sum' name='[sum:Weighted Generation for Load [MW]] (copy):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_889179474279690245]' derivation='User' name='[usr:Calculation_889179474279690245:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.5' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Calculation_884112924428046337:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Coal Old&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Biomass&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hydro Run of River&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Curtailment&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;CCGT New&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Unmet Demand&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Backup&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pumped Hydro Storage Charging&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;CCGT Old&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nuclear New&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nuclear Old&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Solar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Wind&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hydro Reservoir&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Coal new&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Batteries&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pumped Hydro Storage&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hydro Reservoir Charging&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Batteries Charging&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Scenario:nk]' type='palette'>
            <map to='#000000'>
              <bucket>&quot;default-L-H-8-1275&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;real-high-morning-L-H-8-1275-solar-added-flexible&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;real-med-evening-L-H-8-1275-wind-added-flexible&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;real-high-evening-L-H-8-1275-flexible&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;real-low-morning-L-H-8-1275-solar-added-flexible&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;real-high-evening-L-H-8-1275-wind-added-flexible&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;real-med-evening-L-H-8-1275-flexible&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;real-low-evening-L-H-8-1275-flexible&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;real-med-morning-L-H-8-1275-solar-added-flexible&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;real-high-morning-L-H-8-1275-solar-added-inflexible&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;real-med-evening-L-H-8-1275-wind-added-inflexible&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;real-high-evening-L-H-8-1275-wind-added-inflexible&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;real-med-evening-L-H-8-1275-inflexible&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;real-low-morning-L-H-8-1275-flexible&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;real-high-evening-L-H-8-1275-inflexible&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;real-low-morning-L-H-8-1275-solar-added-inflexible&quot;</bucket>
            </map>
            <map to='#ae123a'>
              <bucket>&quot;med-night-L-H-8-1275-inflexible&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;real-low-evening-L-H-8-1275-wind-added-flexible&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;real-high-morning-L-H-8-1275-flexible&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;real-med-evening-L-H-8-1275-solar-added-flexible&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;real-low-evening-L-H-8-1275-inflexible&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;real-med-morning-L-H-8-1275-solar-added-inflexible&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;real-low-evening-L-H-8-1275-solar-added-flexible&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;real-med-morning-L-H-8-1275-wind-added-flexible&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;real-low-evening-L-H-8-1275-wind-added-inflexible&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;real-low-morning-L-H-8-1275-inflexible&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;real-high-morning-L-H-8-1275-wind-added-flexible&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;real-med-morning-L-H-8-1275-flexible&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;real-high-morning-L-H-8-1275-inflexible&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;real-med-evening-L-H-8-1275-solar-added-inflexible&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;real-high-evening-L-H-8-1275-solar-added-flexible&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;real-low-morning-L-H-8-1275-wind-added-flexible&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;real-low-evening-L-H-8-1275-solar-added-inflexible&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;real-med-morning-L-H-8-1275-wind-added-inflexible&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;real-high-morning-L-H-8-1275-wind-added-inflexible&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;real-med-morning-L-H-8-1275-inflexible&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;real-high-evening-L-H-8-1275-solar-added-inflexible&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;real-low-morning-L-H-8-1275-wind-added-inflexible&quot;</bucket>
            </map>
            <map to='#ffbeb2'>
              <bucket>&quot;med-night-L-H-8-1275-flexible&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_889179474280439814:nk]' type='palette'>
            <map to='#43719f'>
              <bucket>&quot;Pumped Hydro Storage&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>&quot;Hydro Reservoir&quot;</bucket>
            </map>
            <map to='#d3d3d3'>
              <bucket>&quot;Batteries&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Resource:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Curtailment&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;CCGT New&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nuclear Old&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hydro Reservoir&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;CCGT Old&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Backup&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Wind&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Coal new&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pumped Hydro Storage&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Solar&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hydro Run of River&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Unmet Demand&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Coal Old&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Batteries&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nuclear New&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Biomass&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_931963670409670664:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Charging&quot;</bucket>
            </map>
            <map to='#5c6068'>
              <bucket>&quot;Inflexible&quot;</bucket>
            </map>
            <map to='#b3b7b8'>
              <bucket>&quot;Flexible&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Generation Labels (group) (copy)]' type='palette'>
            <map to='#000000'>
              <bucket>&quot;Diesel&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hydro&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Wind&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Batteries&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Coal&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nuclear&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;Unmet Demand&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Other &quot;</bucket>
            </map>
            <map to='#f0bd27'>
              <bucket>&quot;Solar&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;CCGT&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Resource&quot;</bucket>
            </map>
            <map to='#ffda66'>
              <bucket>&quot;Curtailment&quot;</bucket>
            </map>
            <map to='#ffffff'>
              <bucket>%null%</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#000000'>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_931963670409289734:qk]&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_889179474279444483:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Value:qk]&quot;</bucket>
            </map>
            <map to='#767f8b'>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_931963670410522634:qk]&quot;</bucket>
            </map>
            <map to='#767f8b'>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_931963670410706955:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_889179474278793218:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_884112924457828355:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[usr:Calculation_889179474279690245:qk]&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[avg:Calculation_889179474271539201:qk]&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[max:Calculation_889179474271539201:qk]&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[min:Calculation_889179474271539201:qk]&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_889179474271539201:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_931963670409551879:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Weighted Generation for Load [MW]] (copy):qk]&quot;</bucket>
            </map>
            <map to='#d3d3d3'>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_918452871620472832:qk]&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_931963670410043401:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[pcto:sum:Calculation_884112924430045186:qk:2]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[pcto:sum:Calculation_884112924430045186:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_202099068255866880:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_884112924427558912:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_884112924430045186:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Generation for Load [MW]] (copy):qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_889179474279563268:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Generation Labels (group)]' type='palette'>
            <map to='#000000'>
              <bucket>&quot;Diesel&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Coal Old&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hydro&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Biomass&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Wind&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Batteries&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hydro Run of River&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;CCGT New&quot;</bucket>
            </map>
            <map to='#92c0df'>
              <bucket>&quot;Hydro Reservoir Charging&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Coal&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Backup&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nuclear&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;CCGT Old&quot;</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>&quot;Pumped Hydro Storage Charging&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nuclear New&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Other &quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nuclear Old&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Resource&quot;</bucket>
            </map>
            <map to='#d5d5d5'>
              <bucket>&quot;Batteries Charging&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hydro Reservoir&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Unmet Demand&quot;</bucket>
            </map>
            <map to='#f0bd27'>
              <bucket>&quot;Solar&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Coal new&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;CCGT&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Curtailment&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pumped Hydro Storage&quot;</bucket>
            </map>
            <map to='#ffffff'>
              <bucket>%null%</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Annual Generation (Absolute) by Type'>
      <table>
        <view>
          <datasources>
            <datasource caption='tab_dam_generator_power_combined' name='federated.0m2ojda1ih48r312ma38r1hlijh9' />
          </datasources>
          <datasource-dependencies datasource='federated.0m2ojda1ih48r312ma38r1hlijh9'>
            <column caption='Charging Time' datatype='string' name='[Calculation_1086493432799272960]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-evening-&quot;) THEN&#13;&#10;  &quot;12-6 PM&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-morning&quot;) THEN&#13;&#10;  &quot;12-6 AM&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='Charging Type' datatype='string' name='[Calculation_1086493432799367169]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-flexible&quot;) THEN&#13;&#10;  &quot;Flexible&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-inflexible&quot;) THEN&#13;&#10;  &quot;Inflexible&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='EV Adoption Level' datatype='string' name='[Calculation_1086493432800079874]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;low-&quot;) THEN&#13;&#10;  &quot;Low&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;med-&quot;) THEN&#13;&#10;  &quot;Med&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;high-&quot;) THEN&#13;&#10;  &quot;High&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='VRE Addition' datatype='string' name='[Calculation_803611097201504256]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;wind&quot;) THEN&#13;&#10;  &quot;Added Wind&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;solar&quot;) THEN&#13;&#10;  &quot;Added Solar&quot;&#13;&#10;ELSE&#13;&#10;  &quot;Default VRE&quot;&#13;&#10;END' />
            </column>
            <column caption='Generation for Load [MW]' datatype='real' name='[Calculation_884112924427558912]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_generator_power_combined.csv&quot; THEN&#13;&#10;  IF [Resource]==&quot;Curtailment&quot; THEN&#13;&#10;    -1*Value&#13;&#10;  ELSE&#13;&#10;    [Value]&#13;&#10;  END&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; THEN&#13;&#10;  [Value]&#13;&#10;END' />
            </column>
            <column caption='Generation Labels' datatype='string' name='[Calculation_884112924428046337]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_generator_power_combined.csv&quot; THEN&#13;&#10;  [Resource]&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&gt;=0 THEN&#13;&#10;  [Resource]&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&lt;0 THEN&#13;&#10;   [Resource]+&quot; Charging&quot;&#13;&#10;END' />
            </column>
            <column caption='Weighted Generation for Load [MW]' datatype='real' name='[Calculation_884112924430045186]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_931963670410043401]*[Calculation_884112924427558912]' />
            </column>
            <column caption='Weights' datatype='real' name='[Calculation_931963670410043401]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Timeblock]&#13;&#10;  WHEN &quot;t1&quot; THEN 36 &#13;&#10;  WHEN &quot;t2&quot; THEN 14&#13;&#10;  WHEN &quot;t3&quot; THEN 9.18368717&#13;&#10;  WHEN &quot;t4&quot; THEN 13&#13;&#10;END' />
            </column>
            <column caption='Generation Labels (group)' datatype='string' name='[Generation Labels (group) (copy)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Calculation_884112924428046337]' new-bin='true'>
                <bin default-name='false' value='&quot;Batteries&quot;'>
                  <value>&quot;Batteries&quot;</value>
                  <value>&quot;Batteries Charging&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;CCGT&quot;'>
                  <value>&quot;CCGT New&quot;</value>
                  <value>&quot;CCGT Old&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Coal&quot;'>
                  <value>&quot;Coal new&quot;</value>
                  <value>&quot;Coal Old&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Diesel&quot;'>
                  <value>&quot;Backup&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Hydro&quot;'>
                  <value>&quot;Hydro Reservoir&quot;</value>
                  <value>&quot;Hydro Reservoir Charging&quot;</value>
                  <value>&quot;Hydro Run of River&quot;</value>
                  <value>&quot;Pumped Hydro Storage&quot;</value>
                  <value>&quot;Pumped Hydro Storage Charging&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Nuclear&quot;'>
                  <value>&quot;Nuclear New&quot;</value>
                  <value>&quot;Nuclear Old&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Other &quot;'>
                  <value>&quot;Biomass&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Solar&quot;'>
                  <value>&quot;Curtailment&quot;</value>
                  <value>&quot;Solar&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='5-day time period' datatype='string' name='[Representative Days (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Timeblock]==&quot;t1&quot; THEN &quot;April 21-25&quot;&#13;&#10;ELSEIF [Timeblock]==&quot;t2&quot; THEN &quot;June 15-19&quot;&#13;&#10;ELSEIF [Timeblock]==&quot;t3&quot; THEN &quot;October 13-17&quot;&#13;&#10;ELSEIF [Timeblock]==&quot;t4&quot; THEN &quot;December 12-16&quot;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Resource]' role='dimension' type='nominal' />
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Timeblock]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1086493432799272960]' derivation='None' name='[none:Calculation_1086493432799272960:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1086493432799367169]' derivation='None' name='[none:Calculation_1086493432799367169:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1086493432800079874]' derivation='None' name='[none:Calculation_1086493432800079874:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_803611097201504256]' derivation='None' name='[none:Calculation_803611097201504256:nk]' pivot='key' type='nominal' />
            <column-instance column='[Representative Days (copy)]' derivation='None' name='[none:Representative Days (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_884112924430045186]' derivation='Sum' name='[pcto:sum:Calculation_884112924430045186:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_884112924430045186]' derivation='Sum' name='[sum:Calculation_884112924430045186:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group) (copy)]' direction='ASC'>
            <dictionary>
              <bucket>%null%</bucket>
              <bucket>&quot;Unmet Demand&quot;</bucket>
              <bucket>&quot;Curtailment&quot;</bucket>
              <bucket>&quot;Solar&quot;</bucket>
              <bucket>&quot;Wind&quot;</bucket>
              <bucket>&quot;Batteries&quot;</bucket>
              <bucket>&quot;Diesel&quot;</bucket>
              <bucket>&quot;Other &quot;</bucket>
              <bucket>&quot;CCGT&quot;</bucket>
              <bucket>&quot;Hydro&quot;</bucket>
              <bucket>&quot;Coal&quot;</bucket>
              <bucket>&quot;Nuclear&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_1086493432799272960:nk]' member='&quot;12-6 AM&quot;' />
              <groupfilter function='member' level='[none:Calculation_1086493432799272960:nk]' member='&quot;12-6 PM&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_1086493432799367169:nk]' member='&quot;Flexible&quot;' />
              <groupfilter function='member' level='[none:Calculation_1086493432799367169:nk]' member='&quot;Inflexible&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_1086493432800079874:nk]' />
          </filter>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;None&quot;</bucket>
              <bucket>&quot;Med&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_803611097201504256:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_803611097201504256:nk]' />
          </filter>
          <filter class='categorical' column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Representative Days (copy):nk]'>
            <groupfilter function='member' level='[none:Representative Days (copy):nk]' member='&quot;December 12-16&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]'>
            <groupfilter from='&quot;real-high-evening-L-H-8-1275-flexible&quot;' function='range' level='[none:Scenario:nk]' to='&quot;real-med-morning-L-H-8-1275-inflexible&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]</column>
            <column>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk]</column>
            <column>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk]</column>
            <column>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Representative Days (copy):nk]</column>
            <column>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]</column>
            <column>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_803611097201504256:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0m2ojda1ih48r312ma38r1hlijh9].[pcto:sum:Calculation_884112924430045186:qk:2]' value='p0%' />
            <format attr='width' field='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_803611097201504256:nk]' value='54' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group) (copy)]' />
              <text column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[pcto:sum:Calculation_884112924430045186:qk:2]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_884112924430045186:qk]</rows>
        <cols>([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_803611097201504256:nk] / [federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_803611097201504256:nk]))))</cols>
      </table>
      <simple-id uuid='{98271FCC-EAFA-491F-835D-6B4CE10B71C3}' />
    </worksheet>
    <worksheet name='Annual Generation (Percentage) by Type'>
      <table>
        <view>
          <datasources>
            <datasource caption='tab_dam_generator_power_combined' name='federated.0m2ojda1ih48r312ma38r1hlijh9' />
          </datasources>
          <datasource-dependencies datasource='federated.0m2ojda1ih48r312ma38r1hlijh9'>
            <column caption='Charging Time' datatype='string' name='[Calculation_1086493432799272960]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-evening-&quot;) THEN&#13;&#10;  &quot;12-6 PM&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-morning&quot;) THEN&#13;&#10;  &quot;12-6 AM&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='Charging Type' datatype='string' name='[Calculation_1086493432799367169]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-flexible&quot;) THEN&#13;&#10;  &quot;Flexible&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-inflexible&quot;) THEN&#13;&#10;  &quot;Inflexible&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='EV Adoption Level' datatype='string' name='[Calculation_1086493432800079874]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;low-&quot;) THEN&#13;&#10;  &quot;Low&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;med-&quot;) THEN&#13;&#10;  &quot;Med&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;high-&quot;) THEN&#13;&#10;  &quot;High&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='VRE Addition' datatype='string' name='[Calculation_803611097201504256]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;wind&quot;) THEN&#13;&#10;  &quot;Added Wind&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;solar&quot;) THEN&#13;&#10;  &quot;Added Solar&quot;&#13;&#10;ELSE&#13;&#10;  &quot;Default VRE&quot;&#13;&#10;END' />
            </column>
            <column caption='Generation for Load [MW]' datatype='real' name='[Calculation_884112924427558912]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_generator_power_combined.csv&quot; THEN&#13;&#10;  IF [Resource]==&quot;Curtailment&quot; THEN&#13;&#10;    -1*Value&#13;&#10;  ELSE&#13;&#10;    [Value]&#13;&#10;  END&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; THEN&#13;&#10;  [Value]&#13;&#10;END' />
            </column>
            <column caption='Generation Labels' datatype='string' name='[Calculation_884112924428046337]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_generator_power_combined.csv&quot; THEN&#13;&#10;  [Resource]&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&gt;=0 THEN&#13;&#10;  [Resource]&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&lt;0 THEN&#13;&#10;   [Resource]+&quot; Charging&quot;&#13;&#10;END' />
            </column>
            <column caption='Weighted Generation for Load [MW]' datatype='real' name='[Calculation_884112924430045186]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_931963670410043401]*[Calculation_884112924427558912]' />
            </column>
            <column caption='Weights' datatype='real' name='[Calculation_931963670410043401]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Timeblock]&#13;&#10;  WHEN &quot;t1&quot; THEN 36 &#13;&#10;  WHEN &quot;t2&quot; THEN 14&#13;&#10;  WHEN &quot;t3&quot; THEN 9.18368717&#13;&#10;  WHEN &quot;t4&quot; THEN 13&#13;&#10;END' />
            </column>
            <column caption='Generation Labels (group)' datatype='string' name='[Generation Labels (group) (copy)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Calculation_884112924428046337]' new-bin='true'>
                <bin default-name='false' value='&quot;Batteries&quot;'>
                  <value>&quot;Batteries&quot;</value>
                  <value>&quot;Batteries Charging&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;CCGT&quot;'>
                  <value>&quot;CCGT New&quot;</value>
                  <value>&quot;CCGT Old&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Coal&quot;'>
                  <value>&quot;Coal new&quot;</value>
                  <value>&quot;Coal Old&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Diesel&quot;'>
                  <value>&quot;Backup&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Hydro&quot;'>
                  <value>&quot;Hydro Reservoir&quot;</value>
                  <value>&quot;Hydro Reservoir Charging&quot;</value>
                  <value>&quot;Hydro Run of River&quot;</value>
                  <value>&quot;Pumped Hydro Storage&quot;</value>
                  <value>&quot;Pumped Hydro Storage Charging&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Nuclear&quot;'>
                  <value>&quot;Nuclear New&quot;</value>
                  <value>&quot;Nuclear Old&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Other &quot;'>
                  <value>&quot;Biomass&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Solar&quot;'>
                  <value>&quot;Curtailment&quot;</value>
                  <value>&quot;Solar&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Resource]' role='dimension' type='nominal' />
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Timeblock]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1086493432799272960]' derivation='None' name='[none:Calculation_1086493432799272960:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1086493432799367169]' derivation='None' name='[none:Calculation_1086493432799367169:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1086493432800079874]' derivation='None' name='[none:Calculation_1086493432800079874:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_803611097201504256]' derivation='None' name='[none:Calculation_803611097201504256:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_884112924430045186]' derivation='Sum' name='[pcto:sum:Calculation_884112924430045186:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group) (copy)]' direction='ASC'>
            <dictionary>
              <bucket>%null%</bucket>
              <bucket>&quot;Unmet Demand&quot;</bucket>
              <bucket>&quot;Curtailment&quot;</bucket>
              <bucket>&quot;Solar&quot;</bucket>
              <bucket>&quot;Wind&quot;</bucket>
              <bucket>&quot;Batteries&quot;</bucket>
              <bucket>&quot;Diesel&quot;</bucket>
              <bucket>&quot;Other &quot;</bucket>
              <bucket>&quot;CCGT&quot;</bucket>
              <bucket>&quot;Hydro&quot;</bucket>
              <bucket>&quot;Coal&quot;</bucket>
              <bucket>&quot;Nuclear&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;None&quot;</bucket>
              <bucket>&quot;Med&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0m2ojda1ih48r312ma38r1hlijh9].[pcto:sum:Calculation_884112924430045186:qk:2]' value='p0%' />
            <format attr='width' field='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_803611097201504256:nk]' value='66' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group) (copy)]' />
              <text column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[pcto:sum:Calculation_884112924430045186:qk:2]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0m2ojda1ih48r312ma38r1hlijh9].[pcto:sum:Calculation_884112924430045186:qk:2]</rows>
        <cols>([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_803611097201504256:nk] / [federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_803611097201504256:nk]))))</cols>
      </table>
      <simple-id uuid='{E0FF1331-7B26-4488-BFB2-4036D97C9AF0}' />
    </worksheet>
    <worksheet name='Dispatch with Load'>
      <table>
        <view>
          <datasources>
            <datasource caption='tab_dam_generator_power_combined' name='federated.0m2ojda1ih48r312ma38r1hlijh9' />
          </datasources>
          <datasource-dependencies datasource='federated.0m2ojda1ih48r312ma38r1hlijh9'>
            <column datatype='string' name='[Attribute]' role='dimension' type='nominal' />
            <column caption='Charging Time' datatype='string' name='[Calculation_1086493432799272960]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-evening-&quot;) THEN&#13;&#10;  &quot;12-6 PM&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-morning&quot;) THEN&#13;&#10;  &quot;12-6 AM&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='Charging Type' datatype='string' name='[Calculation_1086493432799367169]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-flexible&quot;) THEN&#13;&#10;  &quot;Flexible&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-inflexible&quot;) THEN&#13;&#10;  &quot;Inflexible&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='EV Adoption Level' datatype='string' name='[Calculation_1086493432800079874]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;low-&quot;) THEN&#13;&#10;  &quot;Low&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;med-&quot;) THEN&#13;&#10;  &quot;Med&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;high-&quot;) THEN&#13;&#10;  &quot;High&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='Representative Days' datatype='datetime' name='[Calculation_1086493432800321539]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF [Timeblock]==&quot;t1&quot; THEN DATEPARSE(&quot;dd.MMMM.yyyy&quot;,&quot;21.April.2037&quot;)&#13;&#10;ELSEIF [Timeblock]==&quot;t2&quot; THEN DATEPARSE(&quot;dd.MMMM.yyyy&quot;,&quot;15.June.2037&quot;)&#13;&#10;ELSEIF [Timeblock]==&quot;t3&quot; THEN DATEPARSE(&quot;dd.MMMM.yyyy&quot;,&quot;13.October.2037&quot;)&#13;&#10;ELSEIF [Timeblock]==&quot;t4&quot; THEN DATEPARSE(&quot;dd.MMMM.yyyy&quot;,&quot;12.December.2037&quot;)&#13;&#10;END' />
            </column>
            <column caption='Time Interval' datatype='string' name='[Calculation_1086493432800645124]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Timeblock]==&quot;t1&quot; THEN&#13;&#10;  [Attribute]&#13;&#10;ELSEIF [Timeblock]==&quot;t2&quot; THEN&#13;&#10;  &quot;t&quot;+STR(INT(RIGHT([Attribute],LEN([Attribute])-1)))&#13;&#10;ELSEIF [Timeblock]==&quot;t3&quot; THEN&#13;&#10;  &quot;t&quot;+STR(INT(RIGHT([Attribute],LEN([Attribute])-1)))&#13;&#10;ELSE&#13;&#10;  &quot;t&quot;+STR(INT(RIGHT([Attribute],LEN([Attribute])-1)))&#13;&#10;END' />
            </column>
            <column caption='VRE Addition' datatype='string' name='[Calculation_803611097201504256]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;wind&quot;) THEN&#13;&#10;  &quot;Added Wind&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;solar&quot;) THEN&#13;&#10;  &quot;Added Solar&quot;&#13;&#10;ELSE&#13;&#10;  &quot;Default VRE&quot;&#13;&#10;END' />
            </column>
            <column caption='Generation for Load [MW]' datatype='real' name='[Calculation_884112924427558912]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_generator_power_combined.csv&quot; THEN&#13;&#10;  IF [Resource]==&quot;Curtailment&quot; THEN&#13;&#10;    -1*Value&#13;&#10;  ELSE&#13;&#10;    [Value]&#13;&#10;  END&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; THEN&#13;&#10;  [Value]&#13;&#10;END' />
            </column>
            <column caption='Generation Labels' datatype='string' name='[Calculation_884112924428046337]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_generator_power_combined.csv&quot; THEN&#13;&#10;  [Resource]&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&gt;=0 THEN&#13;&#10;  [Resource]&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&lt;0 THEN&#13;&#10;   [Resource]+&quot; Charging&quot;&#13;&#10;END' />
            </column>
            <column caption='Charging [MW]' datatype='real' name='[Calculation_884112924457828355]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&lt;0 THEN&#13;&#10;  [Value]&#13;&#10;ELSE&#13;&#10;  0&#13;&#10;END' />
            </column>
            <column caption='Date Time' datatype='datetime' name='[Calculation_889179474267987968]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATEADD(&apos;hour&apos;,INT(RIGHT([Calculation_1086493432800645124],LEN([Calculation_1086493432800645124])-1))-1,[Calculation_1086493432800321539])' />
            </column>
            <column caption='Total Generation [MW]' datatype='real' name='[Calculation_918452871620472832]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_generator_power_combined.csv&quot; THEN&#13;&#10;  IF [Resource]==&quot;Unmet Demand&quot; OR [Resource]==&quot;Curtailment&quot; THEN&#13;&#10;    0*[Value]&#13;&#10;  ELSE&#13;&#10;    [Value]&#13;&#10;  END&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&gt;=0 THEN&#13;&#10;  [Value]&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&lt;0 THEN&#13;&#10;  0*[Value]&#13;&#10;END' />
            </column>
            <column caption='Inflexible Load [MW]' datatype='real' name='[Calculation_931963670409289734]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_loads_combined.csv&quot; THEN&#13;&#10;  [Value]&#13;&#10;ELSE&#13;&#10;  0&#13;&#10;END' />
            </column>
            <column caption='Flexible Load [MW]' datatype='real' name='[Calculation_931963670409551879]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_demand_response_load_combined.csv&quot; THEN&#13;&#10;  [Value]&#13;&#10;ELSE&#13;&#10;  0&#13;&#10;END' />
            </column>
            <column caption='Total Load [MW]' datatype='real' name='[Calculation_931963670410522634]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_931963670409551879]+[Calculation_931963670409289734]-[Calculation_884112924457828355]' />
            </column>
            <column caption='Generation Labels with Charging (group)' datatype='string' name='[Generation Labels (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Calculation_884112924428046337]' new-bin='true'>
                <bin default-name='false' value='&quot;CCGT&quot;'>
                  <value>&quot;CCGT New&quot;</value>
                  <value>&quot;CCGT Old&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Coal&quot;'>
                  <value>&quot;Coal new&quot;</value>
                  <value>&quot;Coal Old&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Diesel&quot;'>
                  <value>&quot;Backup&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Hydro&quot;'>
                  <value>&quot;Hydro Reservoir&quot;</value>
                  <value>&quot;Hydro Run of River&quot;</value>
                  <value>&quot;Pumped Hydro Storage&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Nuclear&quot;'>
                  <value>&quot;Nuclear New&quot;</value>
                  <value>&quot;Nuclear Old&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Other &quot;'>
                  <value>&quot;Biomass&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Solar&quot;'>
                  <value>&quot;Curtailment&quot;</value>
                  <value>&quot;Solar&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Resource]' role='dimension' type='nominal' />
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Timeblock]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_889179474267987968]' derivation='Day' name='[dy:Calculation_889179474267987968:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_889179474267987968]' derivation='Hour' name='[hr:Calculation_889179474267987968:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_889179474267987968]' derivation='Month' name='[mn:Calculation_889179474267987968:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1086493432799272960]' derivation='None' name='[none:Calculation_1086493432799272960:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1086493432799367169]' derivation='None' name='[none:Calculation_1086493432799367169:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1086493432800079874]' derivation='None' name='[none:Calculation_1086493432800079874:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_803611097201504256]' derivation='None' name='[none:Calculation_803611097201504256:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_889179474267987968]' derivation='Quarter' name='[qr:Calculation_889179474267987968:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_884112924427558912]' derivation='Sum' name='[sum:Calculation_884112924427558912:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_918452871620472832]' derivation='Sum' name='[sum:Calculation_918452871620472832:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_931963670409289734]' derivation='Sum' name='[sum:Calculation_931963670409289734:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_931963670410522634]' derivation='Sum' name='[sum:Calculation_931963670410522634:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_889179474267987968]' derivation='Year' name='[yr:Calculation_889179474267987968:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_918452871620472832:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_931963670410522634:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_931963670409289734:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_918452871620472832:qk]&quot;</bucket>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_931963670410522634:qk]&quot;</bucket>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_931963670409289734:qk]&quot;</bucket>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_884112924427558912:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group)]' direction='ASC'>
            <dictionary>
              <bucket>%null%</bucket>
              <bucket>&quot;Hydro Reservoir Charging&quot;</bucket>
              <bucket>&quot;Batteries Charging&quot;</bucket>
              <bucket>&quot;Pumped Hydro Storage Charging&quot;</bucket>
              <bucket>&quot;Unmet Demand&quot;</bucket>
              <bucket>&quot;Curtailment&quot;</bucket>
              <bucket>&quot;Solar&quot;</bucket>
              <bucket>&quot;Wind&quot;</bucket>
              <bucket>&quot;Batteries&quot;</bucket>
              <bucket>&quot;Diesel&quot;</bucket>
              <bucket>&quot;Other &quot;</bucket>
              <bucket>&quot;CCGT&quot;</bucket>
              <bucket>&quot;Hydro&quot;</bucket>
              <bucket>&quot;Coal&quot;</bucket>
              <bucket>&quot;Nuclear&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[mn:Calculation_889179474267987968:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[mn:Calculation_889179474267987968:ok]' member='10' />
              <groupfilter function='member' level='[mn:Calculation_889179474267987968:ok]' member='12' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_1086493432799272960:nk]' />
          </filter>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;None&quot;</bucket>
              <bucket>&quot;12-3 AM&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;None&quot;</bucket>
              <bucket>&quot;Flexible&quot;</bucket>
              <bucket>&quot;Inflexible&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]'>
            <groupfilter function='member' level='[none:Calculation_1086493432800079874:nk]' member='&quot;Med&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;None&quot;</bucket>
              <bucket>&quot;Med&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_803611097201504256:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_803611097201504256:nk]' member='&quot;Added Wind&quot;' />
              <groupfilter function='member' level='[none:Calculation_803611097201504256:nk]' member='&quot;Default VRE&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]'>
            <groupfilter function='level-members' level='[none:Scenario:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0m2ojda1ih48r312ma38r1hlijh9].[:Measure Names]</column>
            <column>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]</column>
            <column>[federated.0m2ojda1ih48r312ma38r1hlijh9].[mn:Calculation_889179474267987968:ok]</column>
            <column>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]</column>
            <column>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_803611097201504256:nk]</column>
            <column>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0m2ojda1ih48r312ma38r1hlijh9].[Multiple Values]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='width' field='[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_884112924427558912:qk]' value='10' />
            <format attr='width' field='[federated.0m2ojda1ih48r312ma38r1hlijh9].[Multiple Values]' value='10' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_884112924427558912:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group)]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0m2ojda1ih48r312ma38r1hlijh9].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>(([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk] / [federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_803611097201504256:nk]))) * ([federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_884112924427558912:qk] + [federated.0m2ojda1ih48r312ma38r1hlijh9].[Multiple Values]))</rows>
        <cols>([federated.0m2ojda1ih48r312ma38r1hlijh9].[yr:Calculation_889179474267987968:ok] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[qr:Calculation_889179474267987968:ok] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[mn:Calculation_889179474267987968:ok] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[dy:Calculation_889179474267987968:ok] / [federated.0m2ojda1ih48r312ma38r1hlijh9].[hr:Calculation_889179474267987968:ok]))))</cols>
      </table>
      <simple-id uuid='{D2ED8F6E-8B18-4B2D-98CF-511577BAE9A3}' />
    </worksheet>
    <worksheet name='Dispatch with Load (no charging)'>
      <table>
        <view>
          <datasources>
            <datasource caption='tab_dam_generator_power_combined' name='federated.0m2ojda1ih48r312ma38r1hlijh9' />
          </datasources>
          <datasource-dependencies datasource='federated.0m2ojda1ih48r312ma38r1hlijh9'>
            <column datatype='string' name='[Attribute]' role='dimension' type='nominal' />
            <column caption='Charging Time' datatype='string' name='[Calculation_1086493432799272960]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-evening-&quot;) THEN&#13;&#10;  &quot;12-6 PM&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-morning&quot;) THEN&#13;&#10;  &quot;12-6 AM&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='Charging Type' datatype='string' name='[Calculation_1086493432799367169]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-flexible&quot;) THEN&#13;&#10;  &quot;Flexible&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-inflexible&quot;) THEN&#13;&#10;  &quot;Inflexible&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='EV Adoption Level' datatype='string' name='[Calculation_1086493432800079874]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;low-&quot;) THEN&#13;&#10;  &quot;Low&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;med-&quot;) THEN&#13;&#10;  &quot;Med&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;high-&quot;) THEN&#13;&#10;  &quot;High&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='Representative Days' datatype='datetime' name='[Calculation_1086493432800321539]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF [Timeblock]==&quot;t1&quot; THEN DATEPARSE(&quot;dd.MMMM.yyyy&quot;,&quot;21.April.2037&quot;)&#13;&#10;ELSEIF [Timeblock]==&quot;t2&quot; THEN DATEPARSE(&quot;dd.MMMM.yyyy&quot;,&quot;15.June.2037&quot;)&#13;&#10;ELSEIF [Timeblock]==&quot;t3&quot; THEN DATEPARSE(&quot;dd.MMMM.yyyy&quot;,&quot;13.October.2037&quot;)&#13;&#10;ELSEIF [Timeblock]==&quot;t4&quot; THEN DATEPARSE(&quot;dd.MMMM.yyyy&quot;,&quot;12.December.2037&quot;)&#13;&#10;END' />
            </column>
            <column caption='Time Interval' datatype='string' name='[Calculation_1086493432800645124]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Timeblock]==&quot;t1&quot; THEN&#13;&#10;  [Attribute]&#13;&#10;ELSEIF [Timeblock]==&quot;t2&quot; THEN&#13;&#10;  &quot;t&quot;+STR(INT(RIGHT([Attribute],LEN([Attribute])-1)))&#13;&#10;ELSEIF [Timeblock]==&quot;t3&quot; THEN&#13;&#10;  &quot;t&quot;+STR(INT(RIGHT([Attribute],LEN([Attribute])-1)))&#13;&#10;ELSE&#13;&#10;  &quot;t&quot;+STR(INT(RIGHT([Attribute],LEN([Attribute])-1)))&#13;&#10;END' />
            </column>
            <column caption='VRE Addition' datatype='string' name='[Calculation_803611097201504256]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;wind&quot;) THEN&#13;&#10;  &quot;Added Wind&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;solar&quot;) THEN&#13;&#10;  &quot;Added Solar&quot;&#13;&#10;ELSE&#13;&#10;  &quot;Default VRE&quot;&#13;&#10;END' />
            </column>
            <column caption='Generation for Load [MW]' datatype='real' name='[Calculation_884112924427558912]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_generator_power_combined.csv&quot; THEN&#13;&#10;  IF [Resource]==&quot;Curtailment&quot; THEN&#13;&#10;    -1*Value&#13;&#10;  ELSE&#13;&#10;    [Value]&#13;&#10;  END&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; THEN&#13;&#10;  [Value]&#13;&#10;END' />
            </column>
            <column caption='Generation Labels' datatype='string' name='[Calculation_884112924428046337]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_generator_power_combined.csv&quot; THEN&#13;&#10;  [Resource]&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&gt;=0 THEN&#13;&#10;  [Resource]&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&lt;0 THEN&#13;&#10;   [Resource]+&quot; Charging&quot;&#13;&#10;END' />
            </column>
            <column caption='Charging [MW]' datatype='real' name='[Calculation_884112924457828355]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&lt;0 THEN&#13;&#10;  [Value]&#13;&#10;ELSE&#13;&#10;  0&#13;&#10;END' />
            </column>
            <column caption='Date Time' datatype='datetime' name='[Calculation_889179474267987968]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATEADD(&apos;hour&apos;,INT(RIGHT([Calculation_1086493432800645124],LEN([Calculation_1086493432800645124])-1))-1,[Calculation_1086493432800321539])' />
            </column>
            <column caption='Total Generation [MW]' datatype='real' name='[Calculation_918452871620472832]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_generator_power_combined.csv&quot; THEN&#13;&#10;  IF [Resource]==&quot;Unmet Demand&quot; OR [Resource]==&quot;Curtailment&quot; THEN&#13;&#10;    0*[Value]&#13;&#10;  ELSE&#13;&#10;    [Value]&#13;&#10;  END&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&gt;=0 THEN&#13;&#10;  [Value]&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&lt;0 THEN&#13;&#10;  0*[Value]&#13;&#10;END' />
            </column>
            <column caption='Inflexible Load [MW]' datatype='real' name='[Calculation_931963670409289734]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_loads_combined.csv&quot; THEN&#13;&#10;  [Value]&#13;&#10;ELSE&#13;&#10;  0&#13;&#10;END' />
            </column>
            <column caption='Flexible Load [MW]' datatype='real' name='[Calculation_931963670409551879]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_demand_response_load_combined.csv&quot; THEN&#13;&#10;  [Value]&#13;&#10;ELSE&#13;&#10;  0&#13;&#10;END' />
            </column>
            <column caption='Total Load [MW]' datatype='real' name='[Calculation_931963670410522634]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_931963670409551879]+[Calculation_931963670409289734]-[Calculation_884112924457828355]' />
            </column>
            <column caption='Generation Labels with Charging (group)' datatype='string' name='[Generation Labels (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Calculation_884112924428046337]' new-bin='true'>
                <bin default-name='false' value='&quot;CCGT&quot;'>
                  <value>&quot;CCGT New&quot;</value>
                  <value>&quot;CCGT Old&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Coal&quot;'>
                  <value>&quot;Coal new&quot;</value>
                  <value>&quot;Coal Old&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Diesel&quot;'>
                  <value>&quot;Backup&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Hydro&quot;'>
                  <value>&quot;Hydro Reservoir&quot;</value>
                  <value>&quot;Hydro Run of River&quot;</value>
                  <value>&quot;Pumped Hydro Storage&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Nuclear&quot;'>
                  <value>&quot;Nuclear New&quot;</value>
                  <value>&quot;Nuclear Old&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Other &quot;'>
                  <value>&quot;Biomass&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Solar&quot;'>
                  <value>&quot;Curtailment&quot;</value>
                  <value>&quot;Solar&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Generation for Load (no charging) [MW]' datatype='real' name='[Generation for Load [MW]] (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_generator_power_combined.csv&quot; THEN&#13;&#10;  IF [Resource]==&quot;Curtailment&quot; THEN&#13;&#10;    -1*Value&#13;&#10;  ELSE&#13;&#10;    [Value]&#13;&#10;  END&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; THEN&#13;&#10;  IF [Value]&lt;0 THEN&#13;&#10;    0*[Value]&#13;&#10;  ELSE&#13;&#10;    [Value]&#13;&#10;  END&#13;&#10;END' />
            </column>
            <column caption='5-day time period' datatype='string' name='[Representative Days (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Timeblock]==&quot;t1&quot; THEN &quot;April 21-25&quot;&#13;&#10;ELSEIF [Timeblock]==&quot;t2&quot; THEN &quot;June 15-19&quot;&#13;&#10;ELSEIF [Timeblock]==&quot;t3&quot; THEN &quot;October 13-17&quot;&#13;&#10;ELSEIF [Timeblock]==&quot;t4&quot; THEN &quot;December 12-16&quot;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Resource]' role='dimension' type='nominal' />
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Timeblock]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_889179474267987968]' derivation='Day' name='[dy:Calculation_889179474267987968:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_889179474267987968]' derivation='Hour' name='[hr:Calculation_889179474267987968:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_889179474267987968]' derivation='Month' name='[mn:Calculation_889179474267987968:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1086493432799272960]' derivation='None' name='[none:Calculation_1086493432799272960:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1086493432799367169]' derivation='None' name='[none:Calculation_1086493432799367169:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1086493432800079874]' derivation='None' name='[none:Calculation_1086493432800079874:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_803611097201504256]' derivation='None' name='[none:Calculation_803611097201504256:nk]' pivot='key' type='nominal' />
            <column-instance column='[Representative Days (copy)]' derivation='None' name='[none:Representative Days (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_889179474267987968]' derivation='Quarter' name='[qr:Calculation_889179474267987968:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_884112924427558912]' derivation='Sum' name='[sum:Calculation_884112924427558912:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_918452871620472832]' derivation='Sum' name='[sum:Calculation_918452871620472832:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_931963670409289734]' derivation='Sum' name='[sum:Calculation_931963670409289734:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_931963670410522634]' derivation='Sum' name='[sum:Calculation_931963670410522634:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Generation for Load [MW]] (copy)]' derivation='Sum' name='[sum:Generation for Load [MW]] (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_889179474267987968]' derivation='Year' name='[yr:Calculation_889179474267987968:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_918452871620472832:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_931963670410522634:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_931963670409289734:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_918452871620472832:qk]&quot;</bucket>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_931963670410522634:qk]&quot;</bucket>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_931963670409289734:qk]&quot;</bucket>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_884112924427558912:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group)]' direction='ASC'>
            <dictionary>
              <bucket>%null%</bucket>
              <bucket>&quot;Hydro Reservoir Charging&quot;</bucket>
              <bucket>&quot;Batteries Charging&quot;</bucket>
              <bucket>&quot;Pumped Hydro Storage Charging&quot;</bucket>
              <bucket>&quot;Unmet Demand&quot;</bucket>
              <bucket>&quot;Curtailment&quot;</bucket>
              <bucket>&quot;Solar&quot;</bucket>
              <bucket>&quot;Wind&quot;</bucket>
              <bucket>&quot;Batteries&quot;</bucket>
              <bucket>&quot;Diesel&quot;</bucket>
              <bucket>&quot;Other &quot;</bucket>
              <bucket>&quot;CCGT&quot;</bucket>
              <bucket>&quot;Hydro&quot;</bucket>
              <bucket>&quot;Coal&quot;</bucket>
              <bucket>&quot;Nuclear&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk]'>
            <groupfilter function='member' level='[none:Calculation_1086493432799272960:nk]' member='&quot;12-6 PM&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;None&quot;</bucket>
              <bucket>&quot;12-3 AM&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk]'>
            <groupfilter function='member' level='[none:Calculation_1086493432799367169:nk]' member='&quot;Inflexible&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;None&quot;</bucket>
              <bucket>&quot;Flexible&quot;</bucket>
              <bucket>&quot;Inflexible&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]'>
            <groupfilter function='member' level='[none:Calculation_1086493432800079874:nk]' member='&quot;Med&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;None&quot;</bucket>
              <bucket>&quot;Med&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_803611097201504256:nk]'>
            <groupfilter function='member' level='[none:Calculation_803611097201504256:nk]' member='&quot;Default VRE&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Representative Days (copy):nk]'>
            <groupfilter function='member' level='[none:Representative Days (copy):nk]' member='&quot;April 21-25&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0m2ojda1ih48r312ma38r1hlijh9].[:Measure Names]</column>
            <column>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Representative Days (copy):nk]</column>
            <column>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_803611097201504256:nk]</column>
            <column>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk]</column>
            <column>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]</column>
            <column>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0m2ojda1ih48r312ma38r1hlijh9].[Multiple Values]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='width' field='[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Generation for Load [MW]] (copy):qk]' value='52' />
            <format attr='width' field='[federated.0m2ojda1ih48r312ma38r1hlijh9].[Multiple Values]' value='52' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.0m2ojda1ih48r312ma38r1hlijh9].[dy:Calculation_889179474267987968:ok]' value='10' />
            <format attr='width' field='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk]' value='60' />
            <format attr='width' field='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]' value='56' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Generation for Load [MW]] (copy):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group)]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0m2ojda1ih48r312ma38r1hlijh9].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>(([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk] / [federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_803611097201504256:nk]))) * ([federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Generation for Load [MW]] (copy):qk] + [federated.0m2ojda1ih48r312ma38r1hlijh9].[Multiple Values]))</rows>
        <cols>([federated.0m2ojda1ih48r312ma38r1hlijh9].[yr:Calculation_889179474267987968:ok] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[qr:Calculation_889179474267987968:ok] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[mn:Calculation_889179474267987968:ok] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[dy:Calculation_889179474267987968:ok] / [federated.0m2ojda1ih48r312ma38r1hlijh9].[hr:Calculation_889179474267987968:ok]))))</cols>
      </table>
      <simple-id uuid='{8516D35C-BF73-4F75-93DB-FF00EB025770}' />
    </worksheet>
    <worksheet name='Dispatch with Price'>
      <table>
        <view>
          <datasources>
            <datasource caption='tab_dam_generator_power_combined' name='federated.0m2ojda1ih48r312ma38r1hlijh9' />
          </datasources>
          <datasource-dependencies datasource='federated.0m2ojda1ih48r312ma38r1hlijh9'>
            <column datatype='string' name='[Attribute]' role='dimension' type='nominal' />
            <column caption='Charging Time' datatype='string' name='[Calculation_1086493432799272960]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-evening-&quot;) THEN&#13;&#10;  &quot;12-6 PM&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-morning&quot;) THEN&#13;&#10;  &quot;12-6 AM&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='Charging Type' datatype='string' name='[Calculation_1086493432799367169]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-flexible&quot;) THEN&#13;&#10;  &quot;Flexible&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-inflexible&quot;) THEN&#13;&#10;  &quot;Inflexible&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='EV Adoption Level' datatype='string' name='[Calculation_1086493432800079874]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;low-&quot;) THEN&#13;&#10;  &quot;Low&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;med-&quot;) THEN&#13;&#10;  &quot;Med&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;high-&quot;) THEN&#13;&#10;  &quot;High&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='Representative Days' datatype='datetime' name='[Calculation_1086493432800321539]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF [Timeblock]==&quot;t1&quot; THEN DATEPARSE(&quot;dd.MMMM.yyyy&quot;,&quot;21.April.2037&quot;)&#13;&#10;ELSEIF [Timeblock]==&quot;t2&quot; THEN DATEPARSE(&quot;dd.MMMM.yyyy&quot;,&quot;15.June.2037&quot;)&#13;&#10;ELSEIF [Timeblock]==&quot;t3&quot; THEN DATEPARSE(&quot;dd.MMMM.yyyy&quot;,&quot;13.October.2037&quot;)&#13;&#10;ELSEIF [Timeblock]==&quot;t4&quot; THEN DATEPARSE(&quot;dd.MMMM.yyyy&quot;,&quot;12.December.2037&quot;)&#13;&#10;END' />
            </column>
            <column caption='Time Interval' datatype='string' name='[Calculation_1086493432800645124]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Timeblock]==&quot;t1&quot; THEN&#13;&#10;  [Attribute]&#13;&#10;ELSEIF [Timeblock]==&quot;t2&quot; THEN&#13;&#10;  &quot;t&quot;+STR(INT(RIGHT([Attribute],LEN([Attribute])-1)))&#13;&#10;ELSEIF [Timeblock]==&quot;t3&quot; THEN&#13;&#10;  &quot;t&quot;+STR(INT(RIGHT([Attribute],LEN([Attribute])-1)))&#13;&#10;ELSE&#13;&#10;  &quot;t&quot;+STR(INT(RIGHT([Attribute],LEN([Attribute])-1)))&#13;&#10;END' />
            </column>
            <column caption='Generation for Load [MW]' datatype='real' name='[Calculation_884112924427558912]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_generator_power_combined.csv&quot; THEN&#13;&#10;  IF [Resource]==&quot;Curtailment&quot; THEN&#13;&#10;    -1*Value&#13;&#10;  ELSE&#13;&#10;    [Value]&#13;&#10;  END&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; THEN&#13;&#10;  [Value]&#13;&#10;END' />
            </column>
            <column caption='Generation Labels' datatype='string' name='[Calculation_884112924428046337]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_generator_power_combined.csv&quot; THEN&#13;&#10;  [Resource]&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&gt;=0 THEN&#13;&#10;  [Resource]&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&lt;0 THEN&#13;&#10;   [Resource]+&quot; Charging&quot;&#13;&#10;END' />
            </column>
            <column caption='Date Time' datatype='datetime' name='[Calculation_889179474267987968]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATEADD(&apos;hour&apos;,INT(RIGHT([Calculation_1086493432800645124],LEN([Calculation_1086493432800645124])-1))-1,[Calculation_1086493432800321539])' />
            </column>
            <column caption='Price' datatype='real' name='[Calculation_889179474271539201]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_prices_combined.csv&quot; THEN&#13;&#10;  [Value]&#13;&#10;END' />
            </column>
            <column caption='Generation Labels with Charging (group)' datatype='string' name='[Generation Labels (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Calculation_884112924428046337]' new-bin='true'>
                <bin default-name='false' value='&quot;CCGT&quot;'>
                  <value>&quot;CCGT New&quot;</value>
                  <value>&quot;CCGT Old&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Coal&quot;'>
                  <value>&quot;Coal new&quot;</value>
                  <value>&quot;Coal Old&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Diesel&quot;'>
                  <value>&quot;Backup&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Hydro&quot;'>
                  <value>&quot;Hydro Reservoir&quot;</value>
                  <value>&quot;Hydro Run of River&quot;</value>
                  <value>&quot;Pumped Hydro Storage&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Nuclear&quot;'>
                  <value>&quot;Nuclear New&quot;</value>
                  <value>&quot;Nuclear Old&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Other &quot;'>
                  <value>&quot;Biomass&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Solar&quot;'>
                  <value>&quot;Curtailment&quot;</value>
                  <value>&quot;Solar&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Resource]' role='dimension' type='nominal' />
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Timeblock]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_889179474267987968]' derivation='Day' name='[dy:Calculation_889179474267987968:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_889179474267987968]' derivation='Hour' name='[hr:Calculation_889179474267987968:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_889179474271539201]' derivation='Max' name='[max:Calculation_889179474271539201:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_889179474267987968]' derivation='Month' name='[mn:Calculation_889179474267987968:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1086493432799272960]' derivation='None' name='[none:Calculation_1086493432799272960:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1086493432799367169]' derivation='None' name='[none:Calculation_1086493432799367169:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1086493432800079874]' derivation='None' name='[none:Calculation_1086493432800079874:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_889179474267987968]' derivation='Quarter' name='[qr:Calculation_889179474267987968:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_884112924427558912]' derivation='Sum' name='[sum:Calculation_884112924427558912:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_889179474267987968]' derivation='Year' name='[yr:Calculation_889179474267987968:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group)]' direction='ASC'>
            <dictionary>
              <bucket>%null%</bucket>
              <bucket>&quot;Hydro Reservoir Charging&quot;</bucket>
              <bucket>&quot;Batteries Charging&quot;</bucket>
              <bucket>&quot;Pumped Hydro Storage Charging&quot;</bucket>
              <bucket>&quot;Unmet Demand&quot;</bucket>
              <bucket>&quot;Curtailment&quot;</bucket>
              <bucket>&quot;Solar&quot;</bucket>
              <bucket>&quot;Wind&quot;</bucket>
              <bucket>&quot;Batteries&quot;</bucket>
              <bucket>&quot;Diesel&quot;</bucket>
              <bucket>&quot;Other &quot;</bucket>
              <bucket>&quot;CCGT&quot;</bucket>
              <bucket>&quot;Hydro&quot;</bucket>
              <bucket>&quot;Coal&quot;</bucket>
              <bucket>&quot;Nuclear&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;None&quot;</bucket>
              <bucket>&quot;12-3 AM&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;None&quot;</bucket>
              <bucket>&quot;Flexible&quot;</bucket>
              <bucket>&quot;Inflexible&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;None&quot;</bucket>
              <bucket>&quot;Med&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]'>
            <groupfilter function='level-members' level='[none:Scenario:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0m2ojda1ih48r312ma38r1hlijh9].[max:Calculation_889179474271539201:qk]' field-type='quantitative' fold='true' scale='log' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_884112924427558912:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group)]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0m2ojda1ih48r312ma38r1hlijh9].[max:Calculation_889179474271539201:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>(([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk] / [federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk])) * ([federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_884112924427558912:qk] + [federated.0m2ojda1ih48r312ma38r1hlijh9].[max:Calculation_889179474271539201:qk]))</rows>
        <cols>([federated.0m2ojda1ih48r312ma38r1hlijh9].[yr:Calculation_889179474267987968:ok] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[qr:Calculation_889179474267987968:ok] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[mn:Calculation_889179474267987968:ok] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[dy:Calculation_889179474267987968:ok] / [federated.0m2ojda1ih48r312ma38r1hlijh9].[hr:Calculation_889179474267987968:ok]))))</cols>
      </table>
      <simple-id uuid='{D19C0504-D9E3-4DEE-A328-55DAD0946331}' />
    </worksheet>
    <worksheet name='Generation (Absolute) by Type'>
      <table>
        <view>
          <datasources>
            <datasource caption='tab_dam_generator_power_combined' name='federated.0m2ojda1ih48r312ma38r1hlijh9' />
          </datasources>
          <datasource-dependencies datasource='federated.0m2ojda1ih48r312ma38r1hlijh9'>
            <column caption='Charging Time' datatype='string' name='[Calculation_1086493432799272960]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-evening-&quot;) THEN&#13;&#10;  &quot;12-6 PM&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-morning&quot;) THEN&#13;&#10;  &quot;12-6 AM&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='Charging Type' datatype='string' name='[Calculation_1086493432799367169]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-flexible&quot;) THEN&#13;&#10;  &quot;Flexible&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-inflexible&quot;) THEN&#13;&#10;  &quot;Inflexible&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='EV Adoption Level' datatype='string' name='[Calculation_1086493432800079874]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;low-&quot;) THEN&#13;&#10;  &quot;Low&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;med-&quot;) THEN&#13;&#10;  &quot;Med&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;high-&quot;) THEN&#13;&#10;  &quot;High&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='VRE Addition' datatype='string' name='[Calculation_803611097201504256]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;wind&quot;) THEN&#13;&#10;  &quot;Added Wind&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;solar&quot;) THEN&#13;&#10;  &quot;Added Solar&quot;&#13;&#10;ELSE&#13;&#10;  &quot;Default VRE&quot;&#13;&#10;END' />
            </column>
            <column caption='Generation for Load [MW]' datatype='real' name='[Calculation_884112924427558912]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_generator_power_combined.csv&quot; THEN&#13;&#10;  IF [Resource]==&quot;Curtailment&quot; THEN&#13;&#10;    -1*Value&#13;&#10;  ELSE&#13;&#10;    [Value]&#13;&#10;  END&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; THEN&#13;&#10;  [Value]&#13;&#10;END' />
            </column>
            <column caption='Generation Labels' datatype='string' name='[Calculation_884112924428046337]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_generator_power_combined.csv&quot; THEN&#13;&#10;  [Resource]&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&gt;=0 THEN&#13;&#10;  [Resource]&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&lt;0 THEN&#13;&#10;   [Resource]+&quot; Charging&quot;&#13;&#10;END' />
            </column>
            <column caption='Weighted Generation for Load [MW]' datatype='real' name='[Calculation_884112924430045186]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_931963670410043401]*[Calculation_884112924427558912]' />
            </column>
            <column caption='Weights' datatype='real' name='[Calculation_931963670410043401]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Timeblock]&#13;&#10;  WHEN &quot;t1&quot; THEN 36 &#13;&#10;  WHEN &quot;t2&quot; THEN 14&#13;&#10;  WHEN &quot;t3&quot; THEN 9.18368717&#13;&#10;  WHEN &quot;t4&quot; THEN 13&#13;&#10;END' />
            </column>
            <column caption='Generation Labels (group)' datatype='string' name='[Generation Labels (group) (copy)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Calculation_884112924428046337]' new-bin='true'>
                <bin default-name='false' value='&quot;Batteries&quot;'>
                  <value>&quot;Batteries&quot;</value>
                  <value>&quot;Batteries Charging&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;CCGT&quot;'>
                  <value>&quot;CCGT New&quot;</value>
                  <value>&quot;CCGT Old&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Coal&quot;'>
                  <value>&quot;Coal new&quot;</value>
                  <value>&quot;Coal Old&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Diesel&quot;'>
                  <value>&quot;Backup&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Hydro&quot;'>
                  <value>&quot;Hydro Reservoir&quot;</value>
                  <value>&quot;Hydro Reservoir Charging&quot;</value>
                  <value>&quot;Hydro Run of River&quot;</value>
                  <value>&quot;Pumped Hydro Storage&quot;</value>
                  <value>&quot;Pumped Hydro Storage Charging&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Nuclear&quot;'>
                  <value>&quot;Nuclear New&quot;</value>
                  <value>&quot;Nuclear Old&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Other &quot;'>
                  <value>&quot;Biomass&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Solar&quot;'>
                  <value>&quot;Curtailment&quot;</value>
                  <value>&quot;Solar&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='5-day time period' datatype='string' name='[Representative Days (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Timeblock]==&quot;t1&quot; THEN &quot;April 21-25&quot;&#13;&#10;ELSEIF [Timeblock]==&quot;t2&quot; THEN &quot;June 15-19&quot;&#13;&#10;ELSEIF [Timeblock]==&quot;t3&quot; THEN &quot;October 13-17&quot;&#13;&#10;ELSEIF [Timeblock]==&quot;t4&quot; THEN &quot;December 12-16&quot;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Resource]' role='dimension' type='nominal' />
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Timeblock]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1086493432799272960]' derivation='None' name='[none:Calculation_1086493432799272960:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1086493432799367169]' derivation='None' name='[none:Calculation_1086493432799367169:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1086493432800079874]' derivation='None' name='[none:Calculation_1086493432800079874:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_803611097201504256]' derivation='None' name='[none:Calculation_803611097201504256:nk]' pivot='key' type='nominal' />
            <column-instance column='[Representative Days (copy)]' derivation='None' name='[none:Representative Days (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_884112924430045186]' derivation='Sum' name='[pcto:sum:Calculation_884112924430045186:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_884112924427558912]' derivation='Sum' name='[sum:Calculation_884112924427558912:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group) (copy)]' direction='ASC'>
            <dictionary>
              <bucket>%null%</bucket>
              <bucket>&quot;Unmet Demand&quot;</bucket>
              <bucket>&quot;Curtailment&quot;</bucket>
              <bucket>&quot;Solar&quot;</bucket>
              <bucket>&quot;Wind&quot;</bucket>
              <bucket>&quot;Batteries&quot;</bucket>
              <bucket>&quot;Diesel&quot;</bucket>
              <bucket>&quot;Other &quot;</bucket>
              <bucket>&quot;CCGT&quot;</bucket>
              <bucket>&quot;Hydro&quot;</bucket>
              <bucket>&quot;Coal&quot;</bucket>
              <bucket>&quot;Nuclear&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;None&quot;</bucket>
              <bucket>&quot;Med&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_803611097201504256:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_803611097201504256:nk]' />
          </filter>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Representative Days (copy):nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;April 21-25&quot;</bucket>
              <bucket>&quot;June 15-19&quot;</bucket>
              <bucket>&quot;October 13-17&quot;</bucket>
              <bucket>&quot;December 12-16&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_803611097201504256:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0m2ojda1ih48r312ma38r1hlijh9].[pcto:sum:Calculation_884112924430045186:qk:2]' value='p0%' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group) (copy)]' />
              <text column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[pcto:sum:Calculation_884112924430045186:qk:2]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_884112924427558912:qk]</rows>
        <cols>([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Representative Days (copy):nk] / [federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_803611097201504256:nk]))))</cols>
      </table>
      <simple-id uuid='{616E2DBF-D898-4487-A202-E0974F0137E8}' />
    </worksheet>
    <worksheet name='Generation (Percentage) by Type'>
      <table>
        <view>
          <datasources>
            <datasource caption='tab_dam_generator_power_combined' name='federated.0m2ojda1ih48r312ma38r1hlijh9' />
          </datasources>
          <datasource-dependencies datasource='federated.0m2ojda1ih48r312ma38r1hlijh9'>
            <column caption='Charging Time' datatype='string' name='[Calculation_1086493432799272960]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-evening-&quot;) THEN&#13;&#10;  &quot;12-6 PM&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-morning&quot;) THEN&#13;&#10;  &quot;12-6 AM&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='Charging Type' datatype='string' name='[Calculation_1086493432799367169]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-flexible&quot;) THEN&#13;&#10;  &quot;Flexible&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-inflexible&quot;) THEN&#13;&#10;  &quot;Inflexible&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='EV Adoption Level' datatype='string' name='[Calculation_1086493432800079874]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;low-&quot;) THEN&#13;&#10;  &quot;Low&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;med-&quot;) THEN&#13;&#10;  &quot;Med&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;high-&quot;) THEN&#13;&#10;  &quot;High&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='VRE Addition' datatype='string' name='[Calculation_803611097201504256]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;wind&quot;) THEN&#13;&#10;  &quot;Added Wind&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;solar&quot;) THEN&#13;&#10;  &quot;Added Solar&quot;&#13;&#10;ELSE&#13;&#10;  &quot;Default VRE&quot;&#13;&#10;END' />
            </column>
            <column caption='Generation for Load [MW]' datatype='real' name='[Calculation_884112924427558912]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_generator_power_combined.csv&quot; THEN&#13;&#10;  IF [Resource]==&quot;Curtailment&quot; THEN&#13;&#10;    -1*Value&#13;&#10;  ELSE&#13;&#10;    [Value]&#13;&#10;  END&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; THEN&#13;&#10;  [Value]&#13;&#10;END' />
            </column>
            <column caption='Generation Labels' datatype='string' name='[Calculation_884112924428046337]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_generator_power_combined.csv&quot; THEN&#13;&#10;  [Resource]&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&gt;=0 THEN&#13;&#10;  [Resource]&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&lt;0 THEN&#13;&#10;   [Resource]+&quot; Charging&quot;&#13;&#10;END' />
            </column>
            <column caption='Weighted Generation for Load [MW]' datatype='real' name='[Calculation_884112924430045186]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_931963670410043401]*[Calculation_884112924427558912]' />
            </column>
            <column caption='Weights' datatype='real' name='[Calculation_931963670410043401]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Timeblock]&#13;&#10;  WHEN &quot;t1&quot; THEN 36 &#13;&#10;  WHEN &quot;t2&quot; THEN 14&#13;&#10;  WHEN &quot;t3&quot; THEN 9.18368717&#13;&#10;  WHEN &quot;t4&quot; THEN 13&#13;&#10;END' />
            </column>
            <column caption='Generation Labels (group)' datatype='string' name='[Generation Labels (group) (copy)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Calculation_884112924428046337]' new-bin='true'>
                <bin default-name='false' value='&quot;Batteries&quot;'>
                  <value>&quot;Batteries&quot;</value>
                  <value>&quot;Batteries Charging&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;CCGT&quot;'>
                  <value>&quot;CCGT New&quot;</value>
                  <value>&quot;CCGT Old&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Coal&quot;'>
                  <value>&quot;Coal new&quot;</value>
                  <value>&quot;Coal Old&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Diesel&quot;'>
                  <value>&quot;Backup&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Hydro&quot;'>
                  <value>&quot;Hydro Reservoir&quot;</value>
                  <value>&quot;Hydro Reservoir Charging&quot;</value>
                  <value>&quot;Hydro Run of River&quot;</value>
                  <value>&quot;Pumped Hydro Storage&quot;</value>
                  <value>&quot;Pumped Hydro Storage Charging&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Nuclear&quot;'>
                  <value>&quot;Nuclear New&quot;</value>
                  <value>&quot;Nuclear Old&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Other &quot;'>
                  <value>&quot;Biomass&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Solar&quot;'>
                  <value>&quot;Curtailment&quot;</value>
                  <value>&quot;Solar&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='5-day time period' datatype='string' name='[Representative Days (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Timeblock]==&quot;t1&quot; THEN &quot;April 21-25&quot;&#13;&#10;ELSEIF [Timeblock]==&quot;t2&quot; THEN &quot;June 15-19&quot;&#13;&#10;ELSEIF [Timeblock]==&quot;t3&quot; THEN &quot;October 13-17&quot;&#13;&#10;ELSEIF [Timeblock]==&quot;t4&quot; THEN &quot;December 12-16&quot;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Resource]' role='dimension' type='nominal' />
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Timeblock]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1086493432799272960]' derivation='None' name='[none:Calculation_1086493432799272960:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1086493432799367169]' derivation='None' name='[none:Calculation_1086493432799367169:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1086493432800079874]' derivation='None' name='[none:Calculation_1086493432800079874:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_803611097201504256]' derivation='None' name='[none:Calculation_803611097201504256:nk]' pivot='key' type='nominal' />
            <column-instance column='[Representative Days (copy)]' derivation='None' name='[none:Representative Days (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_884112924430045186]' derivation='Sum' name='[pcto:sum:Calculation_884112924430045186:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group) (copy)]' direction='ASC'>
            <dictionary>
              <bucket>%null%</bucket>
              <bucket>&quot;Unmet Demand&quot;</bucket>
              <bucket>&quot;Curtailment&quot;</bucket>
              <bucket>&quot;Solar&quot;</bucket>
              <bucket>&quot;Wind&quot;</bucket>
              <bucket>&quot;Batteries&quot;</bucket>
              <bucket>&quot;Diesel&quot;</bucket>
              <bucket>&quot;Other &quot;</bucket>
              <bucket>&quot;CCGT&quot;</bucket>
              <bucket>&quot;Hydro&quot;</bucket>
              <bucket>&quot;Coal&quot;</bucket>
              <bucket>&quot;Nuclear&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;None&quot;</bucket>
              <bucket>&quot;Med&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_803611097201504256:nk]'>
            <groupfilter function='member' level='[none:Calculation_803611097201504256:nk]' member='&quot;Default VRE&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Representative Days (copy):nk]'>
            <groupfilter function='level-members' level='[none:Representative Days (copy):nk]' />
          </filter>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Representative Days (copy):nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;April 21-25&quot;</bucket>
              <bucket>&quot;June 15-19&quot;</bucket>
              <bucket>&quot;October 13-17&quot;</bucket>
              <bucket>&quot;December 12-16&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_803611097201504256:nk]</column>
            <column>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Representative Days (copy):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0m2ojda1ih48r312ma38r1hlijh9].[pcto:sum:Calculation_884112924430045186:qk:2]' value='p0%' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group) (copy)]' />
              <text column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[pcto:sum:Calculation_884112924430045186:qk:2]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0m2ojda1ih48r312ma38r1hlijh9].[pcto:sum:Calculation_884112924430045186:qk:2]</rows>
        <cols>([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Representative Days (copy):nk] / [federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_803611097201504256:nk]))))</cols>
      </table>
      <simple-id uuid='{0FFE1D90-1BE5-483C-940F-F4A13ABE567A}' />
    </worksheet>
    <worksheet name='Load'>
      <table>
        <view>
          <datasources>
            <datasource caption='tab_dam_generator_power_combined' name='federated.0m2ojda1ih48r312ma38r1hlijh9' />
          </datasources>
          <datasource-dependencies datasource='federated.0m2ojda1ih48r312ma38r1hlijh9'>
            <column caption='Charging Time' datatype='string' name='[Calculation_1086493432799272960]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-evening-&quot;) THEN&#13;&#10;  &quot;12-6 PM&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-morning&quot;) THEN&#13;&#10;  &quot;12-6 AM&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='Charging Type' datatype='string' name='[Calculation_1086493432799367169]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-flexible&quot;) THEN&#13;&#10;  &quot;Flexible&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-inflexible&quot;) THEN&#13;&#10;  &quot;Inflexible&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='EV Adoption Level' datatype='string' name='[Calculation_1086493432800079874]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;low-&quot;) THEN&#13;&#10;  &quot;Low&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;med-&quot;) THEN&#13;&#10;  &quot;Med&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;high-&quot;) THEN&#13;&#10;  &quot;High&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='VRE Addition' datatype='string' name='[Calculation_803611097201504256]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;wind&quot;) THEN&#13;&#10;  &quot;Added Wind&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;solar&quot;) THEN&#13;&#10;  &quot;Added Solar&quot;&#13;&#10;ELSE&#13;&#10;  &quot;Default VRE&quot;&#13;&#10;END' />
            </column>
            <column caption='Charging [MW]' datatype='real' name='[Calculation_884112924457828355]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&lt;0 THEN&#13;&#10;  [Value]&#13;&#10;ELSE&#13;&#10;  0&#13;&#10;END' />
            </column>
            <column caption='Inflexible Load [MW]' datatype='real' name='[Calculation_931963670409289734]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_loads_combined.csv&quot; THEN&#13;&#10;  [Value]&#13;&#10;ELSE&#13;&#10;  0&#13;&#10;END' />
            </column>
            <column caption='Flexible Load [MW]' datatype='real' name='[Calculation_931963670409551879]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_demand_response_load_combined.csv&quot; THEN&#13;&#10;  [Value]&#13;&#10;ELSE&#13;&#10;  0&#13;&#10;END' />
            </column>
            <column caption='Load Labels' datatype='string' name='[Calculation_931963670409670664]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_loads_combined.csv&quot; THEN&#13;&#10;  &quot;Inflexible&quot;&#13;&#10;ELSEIF [Table Name]==&quot;tab_dam_demand_response_load_combined.csv&quot; THEN&#13;&#10;  &quot;Flexible&quot;&#13;&#10;ELSEIF [Table Name]==&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&lt;0 THEN&#13;&#10;  &quot;Charging&quot;&#13;&#10;END' />
            </column>
            <column caption='Total Load [MW]' datatype='real' name='[Calculation_931963670410522634]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_931963670409551879]+[Calculation_931963670409289734]-[Calculation_884112924457828355]' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1086493432799272960]' derivation='None' name='[none:Calculation_1086493432799272960:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1086493432799367169]' derivation='None' name='[none:Calculation_1086493432799367169:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1086493432800079874]' derivation='None' name='[none:Calculation_1086493432800079874:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_803611097201504256]' derivation='None' name='[none:Calculation_803611097201504256:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_931963670409670664]' derivation='None' name='[none:Calculation_931963670409670664:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_931963670410522634]' derivation='Sum' name='[sum:Calculation_931963670410522634:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;None&quot;</bucket>
              <bucket>&quot;Med&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_803611097201504256:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_803611097201504256:nk]' />
          </filter>
          <filter class='categorical' column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_931963670409670664:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_931963670409670664:nk]' />
              <groupfilter function='member' level='[none:Calculation_931963670409670664:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_931963670409670664:nk]</column>
            <column>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_803611097201504256:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_931963670409670664:nk]' />
              <text column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_931963670410522634:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_931963670410522634:qk]</rows>
        <cols>([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk] / [federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_803611097201504256:nk])))</cols>
      </table>
      <simple-id uuid='{063BAC5D-D5E3-4C86-8100-20C8056CD6F8}' />
    </worksheet>
    <worksheet name='Load for Storage'>
      <table>
        <view>
          <datasources>
            <datasource caption='tab_dam_generator_power_combined' name='federated.0m2ojda1ih48r312ma38r1hlijh9' />
          </datasources>
          <datasource-dependencies datasource='federated.0m2ojda1ih48r312ma38r1hlijh9'>
            <column caption='Charging Time' datatype='string' name='[Calculation_1086493432799272960]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-evening-&quot;) THEN&#13;&#10;  &quot;12-6 PM&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-morning&quot;) THEN&#13;&#10;  &quot;12-6 AM&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='Charging Type' datatype='string' name='[Calculation_1086493432799367169]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-flexible&quot;) THEN&#13;&#10;  &quot;Flexible&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-inflexible&quot;) THEN&#13;&#10;  &quot;Inflexible&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='EV Adoption Level' datatype='string' name='[Calculation_1086493432800079874]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;low-&quot;) THEN&#13;&#10;  &quot;Low&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;med-&quot;) THEN&#13;&#10;  &quot;Med&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;high-&quot;) THEN&#13;&#10;  &quot;High&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='VRE Addition' datatype='string' name='[Calculation_803611097201504256]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;wind&quot;) THEN&#13;&#10;  &quot;Added Wind&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;solar&quot;) THEN&#13;&#10;  &quot;Added Solar&quot;&#13;&#10;ELSE&#13;&#10;  &quot;Default VRE&quot;&#13;&#10;END' />
            </column>
            <column caption='Charging [MW]' datatype='real' name='[Calculation_884112924457828355]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&lt;0 THEN&#13;&#10;  [Value]&#13;&#10;ELSE&#13;&#10;  0&#13;&#10;END' />
            </column>
            <column caption='Inflexible Load [MW]' datatype='real' name='[Calculation_931963670409289734]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_loads_combined.csv&quot; THEN&#13;&#10;  [Value]&#13;&#10;ELSE&#13;&#10;  0&#13;&#10;END' />
            </column>
            <column caption='Flexible Load [MW]' datatype='real' name='[Calculation_931963670409551879]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_demand_response_load_combined.csv&quot; THEN&#13;&#10;  [Value]&#13;&#10;ELSE&#13;&#10;  0&#13;&#10;END' />
            </column>
            <column caption='Load Labels' datatype='string' name='[Calculation_931963670409670664]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_loads_combined.csv&quot; THEN&#13;&#10;  &quot;Inflexible&quot;&#13;&#10;ELSEIF [Table Name]==&quot;tab_dam_demand_response_load_combined.csv&quot; THEN&#13;&#10;  &quot;Flexible&quot;&#13;&#10;ELSEIF [Table Name]==&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&lt;0 THEN&#13;&#10;  &quot;Charging&quot;&#13;&#10;END' />
            </column>
            <column caption='Total Load [MW]' datatype='real' name='[Calculation_931963670410522634]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_931963670409551879]+[Calculation_931963670409289734]-[Calculation_884112924457828355]' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1086493432799272960]' derivation='None' name='[none:Calculation_1086493432799272960:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1086493432799367169]' derivation='None' name='[none:Calculation_1086493432799367169:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1086493432800079874]' derivation='None' name='[none:Calculation_1086493432800079874:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_803611097201504256]' derivation='None' name='[none:Calculation_803611097201504256:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_931963670409670664]' derivation='None' name='[none:Calculation_931963670409670664:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_931963670410522634]' derivation='Sum' name='[sum:Calculation_931963670410522634:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;None&quot;</bucket>
              <bucket>&quot;Med&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_931963670409670664:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_931963670409670664:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Calculation_931963670409670664:nk]' member='%null%' />
                <groupfilter function='member' level='[none:Calculation_931963670409670664:nk]' member='&quot;Flexible&quot;' />
                <groupfilter function='member' level='[none:Calculation_931963670409670664:nk]' member='&quot;Inflexible&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_931963670409670664:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_931963670409670664:nk]' />
              <text column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_931963670410522634:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_931963670410522634:qk]</rows>
        <cols>([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk] / [federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_803611097201504256:nk])))</cols>
      </table>
      <simple-id uuid='{3AA364E5-9004-4503-AB54-E9BE7FA1EFF9}' />
    </worksheet>
    <worksheet name='Net Load Duration flexible'>
      <table>
        <view>
          <datasources>
            <datasource caption='tab_dam_generator_power_combined' name='federated.0m2ojda1ih48r312ma38r1hlijh9' />
          </datasources>
          <datasource-dependencies datasource='federated.0m2ojda1ih48r312ma38r1hlijh9'>
            <column datatype='string' name='[Attribute]' role='dimension' type='nominal' />
            <column caption='Net Generation [MW]' datatype='real' name='[Calculation_202099068255866880]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_generator_power_combined.csv&quot; THEN&#13;&#10;  IF [Resource]==&quot;Curtailment&quot; THEN&#13;&#10;    -1*Value&#13;&#10;  ELSEIF [Resource]==&quot;Solar&quot; THEN&#13;&#10;    0*[Value]&#13;&#10;  ELSEIF [Resource]==&quot;Wind&quot; THEN&#13;&#10;    0*[Value]&#13;&#10;  ELSE&#13;&#10;    [Value]&#13;&#10;  END&#13;&#10;&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; THEN&#13;&#10;  IF [Value]&lt;0 THEN&#13;&#10;    0*[Value]&#13;&#10;  ELSE&#13;&#10;    [Value]&#13;&#10;  END&#13;&#10;END' />
            </column>
            <column caption='Price' datatype='real' name='[Calculation_889179474271539201]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_prices_combined.csv&quot; THEN&#13;&#10;  [Value]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Resource]' role='dimension' type='nominal' />
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_889179474271539201]' derivation='Avg' name='[avg:Calculation_889179474271539201:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Attribute]' derivation='None' name='[none:Attribute:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_202099068255866880]' derivation='Sum' name='[sum:Calculation_202099068255866880:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;med-night-L-H-8-1275-flexible&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;real-med-morning-L-H-8-1275-flexible&quot;' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Attribute:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_202099068255866880:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_202099068255866880:qk]' field-type='quantitative' max='1800000.1022999999' min='0.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]' value='208' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0m2ojda1ih48r312ma38r1hlijh9].[avg:Calculation_889179474271539201:qk]' max='9000.0' palette='red_green_diverging_10_0' reverse='true' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[avg:Calculation_889179474271539201:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#75a1c7' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_202099068255866880:qk]</rows>
        <cols>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Attribute:nk]</cols>
      </table>
      <simple-id uuid='{599FC51C-18DD-4896-9B26-94620351B8EF}' />
    </worksheet>
    <worksheet name='Net Load Duration inflexible'>
      <table>
        <view>
          <datasources>
            <datasource caption='tab_dam_generator_power_combined' name='federated.0m2ojda1ih48r312ma38r1hlijh9' />
          </datasources>
          <datasource-dependencies datasource='federated.0m2ojda1ih48r312ma38r1hlijh9'>
            <column datatype='string' name='[Attribute]' role='dimension' type='nominal' />
            <column caption='Net Generation [MW]' datatype='real' name='[Calculation_202099068255866880]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_generator_power_combined.csv&quot; THEN&#13;&#10;  IF [Resource]==&quot;Curtailment&quot; THEN&#13;&#10;    -1*Value&#13;&#10;  ELSEIF [Resource]==&quot;Solar&quot; THEN&#13;&#10;    0*[Value]&#13;&#10;  ELSEIF [Resource]==&quot;Wind&quot; THEN&#13;&#10;    0*[Value]&#13;&#10;  ELSE&#13;&#10;    [Value]&#13;&#10;  END&#13;&#10;&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; THEN&#13;&#10;  IF [Value]&lt;0 THEN&#13;&#10;    0*[Value]&#13;&#10;  ELSE&#13;&#10;    [Value]&#13;&#10;  END&#13;&#10;END' />
            </column>
            <column caption='Price' datatype='real' name='[Calculation_889179474271539201]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_prices_combined.csv&quot; THEN&#13;&#10;  [Value]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Resource]' role='dimension' type='nominal' />
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_889179474271539201]' derivation='Avg' name='[avg:Calculation_889179474271539201:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Attribute]' derivation='None' name='[none:Attribute:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_202099068255866880]' derivation='Sum' name='[sum:Calculation_202099068255866880:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;med-night-L-H-8-1275-inflexible&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;real-med-morning-L-H-8-1275-inflexible&quot;' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Attribute:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_202099068255866880:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_202099068255866880:qk]' field-type='quantitative' max='1800000.1022999999' min='0.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]' value='208' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0m2ojda1ih48r312ma38r1hlijh9].[avg:Calculation_889179474271539201:qk]' max='9000.0' palette='red_green_diverging_10_0' reverse='true' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[avg:Calculation_889179474271539201:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#75a1c7' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_202099068255866880:qk]</rows>
        <cols>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Attribute:nk]</cols>
      </table>
      <simple-id uuid='{CBF4B443-7B0D-47C9-B123-41E090ED427D}' />
    </worksheet>
    <worksheet name='Price'>
      <table>
        <view>
          <datasources>
            <datasource caption='tab_dam_generator_power_combined' name='federated.0m2ojda1ih48r312ma38r1hlijh9' />
          </datasources>
          <datasource-dependencies datasource='federated.0m2ojda1ih48r312ma38r1hlijh9'>
            <column datatype='string' name='[Attribute]' role='dimension' type='nominal' />
            <column caption='Representative Days' datatype='datetime' name='[Calculation_1086493432800321539]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF [Timeblock]==&quot;t1&quot; THEN DATEPARSE(&quot;dd.MMMM.yyyy&quot;,&quot;21.April.2037&quot;)&#13;&#10;ELSEIF [Timeblock]==&quot;t2&quot; THEN DATEPARSE(&quot;dd.MMMM.yyyy&quot;,&quot;15.June.2037&quot;)&#13;&#10;ELSEIF [Timeblock]==&quot;t3&quot; THEN DATEPARSE(&quot;dd.MMMM.yyyy&quot;,&quot;13.October.2037&quot;)&#13;&#10;ELSEIF [Timeblock]==&quot;t4&quot; THEN DATEPARSE(&quot;dd.MMMM.yyyy&quot;,&quot;12.December.2037&quot;)&#13;&#10;END' />
            </column>
            <column caption='Time Interval' datatype='string' name='[Calculation_1086493432800645124]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Timeblock]==&quot;t1&quot; THEN&#13;&#10;  [Attribute]&#13;&#10;ELSEIF [Timeblock]==&quot;t2&quot; THEN&#13;&#10;  &quot;t&quot;+STR(INT(RIGHT([Attribute],LEN([Attribute])-1)))&#13;&#10;ELSEIF [Timeblock]==&quot;t3&quot; THEN&#13;&#10;  &quot;t&quot;+STR(INT(RIGHT([Attribute],LEN([Attribute])-1)))&#13;&#10;ELSE&#13;&#10;  &quot;t&quot;+STR(INT(RIGHT([Attribute],LEN([Attribute])-1)))&#13;&#10;END' />
            </column>
            <column caption='Date Time' datatype='datetime' name='[Calculation_889179474267987968]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATEADD(&apos;hour&apos;,INT(RIGHT([Calculation_1086493432800645124],LEN([Calculation_1086493432800645124])-1))-1,[Calculation_1086493432800321539])' />
            </column>
            <column caption='Price' datatype='real' name='[Calculation_889179474271539201]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_prices_combined.csv&quot; THEN&#13;&#10;  [Value]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Timeblock]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_889179474267987968]' derivation='Day' name='[dy:Calculation_889179474267987968:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_889179474267987968]' derivation='Hour' name='[hr:Calculation_889179474267987968:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_889179474271539201]' derivation='Max' name='[max:Calculation_889179474271539201:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_889179474267987968]' derivation='Month' name='[mn:Calculation_889179474267987968:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_889179474267987968]' derivation='Quarter' name='[qr:Calculation_889179474267987968:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_889179474267987968]' derivation='Year' name='[yr:Calculation_889179474267987968:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]'>
            <groupfilter function='level-members' level='[none:Scenario:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0m2ojda1ih48r312ma38r1hlijh9].[max:Calculation_889179474271539201:qk]' field-type='quantitative' scale='log' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0m2ojda1ih48r312ma38r1hlijh9].[max:Calculation_889179474271539201:qk]</rows>
        <cols>([federated.0m2ojda1ih48r312ma38r1hlijh9].[yr:Calculation_889179474267987968:ok] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[qr:Calculation_889179474267987968:ok] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[mn:Calculation_889179474267987968:ok] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[dy:Calculation_889179474267987968:ok] / [federated.0m2ojda1ih48r312ma38r1hlijh9].[hr:Calculation_889179474267987968:ok]))))</cols>
      </table>
      <simple-id uuid='{1B81A435-EA8A-4398-A596-3DE7859F3899}' />
    </worksheet>
    <worksheet name='Price (table)'>
      <table>
        <view>
          <datasources>
            <datasource caption='tab_dam_generator_power_combined' name='federated.0m2ojda1ih48r312ma38r1hlijh9' />
          </datasources>
          <datasource-dependencies datasource='federated.0m2ojda1ih48r312ma38r1hlijh9'>
            <column datatype='string' name='[Attribute]' role='dimension' type='nominal' />
            <column caption='Charging Time' datatype='string' name='[Calculation_1086493432799272960]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-evening-&quot;) THEN&#13;&#10;  &quot;12-6 PM&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-morning&quot;) THEN&#13;&#10;  &quot;12-6 AM&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='Charging Type' datatype='string' name='[Calculation_1086493432799367169]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-flexible&quot;) THEN&#13;&#10;  &quot;Flexible&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-inflexible&quot;) THEN&#13;&#10;  &quot;Inflexible&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='EV Adoption Level' datatype='string' name='[Calculation_1086493432800079874]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;low-&quot;) THEN&#13;&#10;  &quot;Low&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;med-&quot;) THEN&#13;&#10;  &quot;Med&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;high-&quot;) THEN&#13;&#10;  &quot;High&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='Representative Days' datatype='datetime' name='[Calculation_1086493432800321539]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF [Timeblock]==&quot;t1&quot; THEN DATEPARSE(&quot;dd.MMMM.yyyy&quot;,&quot;21.April.2037&quot;)&#13;&#10;ELSEIF [Timeblock]==&quot;t2&quot; THEN DATEPARSE(&quot;dd.MMMM.yyyy&quot;,&quot;15.June.2037&quot;)&#13;&#10;ELSEIF [Timeblock]==&quot;t3&quot; THEN DATEPARSE(&quot;dd.MMMM.yyyy&quot;,&quot;13.October.2037&quot;)&#13;&#10;ELSEIF [Timeblock]==&quot;t4&quot; THEN DATEPARSE(&quot;dd.MMMM.yyyy&quot;,&quot;12.December.2037&quot;)&#13;&#10;END' />
            </column>
            <column caption='Time Interval' datatype='string' name='[Calculation_1086493432800645124]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Timeblock]==&quot;t1&quot; THEN&#13;&#10;  [Attribute]&#13;&#10;ELSEIF [Timeblock]==&quot;t2&quot; THEN&#13;&#10;  &quot;t&quot;+STR(INT(RIGHT([Attribute],LEN([Attribute])-1)))&#13;&#10;ELSEIF [Timeblock]==&quot;t3&quot; THEN&#13;&#10;  &quot;t&quot;+STR(INT(RIGHT([Attribute],LEN([Attribute])-1)))&#13;&#10;ELSE&#13;&#10;  &quot;t&quot;+STR(INT(RIGHT([Attribute],LEN([Attribute])-1)))&#13;&#10;END' />
            </column>
            <column caption='Date Time' datatype='datetime' name='[Calculation_889179474267987968]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATEADD(&apos;hour&apos;,INT(RIGHT([Calculation_1086493432800645124],LEN([Calculation_1086493432800645124])-1))-1,[Calculation_1086493432800321539])' />
            </column>
            <column caption='Price' datatype='real' name='[Calculation_889179474271539201]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_prices_combined.csv&quot; THEN&#13;&#10;  [Value]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Timeblock]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column aggregation='Sum' datatype='integer' name='[Zone]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_889179474267987968]' derivation='Day' name='[dy:Calculation_889179474267987968:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_889179474267987968]' derivation='Hour' name='[hr:Calculation_889179474267987968:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_889179474271539201]' derivation='Max' name='[max:Calculation_889179474271539201:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_889179474267987968]' derivation='Month' name='[mn:Calculation_889179474267987968:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1086493432799272960]' derivation='None' name='[none:Calculation_1086493432799272960:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1086493432799367169]' derivation='None' name='[none:Calculation_1086493432799367169:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1086493432800079874]' derivation='None' name='[none:Calculation_1086493432800079874:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[Zone]' derivation='None' name='[none:Zone:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_889179474267987968]' derivation='Quarter' name='[qr:Calculation_889179474267987968:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_889179474267987968]' derivation='Year' name='[yr:Calculation_889179474267987968:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;None&quot;</bucket>
              <bucket>&quot;12-3 AM&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;None&quot;</bucket>
              <bucket>&quot;Flexible&quot;</bucket>
              <bucket>&quot;Inflexible&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;None&quot;</bucket>
              <bucket>&quot;Med&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]'>
            <groupfilter function='level-members' level='[none:Scenario:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0m2ojda1ih48r312ma38r1hlijh9].[max:Calculation_889179474271539201:qk]' field-type='quantitative' scale='log' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[max:Calculation_889179474271539201:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk] / [federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Zone:ok])))</rows>
        <cols>([federated.0m2ojda1ih48r312ma38r1hlijh9].[yr:Calculation_889179474267987968:ok] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[qr:Calculation_889179474267987968:ok] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[mn:Calculation_889179474267987968:ok] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[dy:Calculation_889179474267987968:ok] / [federated.0m2ojda1ih48r312ma38r1hlijh9].[hr:Calculation_889179474267987968:ok]))))</cols>
      </table>
      <simple-id uuid='{8DC4007B-3FAF-4BA6-9574-498A04CE69F5}' />
    </worksheet>
    <worksheet name='State of Charge'>
      <table>
        <view>
          <datasources>
            <datasource caption='tab_dam_generator_power_combined' name='federated.0m2ojda1ih48r312ma38r1hlijh9' />
          </datasources>
          <datasource-dependencies datasource='federated.0m2ojda1ih48r312ma38r1hlijh9'>
            <column datatype='string' name='[Attribute]' role='dimension' type='nominal' />
            <column caption='Charging Time' datatype='string' name='[Calculation_1086493432799272960]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-evening-&quot;) THEN&#13;&#10;  &quot;12-6 PM&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-morning&quot;) THEN&#13;&#10;  &quot;12-6 AM&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='Charging Type' datatype='string' name='[Calculation_1086493432799367169]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-flexible&quot;) THEN&#13;&#10;  &quot;Flexible&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-inflexible&quot;) THEN&#13;&#10;  &quot;Inflexible&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='EV Adoption Level' datatype='string' name='[Calculation_1086493432800079874]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;low-&quot;) THEN&#13;&#10;  &quot;Low&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;med-&quot;) THEN&#13;&#10;  &quot;Med&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;high-&quot;) THEN&#13;&#10;  &quot;High&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='Representative Days' datatype='datetime' name='[Calculation_1086493432800321539]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF [Timeblock]==&quot;t1&quot; THEN DATEPARSE(&quot;dd.MMMM.yyyy&quot;,&quot;21.April.2037&quot;)&#13;&#10;ELSEIF [Timeblock]==&quot;t2&quot; THEN DATEPARSE(&quot;dd.MMMM.yyyy&quot;,&quot;15.June.2037&quot;)&#13;&#10;ELSEIF [Timeblock]==&quot;t3&quot; THEN DATEPARSE(&quot;dd.MMMM.yyyy&quot;,&quot;13.October.2037&quot;)&#13;&#10;ELSEIF [Timeblock]==&quot;t4&quot; THEN DATEPARSE(&quot;dd.MMMM.yyyy&quot;,&quot;12.December.2037&quot;)&#13;&#10;END' />
            </column>
            <column caption='Time Interval' datatype='string' name='[Calculation_1086493432800645124]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Timeblock]==&quot;t1&quot; THEN&#13;&#10;  [Attribute]&#13;&#10;ELSEIF [Timeblock]==&quot;t2&quot; THEN&#13;&#10;  &quot;t&quot;+STR(INT(RIGHT([Attribute],LEN([Attribute])-1)))&#13;&#10;ELSEIF [Timeblock]==&quot;t3&quot; THEN&#13;&#10;  &quot;t&quot;+STR(INT(RIGHT([Attribute],LEN([Attribute])-1)))&#13;&#10;ELSE&#13;&#10;  &quot;t&quot;+STR(INT(RIGHT([Attribute],LEN([Attribute])-1)))&#13;&#10;END' />
            </column>
            <column caption='Date Time' datatype='datetime' name='[Calculation_889179474267987968]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATEADD(&apos;hour&apos;,INT(RIGHT([Calculation_1086493432800645124],LEN([Calculation_1086493432800645124])-1))-1,[Calculation_1086493432800321539])' />
            </column>
            <column caption='Storage Level' datatype='real' name='[Calculation_889179474278793218]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_storage_unit_soc_combined.csv&quot; THEN&#13;&#10;  [Value]&#13;&#10;END' />
            </column>
            <column caption='Max Storage Level' datatype='real' name='[Calculation_889179474279444483]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_storage_unit_soc_combined.csv&quot; THEN&#13;&#10;  {FIXED [Resource],[Zone]: MAX([Value])}&#13;&#10;END' />
            </column>
            <column caption='State of Charge' datatype='real' name='[Calculation_889179474279563268]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_889179474278793218]/[Calculation_889179474279444483]' />
            </column>
            <column caption='Weighted State of Charge' datatype='real' name='[Calculation_889179474279690245]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Sum([Calculation_889179474279563268]*[Calculation_889179474279444483])/SUM([Calculation_889179474279444483])' />
            </column>
            <column caption='Storage Label' datatype='string' name='[Calculation_889179474280439814]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_storage_unit_soc_combined.csv&quot; THEN&#13;&#10;  [Resource]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Resource]' role='dimension' type='nominal' />
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Timeblock]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column aggregation='Sum' datatype='integer' name='[Zone]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_889179474267987968]' derivation='Day' name='[dy:Calculation_889179474267987968:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_889179474267987968]' derivation='Hour' name='[hr:Calculation_889179474267987968:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_889179474267987968]' derivation='Month' name='[mn:Calculation_889179474267987968:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1086493432799272960]' derivation='None' name='[none:Calculation_1086493432799272960:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1086493432799367169]' derivation='None' name='[none:Calculation_1086493432799367169:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1086493432800079874]' derivation='None' name='[none:Calculation_1086493432800079874:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_889179474280439814]' derivation='None' name='[none:Calculation_889179474280439814:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_889179474267987968]' derivation='Quarter' name='[qr:Calculation_889179474267987968:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_889179474279690245]' derivation='User' name='[usr:Calculation_889179474279690245:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_889179474267987968]' derivation='Year' name='[yr:Calculation_889179474267987968:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[mn:Calculation_889179474267987968:ok]'>
            <groupfilter function='member' level='[mn:Calculation_889179474267987968:ok]' member='12' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;None&quot;</bucket>
              <bucket>&quot;Med&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;default-L-H-8-1275&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;med-night-L-H-8-1275-flexible&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0m2ojda1ih48r312ma38r1hlijh9].[mn:Calculation_889179474267987968:ok]</column>
            <column>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_889179474280439814:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>(([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk] / [federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk])) * [federated.0m2ojda1ih48r312ma38r1hlijh9].[usr:Calculation_889179474279690245:qk])</rows>
        <cols>([federated.0m2ojda1ih48r312ma38r1hlijh9].[yr:Calculation_889179474267987968:ok] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[qr:Calculation_889179474267987968:ok] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[mn:Calculation_889179474267987968:ok] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[dy:Calculation_889179474267987968:ok] / [federated.0m2ojda1ih48r312ma38r1hlijh9].[hr:Calculation_889179474267987968:ok]))))</cols>
      </table>
      <simple-id uuid='{4798B9FC-87CC-4355-8716-BCDF2D867AF9}' />
    </worksheet>
    <worksheet name='Unmet Demand'>
      <table>
        <view>
          <datasources>
            <datasource caption='tab_dam_generator_power_combined' name='federated.0m2ojda1ih48r312ma38r1hlijh9' />
          </datasources>
          <datasource-dependencies datasource='federated.0m2ojda1ih48r312ma38r1hlijh9'>
            <column caption='Charging Time' datatype='string' name='[Calculation_1086493432799272960]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-evening-&quot;) THEN&#13;&#10;  &quot;12-6 PM&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-morning&quot;) THEN&#13;&#10;  &quot;12-6 AM&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='Charging Type' datatype='string' name='[Calculation_1086493432799367169]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-flexible&quot;) THEN&#13;&#10;  &quot;Flexible&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-inflexible&quot;) THEN&#13;&#10;  &quot;Inflexible&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='EV Adoption Level' datatype='string' name='[Calculation_1086493432800079874]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;low-&quot;) THEN&#13;&#10;  &quot;Low&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;med-&quot;) THEN&#13;&#10;  &quot;Med&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;high-&quot;) THEN&#13;&#10;  &quot;High&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='VRE Addition' datatype='string' name='[Calculation_803611097201504256]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;wind&quot;) THEN&#13;&#10;  &quot;Added Wind&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;solar&quot;) THEN&#13;&#10;  &quot;Added Solar&quot;&#13;&#10;ELSE&#13;&#10;  &quot;Default VRE&quot;&#13;&#10;END' />
            </column>
            <column caption='Generation for Load [MW]' datatype='real' name='[Calculation_884112924427558912]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_generator_power_combined.csv&quot; THEN&#13;&#10;  IF [Resource]==&quot;Curtailment&quot; THEN&#13;&#10;    -1*Value&#13;&#10;  ELSE&#13;&#10;    [Value]&#13;&#10;  END&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; THEN&#13;&#10;  [Value]&#13;&#10;END' />
            </column>
            <column caption='Generation Labels' datatype='string' name='[Calculation_884112924428046337]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_generator_power_combined.csv&quot; THEN&#13;&#10;  [Resource]&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&gt;=0 THEN&#13;&#10;  [Resource]&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&lt;0 THEN&#13;&#10;   [Resource]+&quot; Charging&quot;&#13;&#10;END' />
            </column>
            <column caption='Weighted Generation for Load [MW]' datatype='real' name='[Calculation_884112924430045186]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_931963670410043401]*[Calculation_884112924427558912]' />
            </column>
            <column caption='Weights' datatype='real' name='[Calculation_931963670410043401]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Timeblock]&#13;&#10;  WHEN &quot;t1&quot; THEN 36 &#13;&#10;  WHEN &quot;t2&quot; THEN 14&#13;&#10;  WHEN &quot;t3&quot; THEN 9.18368717&#13;&#10;  WHEN &quot;t4&quot; THEN 13&#13;&#10;END' />
            </column>
            <column caption='Generation Labels (group)' datatype='string' name='[Generation Labels (group) (copy)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Calculation_884112924428046337]' new-bin='true'>
                <bin default-name='false' value='&quot;Batteries&quot;'>
                  <value>&quot;Batteries&quot;</value>
                  <value>&quot;Batteries Charging&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;CCGT&quot;'>
                  <value>&quot;CCGT New&quot;</value>
                  <value>&quot;CCGT Old&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Coal&quot;'>
                  <value>&quot;Coal new&quot;</value>
                  <value>&quot;Coal Old&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Diesel&quot;'>
                  <value>&quot;Backup&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Hydro&quot;'>
                  <value>&quot;Hydro Reservoir&quot;</value>
                  <value>&quot;Hydro Reservoir Charging&quot;</value>
                  <value>&quot;Hydro Run of River&quot;</value>
                  <value>&quot;Pumped Hydro Storage&quot;</value>
                  <value>&quot;Pumped Hydro Storage Charging&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Nuclear&quot;'>
                  <value>&quot;Nuclear New&quot;</value>
                  <value>&quot;Nuclear Old&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Other &quot;'>
                  <value>&quot;Biomass&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Solar&quot;'>
                  <value>&quot;Curtailment&quot;</value>
                  <value>&quot;Solar&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Resource]' role='dimension' type='nominal' />
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Timeblock]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1086493432799272960]' derivation='None' name='[none:Calculation_1086493432799272960:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1086493432799367169]' derivation='None' name='[none:Calculation_1086493432799367169:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1086493432800079874]' derivation='None' name='[none:Calculation_1086493432800079874:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_803611097201504256]' derivation='None' name='[none:Calculation_803611097201504256:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_884112924430045186]' derivation='Sum' name='[pcto:sum:Calculation_884112924430045186:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_884112924430045186]' derivation='Sum' name='[sum:Calculation_884112924430045186:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group) (copy)]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Generation Labels (group) (copy)]' />
              <groupfilter function='union'>
                <groupfilter from='&quot;Batteries&quot;' function='range' level='[Generation Labels (group) (copy)]' to='&quot;Solar&quot;' />
                <groupfilter function='member' level='[Generation Labels (group) (copy)]' member='&quot;Wind&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group) (copy)]' direction='ASC'>
            <dictionary>
              <bucket>%null%</bucket>
              <bucket>&quot;Unmet Demand&quot;</bucket>
              <bucket>&quot;Curtailment&quot;</bucket>
              <bucket>&quot;Solar&quot;</bucket>
              <bucket>&quot;Wind&quot;</bucket>
              <bucket>&quot;Batteries&quot;</bucket>
              <bucket>&quot;Diesel&quot;</bucket>
              <bucket>&quot;Other &quot;</bucket>
              <bucket>&quot;CCGT&quot;</bucket>
              <bucket>&quot;Hydro&quot;</bucket>
              <bucket>&quot;Coal&quot;</bucket>
              <bucket>&quot;Nuclear&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_1086493432799272960:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_1086493432799367169:nk]' member='&quot;Flexible&quot;' />
              <groupfilter function='member' level='[none:Calculation_1086493432799367169:nk]' member='&quot;Inflexible&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_1086493432800079874:nk]' />
          </filter>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;None&quot;</bucket>
              <bucket>&quot;Med&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_803611097201504256:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_803611097201504256:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]'>
            <groupfilter function='level-members' level='[none:Scenario:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]</column>
            <column>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk]</column>
            <column>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk]</column>
            <column>[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group) (copy)]</column>
            <column>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]</column>
            <column>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_803611097201504256:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0m2ojda1ih48r312ma38r1hlijh9].[pcto:sum:Calculation_884112924430045186:qk:2]' value='p0%' />
            <format attr='width' field='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_803611097201504256:nk]' value='54' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group) (copy)]' />
              <text column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[pcto:sum:Calculation_884112924430045186:qk:2]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_884112924430045186:qk]</rows>
        <cols>([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk] / [federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_803611097201504256:nk])))</cols>
      </table>
      <simple-id uuid='{C3192725-CCA9-46B3-941E-608F2409E605}' />
    </worksheet>
    <worksheet name='Weighted Load'>
      <table>
        <view>
          <datasources>
            <datasource caption='tab_dam_generator_power_combined' name='federated.0m2ojda1ih48r312ma38r1hlijh9' />
          </datasources>
          <datasource-dependencies datasource='federated.0m2ojda1ih48r312ma38r1hlijh9'>
            <column caption='Charging Time' datatype='string' name='[Calculation_1086493432799272960]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-evening-&quot;) THEN&#13;&#10;  &quot;12-6 PM&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-morning&quot;) THEN&#13;&#10;  &quot;12-6 AM&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='Charging Type' datatype='string' name='[Calculation_1086493432799367169]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-flexible&quot;) THEN&#13;&#10;  &quot;Flexible&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-inflexible&quot;) THEN&#13;&#10;  &quot;Inflexible&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='EV Adoption Level' datatype='string' name='[Calculation_1086493432800079874]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;low-&quot;) THEN&#13;&#10;  &quot;Low&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;med-&quot;) THEN&#13;&#10;  &quot;Med&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;high-&quot;) THEN&#13;&#10;  &quot;High&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='VRE Addition' datatype='string' name='[Calculation_803611097201504256]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;wind&quot;) THEN&#13;&#10;  &quot;Added Wind&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;solar&quot;) THEN&#13;&#10;  &quot;Added Solar&quot;&#13;&#10;ELSE&#13;&#10;  &quot;Default VRE&quot;&#13;&#10;END' />
            </column>
            <column caption='Charging [MW]' datatype='real' name='[Calculation_884112924457828355]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&lt;0 THEN&#13;&#10;  [Value]&#13;&#10;ELSE&#13;&#10;  0&#13;&#10;END' />
            </column>
            <column caption='Inflexible Load [MW]' datatype='real' name='[Calculation_931963670409289734]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_loads_combined.csv&quot; THEN&#13;&#10;  [Value]&#13;&#10;ELSE&#13;&#10;  0&#13;&#10;END' />
            </column>
            <column caption='Flexible Load [MW]' datatype='real' name='[Calculation_931963670409551879]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_demand_response_load_combined.csv&quot; THEN&#13;&#10;  [Value]&#13;&#10;ELSE&#13;&#10;  0&#13;&#10;END' />
            </column>
            <column caption='Load Labels' datatype='string' name='[Calculation_931963670409670664]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_loads_combined.csv&quot; THEN&#13;&#10;  &quot;Inflexible&quot;&#13;&#10;ELSEIF [Table Name]==&quot;tab_dam_demand_response_load_combined.csv&quot; THEN&#13;&#10;  &quot;Flexible&quot;&#13;&#10;ELSEIF [Table Name]==&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&lt;0 THEN&#13;&#10;  &quot;Charging&quot;&#13;&#10;END' />
            </column>
            <column caption='Weights' datatype='real' name='[Calculation_931963670410043401]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Timeblock]&#13;&#10;  WHEN &quot;t1&quot; THEN 36 &#13;&#10;  WHEN &quot;t2&quot; THEN 14&#13;&#10;  WHEN &quot;t3&quot; THEN 9.18368717&#13;&#10;  WHEN &quot;t4&quot; THEN 13&#13;&#10;END' />
            </column>
            <column caption='Total Load [MW]' datatype='real' name='[Calculation_931963670410522634]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_931963670409551879]+[Calculation_931963670409289734]-[Calculation_884112924457828355]' />
            </column>
            <column caption='Weighted Load [MW]' datatype='real' name='[Calculation_931963670410706955]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_931963670410043401]*[Calculation_931963670410522634]' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Timeblock]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1086493432799272960]' derivation='None' name='[none:Calculation_1086493432799272960:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1086493432799367169]' derivation='None' name='[none:Calculation_1086493432799367169:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1086493432800079874]' derivation='None' name='[none:Calculation_1086493432800079874:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_803611097201504256]' derivation='None' name='[none:Calculation_803611097201504256:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_931963670409670664]' derivation='None' name='[none:Calculation_931963670409670664:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_931963670410706955]' derivation='Sum' name='[sum:Calculation_931963670410706955:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_1086493432800079874:nk]' />
          </filter>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;None&quot;</bucket>
              <bucket>&quot;Med&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_803611097201504256:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_803611097201504256:nk]' />
          </filter>
          <filter class='categorical' column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_931963670409670664:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_931963670409670664:nk]' />
              <groupfilter function='member' level='[none:Calculation_931963670409670664:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_931963670409670664:nk]</column>
            <column>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_803611097201504256:nk]</column>
            <column>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_931963670409670664:nk]' />
              <text column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_931963670410706955:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_931963670410706955:qk]</rows>
        <cols>([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk] / [federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_803611097201504256:nk])))</cols>
      </table>
      <simple-id uuid='{D20E3FAC-BC3D-4C5E-AF64-5AB27D23BEEB}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Load Duration Curves'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='tab_dam_generator_power_combined' name='federated.0m2ojda1ih48r312ma38r1hlijh9' />
      </datasources>
      <datasource-dependencies datasource='federated.0m2ojda1ih48r312ma38r1hlijh9'>
        <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
        <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='5' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='3' type='layout-basic' w='82400' x='800' y='1000'>
              <zone h='49000' id='1' name='Net Load Duration inflexible' w='82400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='7' name='Net Load Duration flexible' w='82400' x='800' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='4' is-fixed='true' param='vert' type='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='49000' id='6' name='Net Load Duration inflexible' param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]' type='filter' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                  <format attr='background-color' value='#ffffff' />
                </zone-style>
              </zone>
              <zone h='49000' id='8' name='Net Load Duration flexible' param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]' type='filter' w='16000' x='83200' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                  <format attr='background-color' value='#ffffff' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{57EFBDF4-0229-446A-B48B-8CE6FF01EF98}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Load'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='100'>
            <card param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_803611097201504256:nk]' type='filter' />
            <card pane-specification-id='1' param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_931963670409670664:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_803611097201504256:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_931963670409670664:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{364D6FFF-3EA5-41AF-B33A-219C6D8FB0CD}' />
    </window>
    <window class='worksheet' name='Load for Storage'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_931963670409670664:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_803611097201504256:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_931963670409670664:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Timeblock:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{59E472A1-26FF-4A80-9B4C-99FE160DEC3E}' />
    </window>
    <window class='worksheet' name='Weighted Load'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]' type='filter' />
            <card param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_803611097201504256:nk]' type='filter' />
            <card pane-specification-id='1' param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_931963670409670664:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_803611097201504256:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_931963670409670664:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3C87C163-E6B0-4FF7-A76D-F8555F248314}' />
    </window>
    <window class='worksheet' name='Dispatch with Load'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='35'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='240'>
            <card param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk]' type='filter' />
            <card param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_803611097201504256:nk]' type='filter' />
            <card param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]' type='filter' />
            <card param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[mn:Calculation_889179474267987968:ok]' type='filter' />
            <card pane-specification-id='2' param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[:Measure Names]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[mn:Calculation_889179474267987968:ok]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Attribute:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800321539:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800645124:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_803611097201504256:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Timeblock:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[tyr:Calculation_889179474267987968:qk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[yr:Calculation_889179474267987968:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D892E6A1-35D3-4E79-8AAD-66ECD3C7D847}' />
    </window>
    <window class='worksheet' name='Dispatch with Load (no charging)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='48'>
            <card type='columns' />
          </strip>
          <strip size='36'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='250'>
            <card param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk]' type='filter' />
            <card param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]' type='filter' />
            <card param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk]' type='filter' />
            <card param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_803611097201504256:nk]' type='filter' />
            <card param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Representative Days (copy):nk]' type='filter' />
            <card pane-specification-id='2' param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[:Measure Names]' type='color' />
            <card pane-specification-id='1' param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[:Measure Names]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group)]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Attribute:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800321539:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800645124:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_803611097201504256:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Timeblock:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[tyr:Calculation_889179474267987968:qk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[yr:Calculation_889179474267987968:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5FE2BC45-BB5D-4629-94A5-D7B132965C25}' />
    </window>
    <window class='worksheet' name='Dispatch with Price'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]' type='filter' />
            <card pane-specification-id='2' param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[:Measure Names]' type='color' />
            <card pane-specification-id='1' param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[:Measure Names]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Attribute:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800321539:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800645124:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Timeblock:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[tyr:Calculation_889179474267987968:qk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[yr:Calculation_889179474267987968:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F7B21278-5EB6-44EE-96B8-1A52FF33F0AE}' />
    </window>
    <window class='worksheet' name='Price'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]' type='filter' />
            <card pane-specification-id='2' param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Attribute:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800321539:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800645124:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Timeblock:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[tyr:Calculation_889179474267987968:qk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[yr:Calculation_889179474267987968:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CE4DB763-114F-4368-80EB-C96B606F9BF7}' />
    </window>
    <window class='worksheet' name='Price (table)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{08CA8AC4-3189-4C41-A333-4822099FF7B2}' />
    </window>
    <window class='worksheet' name='Annual Generation (Absolute) by Type'>
      <cards>
        <edge name='left'>
          <strip size='244'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_803611097201504256:nk]' type='filter' />
            <card param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]' type='filter' />
            <card param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Representative Days (copy):nk]' type='filter' />
            <card param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk]' type='filter' />
            <card param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk]' type='filter' />
            <card pane-specification-id='1' param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group) (copy)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[:Measure Names]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group) (copy)]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Attribute:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_803611097201504256:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Timeblock:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{52FAD36B-F799-4516-8C19-7B1275ED2157}' />
    </window>
    <window class='worksheet' name='Unmet Demand'>
      <cards>
        <edge name='left'>
          <strip size='244'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_803611097201504256:nk]' type='filter' />
            <card param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]' type='filter' />
            <card param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk]' type='filter' />
            <card param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk]' type='filter' />
            <card pane-specification-id='1' param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group) (copy)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[:Measure Names]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group) (copy)]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Attribute:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_803611097201504256:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Timeblock:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9D3ECA8A-190F-4C6F-AA43-E3B405033B10}' />
    </window>
    <window class='worksheet' name='Annual Generation (Percentage) by Type'>
      <cards>
        <edge name='left'>
          <strip size='244'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group) (copy)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[:Measure Names]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group) (copy)]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Attribute:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_803611097201504256:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Timeblock:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C351662A-5563-4D6F-BB80-EF16B262F0CD}' />
    </window>
    <window class='worksheet' name='Generation (Absolute) by Type'>
      <cards>
        <edge name='left'>
          <strip size='244'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_803611097201504256:nk]' type='filter' />
            <card pane-specification-id='1' param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group) (copy)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[:Measure Names]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group) (copy)]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Attribute:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_803611097201504256:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Representative Days (copy):nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Timeblock:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[yr:Calculation_1086493432800321539:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8E7195A0-DFDA-4DF2-8E3E-82AF5DB30F44}' />
    </window>
    <window class='worksheet' name='Generation (Percentage) by Type'>
      <cards>
        <edge name='left'>
          <strip size='244'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Representative Days (copy):nk]' type='filter' />
            <card param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_803611097201504256:nk]' type='filter' />
            <card pane-specification-id='1' param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group) (copy)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[:Measure Names]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group) (copy)]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Attribute:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_803611097201504256:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Representative Days (copy):nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Timeblock:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D07C2676-3872-4FF3-BB80-18250A501A06}' />
    </window>
    <window class='worksheet' name='State of Charge'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_889179474280439814:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group) (copy)]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[mn:Calculation_889179474267987968:ok]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_889179474280439814:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[yr:Calculation_889179474267987968:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{20378E64-8CDF-4112-8CD1-6772EB553AD3}' />
    </window>
    <window class='worksheet' maximized='true' name='Net Load Duration inflexible'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='258'>
            <card param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[avg:Calculation_889179474271539201:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[avg:Calculation_889179474271539201:qk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Attribute:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Resource:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3DB457C3-02DA-470B-8DEC-4CEA2B1AD1A7}' />
    </window>
    <window class='worksheet' name='Net Load Duration flexible'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='258'>
            <card param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[avg:Calculation_889179474271539201:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[avg:Calculation_889179474271539201:qk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Attribute:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Resource:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E2493FFE-3449-46FE-9C70-A64D0C9A540E}' />
    </window>
    <window class='dashboard' name='Load Duration Curves'>
      <viewpoints>
        <viewpoint name='Net Load Duration flexible'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Net Load Duration inflexible'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{F58D72AF-0E22-4709-807B-FC099243BA91}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Annual Generation (Absolute) by Type' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Annual Generation (Percentage) by Type' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Dispatch with Load' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dispatch with Load (no charging)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dispatch with Price' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Generation (Absolute) by Type' width='192'>
      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
      MHZl2wAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Generation (Percentage) by Type' width='192'>
      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
      Xzsa5ISUPbsTAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Load' width='192'>
      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
      M13g/wecNDxE/OXX2wAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Load Duration Curves' width='192'>
      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
      eNkAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Load for Storage' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Net Load Duration flexible' width='192'>
      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
      bdDvkc7m+Ru8gXUQ8o4V+gAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Net Load Duration inflexible' width='192'>
      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
      hwUAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Price' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Price (table)' width='192'>
      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
      7vcAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='State of Charge' width='384'>
      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
      BPv62ZMOSjMAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Unmet Demand' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Weighted Load' width='192'>
      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
      Bsn/H8lYXvpL7m+1AAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
