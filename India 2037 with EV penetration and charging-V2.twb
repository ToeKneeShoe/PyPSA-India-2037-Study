<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20194.20.0323.1706                               -->
<workbook original-version='18.1' source-build='2019.4.5 (20194.20.0323.1706)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='tab_dam_generator_power_combined' inline='true' name='federated.0m2ojda1ih48r312ma38r1hlijh9' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='tab_dam_generator_power_combined' name='textscan.0yqfx1x1ihmfyd180dyq61xv4d9s'>
            <connection class='textscan' directory='D:/Research-Local/8-23-2019-power-systems/simulation_outputs/FinalResults/L,L,11,1275-combined-results' filename='tab_dam_generator_power_combined.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation all='true' name='tab_dam_generator_power_combined.csv+' type='union'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='Zone' />
            <column datatype='string' name='Attribute' />
            <column datatype='real' name='Value' />
            <column datatype='string' name='Timeblock' />
            <column datatype='string' name='Scenario' />
            <column datatype='string' name='Resource' />
            <column datatype='string' name='Table Name' />
          </columns>
          <relation connection='textscan.0yqfx1x1ihmfyd180dyq61xv4d9s' name='tab_dam_demand_response_load_combined.csv' table='[tab_dam_demand_response_load_combined#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='Zone' ordinal='0' />
              <column datatype='string' name='Attribute' ordinal='1' />
              <column datatype='real' name='Value' ordinal='2' />
              <column datatype='string' name='Timeblock' ordinal='3' />
              <column datatype='string' name='Scenario' ordinal='4' />
            </columns>
          </relation>
          <relation connection='textscan.0yqfx1x1ihmfyd180dyq61xv4d9s' name='tab_dam_generator_power_combined.csv' table='[tab_dam_generator_power_combined#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='Resource' ordinal='0' />
              <column datatype='integer' name='Zone' ordinal='1' />
              <column datatype='string' name='Attribute' ordinal='2' />
              <column datatype='real' name='Value' ordinal='3' />
              <column datatype='string' name='Timeblock' ordinal='4' />
              <column datatype='string' name='Scenario' ordinal='5' />
            </columns>
          </relation>
          <relation connection='textscan.0yqfx1x1ihmfyd180dyq61xv4d9s' name='tab_dam_loads_combined.csv' table='[tab_dam_loads_combined#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='Zone' ordinal='0' />
              <column datatype='string' name='Attribute' ordinal='1' />
              <column datatype='real' name='Value' ordinal='2' />
              <column datatype='string' name='Timeblock' ordinal='3' />
              <column datatype='string' name='Scenario' ordinal='4' />
            </columns>
          </relation>
          <relation connection='textscan.0yqfx1x1ihmfyd180dyq61xv4d9s' name='tab_dam_prices_combined.csv' table='[tab_dam_prices_combined#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='Zone' ordinal='0' />
              <column datatype='string' name='Attribute' ordinal='1' />
              <column datatype='real' name='Value' ordinal='2' />
              <column datatype='string' name='Timeblock' ordinal='3' />
              <column datatype='string' name='Scenario' ordinal='4' />
            </columns>
          </relation>
          <relation connection='textscan.0yqfx1x1ihmfyd180dyq61xv4d9s' name='tab_dam_storage_unit_soc_combined.csv' table='[tab_dam_storage_unit_soc_combined#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='Resource' ordinal='0' />
              <column datatype='integer' name='Zone' ordinal='1' />
              <column datatype='string' name='Attribute' ordinal='2' />
              <column datatype='real' name='Value' ordinal='3' />
              <column datatype='string' name='Timeblock' ordinal='4' />
              <column datatype='string' name='Scenario' ordinal='5' />
            </columns>
          </relation>
          <relation connection='textscan.0yqfx1x1ihmfyd180dyq61xv4d9s' name='tab_dam_storage_unit_power_combined.csv' table='[tab_dam_storage_unit_power_combined#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='Resource' ordinal='0' />
              <column datatype='integer' name='Zone' ordinal='1' />
              <column datatype='string' name='Attribute' ordinal='2' />
              <column datatype='real' name='Value' ordinal='3' />
              <column datatype='string' name='Timeblock' ordinal='4' />
              <column datatype='string' name='Scenario' ordinal='5' />
            </columns>
          </relation>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[tab_dam_generator_power_combined.csv+]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Zone</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Zone]</local-name>
            <parent-name>[tab_dam_generator_power_combined.csv+]</parent-name>
            <remote-alias>Zone</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Attribute</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Attribute]</local-name>
            <parent-name>[tab_dam_generator_power_combined.csv+]</parent-name>
            <remote-alias>Attribute</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Value]</local-name>
            <parent-name>[tab_dam_generator_power_combined.csv+]</parent-name>
            <remote-alias>Value</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Timeblock</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Timeblock]</local-name>
            <parent-name>[tab_dam_generator_power_combined.csv+]</parent-name>
            <remote-alias>Timeblock</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Scenario</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Scenario]</local-name>
            <parent-name>[tab_dam_generator_power_combined.csv+]</parent-name>
            <remote-alias>Scenario</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Resource</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Resource]</local-name>
            <parent-name>[tab_dam_generator_power_combined.csv+]</parent-name>
            <remote-alias>Resource</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Table Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Table Name]</local-name>
            <parent-name>[tab_dam_generator_power_combined.csv+]</parent-name>
            <remote-alias>Table Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='SO2 emissions [Mt]' datatype='real' name='[CO2 emissions [Mt]] (copy) (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[CO2 emissions [tons/MMBtu]] (copy)]*[Calculation_890868329752530945]*[Calculation_884112924430045186]/1e6' />
      </column>
      <column caption='NOx emissions [Mt]' datatype='real' name='[CO2 emissions [Mt]] (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[SO2 emissions [kg/MMBtu]] (copy)]*[Calculation_890868329752530945]*[Calculation_884112924430045186]/1e6' />
      </column>
      <column caption='SO2 emissions [kg/MMBtu]' datatype='real' name='[CO2 emissions [tons/MMBtu]] (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Calculation_890868329750093824]=&quot;coal&quot; THEN 0.033136423&#13;&#10;ELSEIF [Calculation_890868329750093824]=&quot;natural_gas&quot; THEN 0.001496855&#13;&#10;ELSEIF [Calculation_890868329750093824]=&quot;diesel&quot; THEN 0.135624119&#13;&#10;ELSEIF [Calculation_890868329750093824]=&quot;biomass&quot; THEN 0.03628739&#13;&#10;ELSE 0&#13;&#10;END' />
      </column>
      <column caption='VRE (non-curtailed)' datatype='real' name='[Calculation_1044553664332267520]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Resource]==&quot;Solar&quot; OR [Resource]==&quot;Wind&quot; THEN&#13;&#10;  [Value]&#13;&#10;ELSEIF [Resource]==&quot;Curtailment&quot; THEN&#13;&#10;  -1*[Value]&#13;&#10;ELSE&#13;&#10;  0&#13;&#10;END' />
      </column>
      <column caption='Unmet Demand' datatype='real' name='[Calculation_1044553664333684737]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Resource]==&quot;Unmet Demand&quot; THEN&#13;&#10;  [Value]&#13;&#10;ELSE&#13;&#10;  0&#13;&#10;END' />
      </column>
      <column caption='Served Load' datatype='real' name='[Calculation_1044553664334561282]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_931963670410522634]-[Calculation_1044553664333684737]' />
      </column>
      <column caption='Net Served Load [MW]' datatype='real' name='[Calculation_1044553664334868483]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_1044553664334561282]-[Calculation_1044553664332267520]' />
      </column>
      <column caption='Charging Time' datatype='string' name='[Calculation_1086493432799272960]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-morning-&quot;) THEN&#13;&#10;  &quot;12-3 AM&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-evening-&quot;) THEN&#13;&#10;  &quot;12-3 PM&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
      </column>
      <column caption='Charging Type' datatype='string' name='[Calculation_1086493432799367169]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-flexible&quot;) THEN&#13;&#10;  &quot;Flexible&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-inflexible&quot;) THEN&#13;&#10;  &quot;Inflexible&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
      </column>
      <column caption='EV Adoption Level' datatype='string' name='[Calculation_1086493432800079874]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-low-&quot;) THEN&#13;&#10;  &quot;Low&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-med-&quot;) THEN&#13;&#10;  &quot;Med&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-high-&quot;) THEN&#13;&#10;  &quot;High&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
      </column>
      <column caption='Representative Days' datatype='datetime' name='[Calculation_1086493432800321539]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='IF [Timeblock]==&quot;t1&quot; THEN DATEPARSE(&quot;dd.MMMM.yyyy&quot;,&quot;21.April.2037&quot;)&#13;&#10;ELSEIF [Timeblock]==&quot;t2&quot; THEN DATEPARSE(&quot;dd.MMMM.yyyy&quot;,&quot;15.June.2037&quot;)&#13;&#10;ELSEIF [Timeblock]==&quot;t3&quot; THEN DATEPARSE(&quot;dd.MMMM.yyyy&quot;,&quot;13.October.2037&quot;)&#13;&#10;ELSEIF [Timeblock]==&quot;t4&quot; THEN DATEPARSE(&quot;dd.MMMM.yyyy&quot;,&quot;12.December.2037&quot;)&#13;&#10;END' />
      </column>
      <column caption='Time Interval' datatype='string' name='[Calculation_1086493432800645124]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Timeblock]==&quot;t1&quot; THEN&#13;&#10;  [Attribute]&#13;&#10;ELSEIF [Timeblock]==&quot;t2&quot; THEN&#13;&#10;  &quot;t&quot;+STR(120+INT(RIGHT([Attribute],LEN([Attribute])-1)))&#13;&#10;ELSEIF [Timeblock]==&quot;t3&quot; THEN&#13;&#10;  &quot;t&quot;+STR(240+INT(RIGHT([Attribute],LEN([Attribute])-1)))&#13;&#10;ELSE&#13;&#10;  &quot;t&quot;+STR(360+INT(RIGHT([Attribute],LEN([Attribute])-1)))&#13;&#10;END' />
      </column>
      <column caption='Curtailment' datatype='real' name='[Calculation_430093791531491328]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_generator_power_combined.csv&quot; AND [Resource]==&quot;Curtailment&quot; THEN&#13;&#10;  [Value]&#13;&#10;ELSE&#13;&#10;  0&#13;&#10;END' />
      </column>
      <column caption='Curtailed VRE [MW]' datatype='real' name='[Calculation_430093791532744705]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_430093791531491328]+[Calculation_918452871620472832]' />
      </column>
      <column caption='Weighted Generation For Load [TW]' datatype='real' name='[Calculation_495677469396586496]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_884112924430045186]/1000000' />
      </column>
      <column caption='Generation for Load [MW]' datatype='real' name='[Calculation_884112924427558912]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_generator_power_combined.csv&quot; THEN&#13;&#10;  IF [Resource]==&quot;Curtailment&quot; THEN&#13;&#10;    -1*Value&#13;&#10;  ELSE&#13;&#10;    [Value]&#13;&#10;  END&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; THEN&#13;&#10;  [Value]&#13;&#10;END' />
      </column>
      <column caption='Generation Labels' datatype='string' name='[Calculation_884112924428046337]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_generator_power_combined.csv&quot; THEN&#13;&#10;  [Resource]&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&gt;=0 THEN&#13;&#10;  [Resource]&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&lt;0 THEN&#13;&#10;   [Resource]+&quot; Charging&quot;&#13;&#10;END' />
      </column>
      <column caption='Weighted Generation for Load [MW]' datatype='real' name='[Calculation_884112924430045186]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_931963670410043401]*[Calculation_884112924427558912]' />
      </column>
      <column caption='Charging Grid Batteries / PHS [MW]' datatype='real' name='[Calculation_884112924457828355]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&lt;0 AND [Resource]!=&quot;Hydro Reservoir&quot; THEN&#13;&#10;  [Value]&#13;&#10;ELSE&#13;&#10;  0&#13;&#10;END' />
      </column>
      <column caption='Date Time' datatype='datetime' name='[Calculation_889179474267987968]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATEADD(&apos;hour&apos;,INT(RIGHT([Calculation_1086493432800645124],LEN([Calculation_1086493432800645124])-1))-1,[Calculation_1086493432800321539])' />
      </column>
      <column caption='Price [$/MWh]' datatype='real' name='[Calculation_889179474271539201]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_prices_combined.csv&quot; THEN&#13;&#10;  [Value]&#13;&#10;END' />
      </column>
      <column caption='Storage Level [MW]' datatype='real' name='[Calculation_889179474278793218]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_storage_unit_soc_combined.csv&quot; THEN&#13;&#10;  [Value]&#13;&#10;END' />
      </column>
      <column caption='Max Storage Level [MW]' datatype='real' name='[Calculation_889179474279444483]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_storage_unit_soc_combined.csv&quot; THEN&#13;&#10;  {FIXED [Resource],[Zone]: MAX([Value])}&#13;&#10;END' />
      </column>
      <column caption='State of Charge' datatype='real' name='[Calculation_889179474279563268]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_889179474278793218]/[Calculation_889179474279444483]' />
      </column>
      <column caption='Weighted State of Charge' datatype='real' name='[Calculation_889179474279690245]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='Sum([Calculation_889179474279563268]*[Calculation_889179474279444483])/SUM([Calculation_889179474279444483])' />
      </column>
      <column caption='Storage Label' datatype='string' name='[Calculation_889179474280439814]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_storage_unit_soc_combined.csv&quot; THEN&#13;&#10;  [Resource]&#13;&#10;END' />
      </column>
      <column caption='Fuel Type' datatype='string' name='[Calculation_890868329750093824]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [Calculation_884112924428046337]&#13;&#10;  WHEN &quot;Backup&quot; THEN &quot;diesel&quot;&#13;&#10;  WHEN &quot;Batteries&quot; THEN &quot;none&quot;&#13;&#10;  WHEN &quot;Batteries Charging&quot; THEN &quot;none&quot;&#13;&#10;  WHEN &quot;Biomass&quot; THEN &quot;biomass&quot;&#13;&#10;  WHEN &quot;CCGT New&quot; THEN &quot;natural_gas&quot;&#13;&#10;  WHEN &quot;CCGT Old&quot; THEN &quot;natural_gas&quot;&#13;&#10;  WHEN &quot;Coal new&quot; THEN &quot;coal&quot;&#13;&#10;  WHEN &quot;Coal Old&quot; THEN &quot;coal&quot;&#13;&#10;  WHEN &quot;Curtailment&quot; THEN &quot;none&quot;&#13;&#10;  WHEN &quot;Hydro Reservoir&quot; THEN &quot;none&quot;&#13;&#10;  WHEN &quot;Hydro Reservoir Charging&quot; THEN &quot;none&quot;&#13;&#10;  WHEN &quot;Hydro Run of River&quot; THEN &quot;none&quot;&#13;&#10;  WHEN &quot;Nuclear New&quot; THEN &quot;uranium&quot;&#13;&#10;  WHEN &quot;Nuclear Old&quot; THEN &quot;uranium&quot;&#13;&#10;  WHEN &quot;Pumped Hydro Storage&quot; THEN &quot;none&quot;&#13;&#10;  WHEN &quot;Pumped Hydro Storage Charging&quot; THEN &quot;none&quot;&#13;&#10;  WHEN &quot;Solar&quot; THEN &quot;none&quot;&#13;&#10;  WHEN &quot;Unmet Demand&quot; THEN &quot;none&quot;&#13;&#10;  WHEN &quot;Wind&quot; THEN &quot;none&quot;&#13;&#10;  ELSE &quot;Unknown Generation Label&quot;&#13;&#10;END' />
      </column>
      <column caption='Heat Rate [MMBtu/MWh]' datatype='real' name='[Calculation_890868329752530945]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Calculation_890868329750093824]=&quot;biomass&quot; THEN&#13;&#10;  16.655814&#13;&#10;ELSEIF [Calculation_890868329750093824]=&quot;diesel&quot; THEN&#13;&#10;  27.77777778&#13;&#10;ELSEIF [Calculation_890868329750093824]=&quot;natural_gas&quot; THEN&#13;&#10;  IF [Zone]=1 THEN&#13;&#10;    IF [Calculation_884112924428046337]=&quot;CCGT Old&quot; THEN 7.763841639&#13;&#10;    ELSE 6.635897436&#13;&#10;    END&#13;&#10;  ELSEIF [Zone]=2 THEN&#13;&#10;    IF [Calculation_884112924428046337]=&quot;CCGT Old&quot; THEN 6.969187521&#13;&#10;    ELSE 6.635897436&#13;&#10;    END&#13;&#10;  ELSEIF [Zone]=3 THEN&#13;&#10;    IF [Calculation_884112924428046337]=&quot;CCGT Old&quot; THEN 6.151066015&#13;&#10;    ELSE 6.635897436&#13;&#10;    END&#13;&#10;  ELSEIF [Zone]=4 THEN 6.635897436&#13;&#10;  ELSEIF [Zone]=5 THEN 7.70319442&#13;&#10;  END&#13;&#10;ELSEIF [Calculation_890868329750093824]=&quot;coal&quot; THEN&#13;&#10;  IF [Zone]=1 THEN&#13;&#10;    IF [Calculation_884112924428046337]=&quot;Coal Old&quot; THEN 10.04809714&#13;&#10;    ELSE 9.466312997&#13;&#10;    END&#13;&#10;  ELSEIF [Zone]=2 THEN&#13;&#10;    IF [Calculation_884112924428046337]=&quot;Coal Old&quot; THEN 9.120735453&#13;&#10;    ELSE 9.466312997&#13;&#10;    END&#13;&#10;  ELSEIF [Zone]=3 THEN&#13;&#10;    IF [Calculation_884112924428046337]=&quot;Coal Old&quot; THEN 10.50801205&#13;&#10;    ELSE 9.466312997&#13;&#10;    END&#13;&#10;  ELSEIF [Zone]=4 THEN&#13;&#10;    IF [Calculation_884112924428046337]=&quot;Coal Old&quot; THEN 10.56742598&#13;&#10;    ELSE 9.466312997&#13;&#10;    END&#13;&#10;  ELSEIF [Zone]=5 THEN 9.842354016&#13;&#10;  END&#13;&#10;ELSEIF [Calculation_890868329750093824]=&quot;uranium&quot; THEN&#13;&#10;  IF [Calculation_884112924428046337]=&quot;Nuclear Old&quot; AND Zone=2 THEN 10.15243027&#13;&#10;  ELSEIF [Calculation_884112924428046337]=&quot;Nuclear Old&quot; AND Zone=3 THEN 9.969247&#13;&#10;  ELSE 10.10431792&#13;&#10;  END&#13;&#10;ELSE&#13;&#10;  0.0&#13;&#10;END' />
      </column>
      <column caption='CO2 emissions [tons/MMBtu]' datatype='real' name='[Calculation_890868329759539202]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Calculation_890868329750093824]=&quot;coal&quot; THEN 0.095661822&#13;&#10;ELSEIF [Calculation_890868329750093824]=&quot;natural_gas&quot; THEN 0.052159978&#13;&#10;ELSEIF [Calculation_890868329750093824]=&quot;diesel&quot; THEN 0.072960617&#13;&#10;ELSE 0&#13;&#10;END' />
      </column>
      <column caption='CO2 emissions [Mt]' datatype='real' name='[Calculation_890868329773191171]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_890868329759539202]*[Calculation_890868329752530945]*[Calculation_884112924430045186]/1e6' />
      </column>
      <column caption='CO2 intensity [Mt/MWh]' datatype='real' name='[Calculation_890868329776488453]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM(1e6*[Calculation_890868329773191171])/SUM([Calculation_884112924430045186])' />
      </column>
      <column caption='Capacity Expansion' datatype='string' name='[Calculation_890868329821888518]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-solar-added-&quot;) THEN&#13;&#10;  &quot;New Solar&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-wind-added-&quot;) THEN&#13;&#10;  &quot;New Wind&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
      </column>
      <column caption='Charging EVs [MW]' datatype='real' name='[Calculation_913104849175195648]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_931963670409289734]+[Calculation_931963670409551879]' />
      </column>
      <column caption='Total Generation [MW]' datatype='real' name='[Calculation_918452871620472832]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_generator_power_combined.csv&quot; THEN&#13;&#10;  IF [Resource]==&quot;Unmet Demand&quot; THEN&#13;&#10;    0*[Value]&#13;&#10;  ELSEIF [Resource]==&quot;Curtailment&quot; THEN&#13;&#10;    -1*[Value]&#13;&#10;  ELSE&#13;&#10;    [Value]&#13;&#10;  END&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&gt;=0 THEN&#13;&#10;  [Value]&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&lt;0 THEN&#13;&#10;  0*[Value]&#13;&#10;END' />
      </column>
      <column caption='Inflexible Load [MW]' datatype='real' name='[Calculation_931963670409289734]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_loads_combined.csv&quot; THEN&#13;&#10;  [Value]&#13;&#10;ELSE&#13;&#10;  0&#13;&#10;END' />
      </column>
      <column caption='Flexible Load [MW]' datatype='real' name='[Calculation_931963670409551879]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_demand_response_load_combined.csv&quot; THEN&#13;&#10;  [Value]&#13;&#10;ELSE&#13;&#10;  0&#13;&#10;END' />
      </column>
      <column caption='Load Labels' datatype='string' name='[Calculation_931963670409670664]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_loads_combined.csv&quot; THEN&#13;&#10;  &quot;Inflexible&quot;&#13;&#10;ELSEIF [Table Name]==&quot;tab_dam_demand_response_load_combined.csv&quot; THEN&#13;&#10;  &quot;Charging EVs&quot;&#13;&#10;ELSEIF [Table Name]==&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&lt;0 AND [Resource]!=&quot;Hydro Reservoir&quot; THEN&#13;&#10;  &quot;Charging Grid Batteries/PHS&quot;&#13;&#10;END' />
      </column>
      <column caption='Weights' datatype='real' name='[Calculation_931963670410043401]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Timeblock]&#13;&#10;  WHEN &quot;t1&quot; THEN 36 &#13;&#10;  WHEN &quot;t2&quot; THEN 14&#13;&#10;  WHEN &quot;t3&quot; THEN 9.18368717&#13;&#10;  WHEN &quot;t4&quot; THEN 13&#13;&#10;END' />
      </column>
      <column caption='Total Load [MW]' datatype='real' name='[Calculation_931963670410522634]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_913104849175195648]-[Calculation_884112924457828355]' />
      </column>
      <column caption='Weighted Load [MW]' datatype='real' name='[Calculation_931963670410706955]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_931963670410043401]*[Calculation_931963670410522634]' />
      </column>
      <column caption='Generation Labels (group)' datatype='string' name='[Generation Labels (group) (copy)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Calculation_884112924428046337]' new-bin='true'>
          <bin default-name='false' value='&quot;Batteries&quot;'>
            <value>&quot;Batteries&quot;</value>
            <value>&quot;Batteries Charging&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;CCGT&quot;'>
            <value>&quot;CCGT New&quot;</value>
            <value>&quot;CCGT Old&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Coal&quot;'>
            <value>&quot;Coal new&quot;</value>
            <value>&quot;Coal Old&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Diesel&quot;'>
            <value>&quot;Backup&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Hydro&quot;'>
            <value>&quot;Hydro Reservoir&quot;</value>
            <value>&quot;Hydro Reservoir Charging&quot;</value>
            <value>&quot;Hydro Run of River&quot;</value>
            <value>&quot;Pumped Hydro Storage&quot;</value>
            <value>&quot;Pumped Hydro Storage Charging&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Nuclear&quot;'>
            <value>&quot;Nuclear New&quot;</value>
            <value>&quot;Nuclear Old&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Other &quot;'>
            <value>&quot;Biomass&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Solar&quot;'>
            <value>&quot;Curtailment&quot;</value>
            <value>&quot;Solar&quot;</value>
          </bin>
        </calculation>
      </column>
      <column caption='Generation Labels with Charging (group)' datatype='string' name='[Generation Labels (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Calculation_884112924428046337]' new-bin='true'>
          <bin default-name='false' value='&quot;CCGT&quot;'>
            <value>&quot;CCGT New&quot;</value>
            <value>&quot;CCGT Old&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Coal&quot;'>
            <value>&quot;Coal new&quot;</value>
            <value>&quot;Coal Old&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Diesel&quot;'>
            <value>&quot;Backup&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Hydro&quot;'>
            <value>&quot;Hydro Reservoir&quot;</value>
            <value>&quot;Hydro Run of River&quot;</value>
            <value>&quot;Pumped Hydro Storage&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Nuclear&quot;'>
            <value>&quot;Nuclear New&quot;</value>
            <value>&quot;Nuclear Old&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Other &quot;'>
            <value>&quot;Biomass&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Solar&quot;'>
            <value>&quot;Curtailment&quot;</value>
            <value>&quot;Solar&quot;</value>
          </bin>
        </calculation>
      </column>
      <column caption='Generation for Load (no charging) [MW]' datatype='real' name='[Generation for Load [MW]] (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_generator_power_combined.csv&quot; THEN&#13;&#10;  IF [Resource]==&quot;Curtailment&quot; THEN&#13;&#10;    -1*Value&#13;&#10;  ELSE&#13;&#10;    [Value]&#13;&#10;  END&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; THEN&#13;&#10;  IF [Value]&lt;0 THEN&#13;&#10;    0*[Value]&#13;&#10;  ELSE&#13;&#10;    [Value]&#13;&#10;  END&#13;&#10;END' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='5-day time period' datatype='string' name='[Representative Days (copy)]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Timeblock]==&quot;t1&quot; THEN &quot;April 21-25&quot;&#13;&#10;ELSEIF [Timeblock]==&quot;t2&quot; THEN &quot;June 15-19&quot;&#13;&#10;ELSEIF [Timeblock]==&quot;t3&quot; THEN &quot;October 13-17&quot;&#13;&#10;ELSEIF [Timeblock]==&quot;t4&quot; THEN &quot;December 12-16&quot;&#13;&#10;END' />
      </column>
      <column caption='NOx emissions [kg/MMBtu]' datatype='real' name='[SO2 emissions [kg/MMBtu]] (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Calculation_890868329750093824]=&quot;coal&quot; THEN 0.041907829&#13;&#10;ELSEIF [Calculation_890868329750093824]=&quot;natural_gas&quot; THEN 0.009071847&#13;&#10;ELSEIF [Calculation_890868329750093824]=&quot;diesel&quot; THEN 0.078153965&#13;&#10;ELSE 0&#13;&#10;END' />
      </column>
      <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
      <column caption='Weighted Generation for Dispatch [MW]' datatype='real' name='[Weighted Generation for Load [MW]] (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_931963670410043401]*[Calculation_918452871620472832]' />
      </column>
      <column aggregation='Sum' datatype='integer' name='[Zone]' role='dimension' type='ordinal' />
      <column-instance column='[Calculation_889179474271539201]' derivation='Avg' name='[avg:Calculation_889179474271539201:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_890868329776488453]' derivation='Avg' name='[avg:Calculation_890868329776488453:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_890868329776488453]' derivation='Sum' name='[diff:sum:Calculation_890868329776488453:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_889179474271539201]' derivation='Max' name='[max:Calculation_889179474271539201:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_889179474271539201]' derivation='Min' name='[min:Calculation_889179474271539201:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_884112924428046337]' derivation='None' name='[none:Calculation_884112924428046337:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_889179474280439814]' derivation='None' name='[none:Calculation_889179474280439814:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_931963670409670664]' derivation='None' name='[none:Calculation_931963670409670664:nk]' pivot='key' type='nominal' />
      <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_884112924430045186]' derivation='Sum' name='[pcto:sum:Calculation_884112924430045186:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_884112924430045186]' derivation='Sum' name='[pcto:sum:Calculation_884112924430045186:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_1044553664332267520]' derivation='Sum' name='[sum:Calculation_1044553664332267520:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1044553664334561282]' derivation='Sum' name='[sum:Calculation_1044553664334561282:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1044553664334868483]' derivation='Sum' name='[sum:Calculation_1044553664334868483:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_430093791532744705]' derivation='Sum' name='[sum:Calculation_430093791532744705:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_495677469396586496]' derivation='Sum' name='[sum:Calculation_495677469396586496:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_884112924427558912]' derivation='Sum' name='[sum:Calculation_884112924427558912:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_884112924430045186]' derivation='Sum' name='[sum:Calculation_884112924430045186:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_889179474271539201]' derivation='Sum' name='[sum:Calculation_889179474271539201:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_890868329773191171]' derivation='Sum' name='[sum:Calculation_890868329773191171:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_890868329776488453]' derivation='Sum' name='[sum:Calculation_890868329776488453:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_913104849175195648]' derivation='Sum' name='[sum:Calculation_913104849175195648:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_918452871620472832]' derivation='Sum' name='[sum:Calculation_918452871620472832:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_931963670409289734]' derivation='Sum' name='[sum:Calculation_931963670409289734:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_931963670410522634]' derivation='Sum' name='[sum:Calculation_931963670410522634:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_931963670410706955]' derivation='Sum' name='[sum:Calculation_931963670410706955:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Generation for Load [MW]] (copy)]' derivation='Sum' name='[sum:Generation for Load [MW]] (copy):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_890868329776488453]' derivation='User' name='[usr:Calculation_890868329776488453:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.542821' measure-ordering='alphabetic' measure-percentage='0.457179' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Calculation_884112924428046337:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Coal Old&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Biomass&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hydro Run of River&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Curtailment&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;CCGT New&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Unmet Demand&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Backup&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pumped Hydro Storage Charging&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;CCGT Old&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nuclear New&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nuclear Old&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Solar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Wind&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hydro Reservoir&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Coal new&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Batteries&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pumped Hydro Storage&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hydro Reservoir Charging&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Batteries Charging&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Generation Labels (group) (copy)]&#10;[:Measure Names]' type='palette'>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>%null%</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Hydro&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Solar&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Diesel&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Unmet Demand&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Coal&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Nuclear&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Other &quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;CCGT&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Batteries&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Wind&quot;</bucket>
            </map-pri>
          </encoding>
          <encoding attr='color' field='[none:Calculation_931963670409670664:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Charging&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Charging EVs&quot;</bucket>
            </map>
            <map to='#5c6068'>
              <bucket>&quot;Inflexible&quot;</bucket>
            </map>
            <map to='#b3b7b8'>
              <bucket>&quot;Flexible&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Charging Grid Batteries/PHS&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_889179474280439814:nk]' type='palette'>
            <map to='#43719f'>
              <bucket>&quot;Pumped Hydro Storage&quot;</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>&quot;Hydro Reservoir&quot;</bucket>
            </map>
            <map to='#d3d3d3'>
              <bucket>&quot;Batteries&quot;</bucket>
            </map>
            <map to='#ffffff'>
              <bucket>%null%</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Generation Labels (group)]' type='palette'>
            <map to='#000000'>
              <bucket>&quot;Diesel&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Coal Old&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hydro&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Biomass&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Wind&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Batteries&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hydro Run of River&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;CCGT New&quot;</bucket>
            </map>
            <map to='#92c0df'>
              <bucket>&quot;Hydro Reservoir Charging&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Coal&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Backup&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nuclear&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;CCGT Old&quot;</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>&quot;Pumped Hydro Storage Charging&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nuclear New&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Other &quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nuclear Old&quot;</bucket>
            </map>
            <map to='#d5d5d5'>
              <bucket>&quot;Batteries Charging&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hydro Reservoir&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Unmet Demand&quot;</bucket>
            </map>
            <map to='#f0bd27'>
              <bucket>&quot;Solar&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Coal new&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;CCGT&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Curtailment&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pumped Hydro Storage&quot;</bucket>
            </map>
            <map to='#ffffff'>
              <bucket>%null%</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Scenario:nk]' type='palette'>
            <map to='#000000'>
              <bucket>&quot;default-L-H-8-1275&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;real-high-morning-L-H-8-1275-flexible&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;real-med-evening-L-H-8-1275-solar-added-inflexible&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;default-L-H-8-1275-flexible&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;real-low-morning-L-H-8-1275-inflexible&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;real-high-evening-L-H-8-1275-solar-added-flexible&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;real-low-morning-L-H-8-1275-wind-added-inflexible&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;real-high-morning-L-H-8-1275-solar-added-inflexible&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;real-med-morning-L-H-8-1275-inflexible&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;real-high-morning-L-H-8-1275-inflexible&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;real-med-evening-L-H-8-1275-wind-added-flexible&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;real-high-evening-L-H-8-1275-solar-added-inflexible&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;real-med-evening-L-H-8-1275-flexible&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;real-low-evening-L-H-8-1275-wind-added-inflexible&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;real-high-evening-L-H-8-1275-flexible&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;real-low-morning-L-H-8-1275-solar-added-flexible&quot;</bucket>
            </map>
            <map to='#ae123a'>
              <bucket>&quot;med-night-L-H-8-1275-inflexible&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;real-low-evening-L-H-8-1275-inflexible&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;real-low-evening-L-H-8-1275-solar-added-inflexible&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;real-med-morning-L-H-8-1275-wind-added-inflexible&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;real-high-evening-L-H-8-1275-wind-added-flexible&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;real-med-evening-L-H-8-1275-inflexible&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;real-high-morning-L-H-8-1275-wind-added-flexible&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;real-med-morning-L-H-8-1275-solar-added-flexible&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;real-high-morning-L-H-8-1275-wind-added-inflexible&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;real-med-morning-L-H-8-1275-solar-added-inflexible&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;real-low-evening-L-H-8-1275-wind-added-flexible&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;real-low-morning-L-H-8-1275-flexible&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;med-day-L-H-8-1275-inflexible&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;real-med-evening-L-H-8-1275-wind-added-inflexible&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;real-high-evening-L-H-8-1275-wind-added-inflexible&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;real-med-evening-L-H-8-1275-solar-added-flexible&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;med-day-L-H-8-1275-flexible&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;real-low-morning-L-H-8-1275-solar-added-inflexible&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;real-low-evening-L-H-8-1275-flexible&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;real-low-evening-L-H-8-1275-solar-added-flexible&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;real-med-morning-L-H-8-1275-wind-added-flexible&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;real-high-morning-L-H-8-1275-solar-added-flexible&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;real-med-morning-L-H-8-1275-flexible&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;real-high-evening-L-H-8-1275-inflexible&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;real-low-morning-L-H-8-1275-wind-added-flexible&quot;</bucket>
            </map>
            <map to='#ffbeb2'>
              <bucket>&quot;med-night-L-H-8-1275-flexible&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#000000'>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_931963670409289734:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[avg:Calculation_890868329776488453:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[diff:sum:Calculation_890868329776488453:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group) (copy)]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_890868329776488453:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_913104849175195648:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[usr:Calculation_890868329776488453:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_1044553664332267520:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_918452871620472832:qk]&quot;</bucket>
            </map>
            <map to='#767f8b'>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_931963670410522634:qk]&quot;</bucket>
            </map>
            <map to='#767f8b'>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_931963670410706955:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_1044553664334561282:qk]&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[avg:Calculation_889179474271539201:qk]&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[max:Calculation_889179474271539201:qk]&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[min:Calculation_889179474271539201:qk]&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_1044553664334868483:qk]&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_889179474271539201:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[pcto:sum:Calculation_884112924430045186:qk:2]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[pcto:sum:Calculation_884112924430045186:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_495677469396586496:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_884112924427558912:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_884112924430045186:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Generation for Load [MW]] (copy):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_430093791532744705:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_890868329773191171:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Generation Labels (group) (copy)]' type='palette'>
            <map to='#000000'>
              <bucket>&quot;Diesel&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hydro&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Wind&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Batteries&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Coal&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nuclear&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;Unmet Demand&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Other &quot;</bucket>
            </map>
            <map to='#f0bd27'>
              <bucket>&quot;Solar&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;CCGT&quot;</bucket>
            </map>
            <map to='#ffda66'>
              <bucket>&quot;Curtailment&quot;</bucket>
            </map>
            <map to='#ffffff'>
              <bucket>%null%</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Dispatch with Load (no charging)' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Generation Labels with Charging (group)' />
        <param name='target' value='Dispatch with Load (no charging)' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Annual Generation (Absolute) by Type'>
      <table>
        <view>
          <datasources>
            <datasource caption='tab_dam_generator_power_combined' name='federated.0m2ojda1ih48r312ma38r1hlijh9' />
          </datasources>
          <datasource-dependencies datasource='federated.0m2ojda1ih48r312ma38r1hlijh9'>
            <column caption='Charging Time' datatype='string' name='[Calculation_1086493432799272960]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-morning-&quot;) THEN&#13;&#10;  &quot;12-3 AM&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-evening-&quot;) THEN&#13;&#10;  &quot;12-3 PM&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='Charging Type' datatype='string' name='[Calculation_1086493432799367169]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-flexible&quot;) THEN&#13;&#10;  &quot;Flexible&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-inflexible&quot;) THEN&#13;&#10;  &quot;Inflexible&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='EV Adoption Level' datatype='string' name='[Calculation_1086493432800079874]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-low-&quot;) THEN&#13;&#10;  &quot;Low&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-med-&quot;) THEN&#13;&#10;  &quot;Med&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-high-&quot;) THEN&#13;&#10;  &quot;High&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='Weighted Generation For Load [TW]' datatype='real' name='[Calculation_495677469396586496]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_884112924430045186]/1000000' />
            </column>
            <column caption='Generation for Load [MW]' datatype='real' name='[Calculation_884112924427558912]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_generator_power_combined.csv&quot; THEN&#13;&#10;  IF [Resource]==&quot;Curtailment&quot; THEN&#13;&#10;    -1*Value&#13;&#10;  ELSE&#13;&#10;    [Value]&#13;&#10;  END&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; THEN&#13;&#10;  [Value]&#13;&#10;END' />
            </column>
            <column caption='Generation Labels' datatype='string' name='[Calculation_884112924428046337]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_generator_power_combined.csv&quot; THEN&#13;&#10;  [Resource]&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&gt;=0 THEN&#13;&#10;  [Resource]&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&lt;0 THEN&#13;&#10;   [Resource]+&quot; Charging&quot;&#13;&#10;END' />
            </column>
            <column caption='Weighted Generation for Load [MW]' datatype='real' name='[Calculation_884112924430045186]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_931963670410043401]*[Calculation_884112924427558912]' />
            </column>
            <column caption='Capacity Expansion' datatype='string' name='[Calculation_890868329821888518]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-solar-added-&quot;) THEN&#13;&#10;  &quot;New Solar&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-wind-added-&quot;) THEN&#13;&#10;  &quot;New Wind&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='Weights' datatype='real' name='[Calculation_931963670410043401]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Timeblock]&#13;&#10;  WHEN &quot;t1&quot; THEN 36 &#13;&#10;  WHEN &quot;t2&quot; THEN 14&#13;&#10;  WHEN &quot;t3&quot; THEN 9.18368717&#13;&#10;  WHEN &quot;t4&quot; THEN 13&#13;&#10;END' />
            </column>
            <column caption='Generation Labels (group)' datatype='string' name='[Generation Labels (group) (copy)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Calculation_884112924428046337]' new-bin='true'>
                <bin default-name='false' value='&quot;Batteries&quot;'>
                  <value>&quot;Batteries&quot;</value>
                  <value>&quot;Batteries Charging&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;CCGT&quot;'>
                  <value>&quot;CCGT New&quot;</value>
                  <value>&quot;CCGT Old&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Coal&quot;'>
                  <value>&quot;Coal new&quot;</value>
                  <value>&quot;Coal Old&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Diesel&quot;'>
                  <value>&quot;Backup&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Hydro&quot;'>
                  <value>&quot;Hydro Reservoir&quot;</value>
                  <value>&quot;Hydro Reservoir Charging&quot;</value>
                  <value>&quot;Hydro Run of River&quot;</value>
                  <value>&quot;Pumped Hydro Storage&quot;</value>
                  <value>&quot;Pumped Hydro Storage Charging&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Nuclear&quot;'>
                  <value>&quot;Nuclear New&quot;</value>
                  <value>&quot;Nuclear Old&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Other &quot;'>
                  <value>&quot;Biomass&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Solar&quot;'>
                  <value>&quot;Curtailment&quot;</value>
                  <value>&quot;Solar&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Resource]' role='dimension' type='nominal' />
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Timeblock]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1086493432799272960]' derivation='None' name='[none:Calculation_1086493432799272960:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1086493432799367169]' derivation='None' name='[none:Calculation_1086493432799367169:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1086493432800079874]' derivation='None' name='[none:Calculation_1086493432800079874:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_890868329821888518]' derivation='None' name='[none:Calculation_890868329821888518:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_884112924430045186]' derivation='Sum' name='[pcto:sum:Calculation_884112924430045186:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_495677469396586496]' derivation='Sum' name='[sum:Calculation_495677469396586496:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_884112924430045186]' derivation='Sum' name='[sum:Calculation_884112924430045186:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group) (copy)]' direction='ASC'>
            <dictionary>
              <bucket>%null%</bucket>
              <bucket>&quot;Unmet Demand&quot;</bucket>
              <bucket>&quot;Curtailment&quot;</bucket>
              <bucket>&quot;Solar&quot;</bucket>
              <bucket>&quot;Wind&quot;</bucket>
              <bucket>&quot;Batteries&quot;</bucket>
              <bucket>&quot;Diesel&quot;</bucket>
              <bucket>&quot;Other &quot;</bucket>
              <bucket>&quot;CCGT&quot;</bucket>
              <bucket>&quot;Hydro&quot;</bucket>
              <bucket>&quot;Coal&quot;</bucket>
              <bucket>&quot;Nuclear&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_1086493432799272960:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;12-3 AM&quot;</bucket>
              <bucket>&quot;12-3 PM&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Inflexible&quot;</bucket>
              <bucket>&quot;Flexible&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_1086493432800079874:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;None&quot;</bucket>
              <bucket>&quot;Low&quot;</bucket>
              <bucket>&quot;Med&quot;</bucket>
              <bucket>&quot;High&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_890868329821888518:nk]'>
            <groupfilter function='member' level='[none:Calculation_890868329821888518:nk]' member='&quot;None&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_890868329821888518:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;None&quot;</bucket>
              <bucket>&quot;New Solar&quot;</bucket>
              <bucket>&quot;New Wind&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_890868329821888518:nk]</column>
            <column>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk]</column>
            <column>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_884112924430045186:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='display' class='0' field='[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_884112924430045186:qk]' scope='rows' value='false' />
            <format attr='title' class='0' field='[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_495677469396586496:qk]' scope='rows' value='Weighted Generation For Load [TWh]' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0m2ojda1ih48r312ma38r1hlijh9].[pcto:sum:Calculation_884112924430045186:qk:2]' value='p0%' />
            <format attr='text-format' field='[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_495677469396586496:qk]' value='*0' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk]' value='false' />
            <format attr='display' field='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_890868329821888518:nk]' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_495677469396586496:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group) (copy)]' />
              <text column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[pcto:sum:Calculation_884112924430045186:qk:2]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_884112924430045186:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text' />
            <encodings>
              <text column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_495677469396586496:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>Æ&#10;</run>
                <run fontsize='10'>&lt;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_495677469396586496:qk]&gt; TWh</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='vertical-align' value='auto' />
                <format attr='text-align' value='auto' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_495677469396586496:qk] + [federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_884112924430045186:qk])</rows>
        <cols>([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_890868329821888518:nk] / [federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk])))</cols>
      </table>
      <simple-id uuid='{4F463305-7B3C-4950-9694-4A855B36ABAB}' />
    </worksheet>
    <worksheet name='Annual Generation (Percentage) by Type'>
      <table>
        <view>
          <datasources>
            <datasource caption='tab_dam_generator_power_combined' name='federated.0m2ojda1ih48r312ma38r1hlijh9' />
          </datasources>
          <datasource-dependencies datasource='federated.0m2ojda1ih48r312ma38r1hlijh9'>
            <column caption='Charging Time' datatype='string' name='[Calculation_1086493432799272960]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-morning-&quot;) THEN&#13;&#10;  &quot;12-3 AM&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-evening-&quot;) THEN&#13;&#10;  &quot;12-3 PM&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='Charging Type' datatype='string' name='[Calculation_1086493432799367169]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-flexible&quot;) THEN&#13;&#10;  &quot;Flexible&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-inflexible&quot;) THEN&#13;&#10;  &quot;Inflexible&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='EV Adoption Level' datatype='string' name='[Calculation_1086493432800079874]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-low-&quot;) THEN&#13;&#10;  &quot;Low&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-med-&quot;) THEN&#13;&#10;  &quot;Med&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-high-&quot;) THEN&#13;&#10;  &quot;High&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='Generation for Load [MW]' datatype='real' name='[Calculation_884112924427558912]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_generator_power_combined.csv&quot; THEN&#13;&#10;  IF [Resource]==&quot;Curtailment&quot; THEN&#13;&#10;    -1*Value&#13;&#10;  ELSE&#13;&#10;    [Value]&#13;&#10;  END&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; THEN&#13;&#10;  [Value]&#13;&#10;END' />
            </column>
            <column caption='Generation Labels' datatype='string' name='[Calculation_884112924428046337]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_generator_power_combined.csv&quot; THEN&#13;&#10;  [Resource]&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&gt;=0 THEN&#13;&#10;  [Resource]&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&lt;0 THEN&#13;&#10;   [Resource]+&quot; Charging&quot;&#13;&#10;END' />
            </column>
            <column caption='Weighted Generation for Load [MW]' datatype='real' name='[Calculation_884112924430045186]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_931963670410043401]*[Calculation_884112924427558912]' />
            </column>
            <column caption='Capacity Expansion' datatype='string' name='[Calculation_890868329821888518]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-solar-added-&quot;) THEN&#13;&#10;  &quot;New Solar&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-wind-added-&quot;) THEN&#13;&#10;  &quot;New Wind&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='Weights' datatype='real' name='[Calculation_931963670410043401]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Timeblock]&#13;&#10;  WHEN &quot;t1&quot; THEN 36 &#13;&#10;  WHEN &quot;t2&quot; THEN 14&#13;&#10;  WHEN &quot;t3&quot; THEN 9.18368717&#13;&#10;  WHEN &quot;t4&quot; THEN 13&#13;&#10;END' />
            </column>
            <column caption='Generation Labels (group)' datatype='string' name='[Generation Labels (group) (copy)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Calculation_884112924428046337]' new-bin='true'>
                <bin default-name='false' value='&quot;Batteries&quot;'>
                  <value>&quot;Batteries&quot;</value>
                  <value>&quot;Batteries Charging&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;CCGT&quot;'>
                  <value>&quot;CCGT New&quot;</value>
                  <value>&quot;CCGT Old&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Coal&quot;'>
                  <value>&quot;Coal new&quot;</value>
                  <value>&quot;Coal Old&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Diesel&quot;'>
                  <value>&quot;Backup&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Hydro&quot;'>
                  <value>&quot;Hydro Reservoir&quot;</value>
                  <value>&quot;Hydro Reservoir Charging&quot;</value>
                  <value>&quot;Hydro Run of River&quot;</value>
                  <value>&quot;Pumped Hydro Storage&quot;</value>
                  <value>&quot;Pumped Hydro Storage Charging&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Nuclear&quot;'>
                  <value>&quot;Nuclear New&quot;</value>
                  <value>&quot;Nuclear Old&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Other &quot;'>
                  <value>&quot;Biomass&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Solar&quot;'>
                  <value>&quot;Curtailment&quot;</value>
                  <value>&quot;Solar&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Resource]' role='dimension' type='nominal' />
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Timeblock]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1086493432799272960]' derivation='None' name='[none:Calculation_1086493432799272960:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1086493432799367169]' derivation='None' name='[none:Calculation_1086493432799367169:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1086493432800079874]' derivation='None' name='[none:Calculation_1086493432800079874:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_890868329821888518]' derivation='None' name='[none:Calculation_890868329821888518:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_884112924430045186]' derivation='Sum' name='[pcto:sum:Calculation_884112924430045186:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group) (copy)]' direction='ASC'>
            <dictionary>
              <bucket>%null%</bucket>
              <bucket>&quot;Unmet Demand&quot;</bucket>
              <bucket>&quot;Curtailment&quot;</bucket>
              <bucket>&quot;Solar&quot;</bucket>
              <bucket>&quot;Wind&quot;</bucket>
              <bucket>&quot;Batteries&quot;</bucket>
              <bucket>&quot;Diesel&quot;</bucket>
              <bucket>&quot;Other &quot;</bucket>
              <bucket>&quot;CCGT&quot;</bucket>
              <bucket>&quot;Hydro&quot;</bucket>
              <bucket>&quot;Coal&quot;</bucket>
              <bucket>&quot;Nuclear&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;12-3 AM&quot;</bucket>
              <bucket>&quot;12-3 PM&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Inflexible&quot;</bucket>
              <bucket>&quot;Flexible&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;None&quot;</bucket>
              <bucket>&quot;Low&quot;</bucket>
              <bucket>&quot;Med&quot;</bucket>
              <bucket>&quot;High&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_890868329821888518:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;None&quot;</bucket>
              <bucket>&quot;New Solar&quot;</bucket>
              <bucket>&quot;New Wind&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0m2ojda1ih48r312ma38r1hlijh9].[pcto:sum:Calculation_884112924430045186:qk:2]' value='p0%' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group) (copy)]' />
              <text column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[pcto:sum:Calculation_884112924430045186:qk:2]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0m2ojda1ih48r312ma38r1hlijh9].[pcto:sum:Calculation_884112924430045186:qk:2]</rows>
        <cols>([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_890868329821888518:nk] / [federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk])))</cols>
      </table>
      <simple-id uuid='{B5EF09DC-80FD-454B-B858-5ADE8F5B45A3}' />
    </worksheet>
    <worksheet name='Dispatch with Load'>
      <table>
        <view>
          <datasources>
            <datasource caption='tab_dam_generator_power_combined' name='federated.0m2ojda1ih48r312ma38r1hlijh9' />
          </datasources>
          <datasource-dependencies datasource='federated.0m2ojda1ih48r312ma38r1hlijh9'>
            <column datatype='string' name='[Attribute]' role='dimension' type='nominal' />
            <column caption='VRE (non-curtailed)' datatype='real' name='[Calculation_1044553664332267520]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Resource]==&quot;Solar&quot; OR [Resource]==&quot;Wind&quot; THEN&#13;&#10;  [Value]&#13;&#10;ELSEIF [Resource]==&quot;Curtailment&quot; THEN&#13;&#10;  -1*[Value]&#13;&#10;ELSE&#13;&#10;  0&#13;&#10;END' />
            </column>
            <column caption='Unmet Demand' datatype='real' name='[Calculation_1044553664333684737]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Resource]==&quot;Unmet Demand&quot; THEN&#13;&#10;  [Value]&#13;&#10;ELSE&#13;&#10;  0&#13;&#10;END' />
            </column>
            <column caption='Served Load' datatype='real' name='[Calculation_1044553664334561282]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_931963670410522634]-[Calculation_1044553664333684737]' />
            </column>
            <column caption='Net Served Load [MW]' datatype='real' name='[Calculation_1044553664334868483]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1044553664334561282]-[Calculation_1044553664332267520]' />
            </column>
            <column caption='Charging Time' datatype='string' name='[Calculation_1086493432799272960]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-morning-&quot;) THEN&#13;&#10;  &quot;12-3 AM&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-evening-&quot;) THEN&#13;&#10;  &quot;12-3 PM&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='Charging Type' datatype='string' name='[Calculation_1086493432799367169]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-flexible&quot;) THEN&#13;&#10;  &quot;Flexible&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-inflexible&quot;) THEN&#13;&#10;  &quot;Inflexible&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='EV Adoption Level' datatype='string' name='[Calculation_1086493432800079874]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-low-&quot;) THEN&#13;&#10;  &quot;Low&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-med-&quot;) THEN&#13;&#10;  &quot;Med&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-high-&quot;) THEN&#13;&#10;  &quot;High&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='Representative Days' datatype='datetime' name='[Calculation_1086493432800321539]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF [Timeblock]==&quot;t1&quot; THEN DATEPARSE(&quot;dd.MMMM.yyyy&quot;,&quot;21.April.2037&quot;)&#13;&#10;ELSEIF [Timeblock]==&quot;t2&quot; THEN DATEPARSE(&quot;dd.MMMM.yyyy&quot;,&quot;15.June.2037&quot;)&#13;&#10;ELSEIF [Timeblock]==&quot;t3&quot; THEN DATEPARSE(&quot;dd.MMMM.yyyy&quot;,&quot;13.October.2037&quot;)&#13;&#10;ELSEIF [Timeblock]==&quot;t4&quot; THEN DATEPARSE(&quot;dd.MMMM.yyyy&quot;,&quot;12.December.2037&quot;)&#13;&#10;END' />
            </column>
            <column caption='Time Interval' datatype='string' name='[Calculation_1086493432800645124]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Timeblock]==&quot;t1&quot; THEN&#13;&#10;  [Attribute]&#13;&#10;ELSEIF [Timeblock]==&quot;t2&quot; THEN&#13;&#10;  &quot;t&quot;+STR(120+INT(RIGHT([Attribute],LEN([Attribute])-1)))&#13;&#10;ELSEIF [Timeblock]==&quot;t3&quot; THEN&#13;&#10;  &quot;t&quot;+STR(240+INT(RIGHT([Attribute],LEN([Attribute])-1)))&#13;&#10;ELSE&#13;&#10;  &quot;t&quot;+STR(360+INT(RIGHT([Attribute],LEN([Attribute])-1)))&#13;&#10;END' />
            </column>
            <column caption='Curtailment' datatype='real' name='[Calculation_430093791531491328]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_generator_power_combined.csv&quot; AND [Resource]==&quot;Curtailment&quot; THEN&#13;&#10;  [Value]&#13;&#10;ELSE&#13;&#10;  0&#13;&#10;END' />
            </column>
            <column caption='Curtailed VRE [MW]' datatype='real' name='[Calculation_430093791532744705]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_430093791531491328]+[Calculation_918452871620472832]' />
            </column>
            <column caption='Generation for Load [MW]' datatype='real' name='[Calculation_884112924427558912]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_generator_power_combined.csv&quot; THEN&#13;&#10;  IF [Resource]==&quot;Curtailment&quot; THEN&#13;&#10;    -1*Value&#13;&#10;  ELSE&#13;&#10;    [Value]&#13;&#10;  END&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; THEN&#13;&#10;  [Value]&#13;&#10;END' />
            </column>
            <column caption='Generation Labels' datatype='string' name='[Calculation_884112924428046337]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_generator_power_combined.csv&quot; THEN&#13;&#10;  [Resource]&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&gt;=0 THEN&#13;&#10;  [Resource]&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&lt;0 THEN&#13;&#10;   [Resource]+&quot; Charging&quot;&#13;&#10;END' />
            </column>
            <column caption='Charging Grid Batteries / PHS [MW]' datatype='real' name='[Calculation_884112924457828355]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&lt;0 AND [Resource]!=&quot;Hydro Reservoir&quot; THEN&#13;&#10;  [Value]&#13;&#10;ELSE&#13;&#10;  0&#13;&#10;END' />
            </column>
            <column caption='Date Time' datatype='datetime' name='[Calculation_889179474267987968]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATEADD(&apos;hour&apos;,INT(RIGHT([Calculation_1086493432800645124],LEN([Calculation_1086493432800645124])-1))-1,[Calculation_1086493432800321539])' />
            </column>
            <column caption='Storage Level [MW]' datatype='real' name='[Calculation_889179474278793218]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_storage_unit_soc_combined.csv&quot; THEN&#13;&#10;  [Value]&#13;&#10;END' />
            </column>
            <column caption='Max Storage Level [MW]' datatype='real' name='[Calculation_889179474279444483]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_storage_unit_soc_combined.csv&quot; THEN&#13;&#10;  {FIXED [Resource],[Zone]: MAX([Value])}&#13;&#10;END' />
            </column>
            <column caption='State of Charge' datatype='real' name='[Calculation_889179474279563268]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_889179474278793218]/[Calculation_889179474279444483]' />
            </column>
            <column caption='Weighted State of Charge' datatype='real' name='[Calculation_889179474279690245]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Sum([Calculation_889179474279563268]*[Calculation_889179474279444483])/SUM([Calculation_889179474279444483])' />
            </column>
            <column caption='Storage Label' datatype='string' name='[Calculation_889179474280439814]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_storage_unit_soc_combined.csv&quot; THEN&#13;&#10;  [Resource]&#13;&#10;END' />
            </column>
            <column caption='Capacity Expansion' datatype='string' name='[Calculation_890868329821888518]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-solar-added-&quot;) THEN&#13;&#10;  &quot;New Solar&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-wind-added-&quot;) THEN&#13;&#10;  &quot;New Wind&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='Charging EVs [MW]' datatype='real' name='[Calculation_913104849175195648]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_931963670409289734]+[Calculation_931963670409551879]' />
            </column>
            <column caption='Total Generation [MW]' datatype='real' name='[Calculation_918452871620472832]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_generator_power_combined.csv&quot; THEN&#13;&#10;  IF [Resource]==&quot;Unmet Demand&quot; THEN&#13;&#10;    0*[Value]&#13;&#10;  ELSEIF [Resource]==&quot;Curtailment&quot; THEN&#13;&#10;    -1*[Value]&#13;&#10;  ELSE&#13;&#10;    [Value]&#13;&#10;  END&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&gt;=0 THEN&#13;&#10;  [Value]&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&lt;0 THEN&#13;&#10;  0*[Value]&#13;&#10;END' />
            </column>
            <column caption='Inflexible Load [MW]' datatype='real' name='[Calculation_931963670409289734]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_loads_combined.csv&quot; THEN&#13;&#10;  [Value]&#13;&#10;ELSE&#13;&#10;  0&#13;&#10;END' />
            </column>
            <column caption='Flexible Load [MW]' datatype='real' name='[Calculation_931963670409551879]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_demand_response_load_combined.csv&quot; THEN&#13;&#10;  [Value]&#13;&#10;ELSE&#13;&#10;  0&#13;&#10;END' />
            </column>
            <column caption='Total Load [MW]' datatype='real' name='[Calculation_931963670410522634]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_913104849175195648]-[Calculation_884112924457828355]' />
            </column>
            <column caption='Generation Labels with Charging (group)' datatype='string' name='[Generation Labels (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Calculation_884112924428046337]' new-bin='true'>
                <bin default-name='false' value='&quot;CCGT&quot;'>
                  <value>&quot;CCGT New&quot;</value>
                  <value>&quot;CCGT Old&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Coal&quot;'>
                  <value>&quot;Coal new&quot;</value>
                  <value>&quot;Coal Old&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Diesel&quot;'>
                  <value>&quot;Backup&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Hydro&quot;'>
                  <value>&quot;Hydro Reservoir&quot;</value>
                  <value>&quot;Hydro Run of River&quot;</value>
                  <value>&quot;Pumped Hydro Storage&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Nuclear&quot;'>
                  <value>&quot;Nuclear New&quot;</value>
                  <value>&quot;Nuclear Old&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Other &quot;'>
                  <value>&quot;Biomass&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Solar&quot;'>
                  <value>&quot;Curtailment&quot;</value>
                  <value>&quot;Solar&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Resource]' role='dimension' type='nominal' />
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Timeblock]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column aggregation='Sum' datatype='integer' name='[Zone]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_889179474267987968]' derivation='Day' name='[dy:Calculation_889179474267987968:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_889179474267987968]' derivation='Hour' name='[hr:Calculation_889179474267987968:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_889179474267987968]' derivation='Month' name='[mn:Calculation_889179474267987968:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1086493432799272960]' derivation='None' name='[none:Calculation_1086493432799272960:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1086493432799367169]' derivation='None' name='[none:Calculation_1086493432799367169:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1086493432800079874]' derivation='None' name='[none:Calculation_1086493432800079874:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_889179474280439814]' derivation='None' name='[none:Calculation_889179474280439814:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_890868329821888518]' derivation='None' name='[none:Calculation_890868329821888518:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1044553664334868483]' derivation='Sum' name='[sum:Calculation_1044553664334868483:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_430093791532744705]' derivation='Sum' name='[sum:Calculation_430093791532744705:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_884112924427558912]' derivation='Sum' name='[sum:Calculation_884112924427558912:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_913104849175195648]' derivation='Sum' name='[sum:Calculation_913104849175195648:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_918452871620472832]' derivation='Sum' name='[sum:Calculation_918452871620472832:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_931963670409289734]' derivation='Sum' name='[sum:Calculation_931963670409289734:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_931963670410522634]' derivation='Sum' name='[sum:Calculation_931963670410522634:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_889179474279690245]' derivation='User' name='[usr:Calculation_889179474279690245:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_889179474267987968]' derivation='Year' name='[yr:Calculation_889179474267987968:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_931963670409289734:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_913104849175195648:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_931963670410522634:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_918452871620472832:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_1044553664334868483:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_430093791532744705:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_931963670409289734:qk]&quot;</bucket>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_913104849175195648:qk]&quot;</bucket>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_931963670410522634:qk]&quot;</bucket>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_918452871620472832:qk]&quot;</bucket>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_1044553664334868483:qk]&quot;</bucket>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_430093791532744705:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group)]' direction='ASC'>
            <dictionary>
              <bucket>%null%</bucket>
              <bucket>&quot;Hydro Reservoir Charging&quot;</bucket>
              <bucket>&quot;Batteries Charging&quot;</bucket>
              <bucket>&quot;Pumped Hydro Storage Charging&quot;</bucket>
              <bucket>&quot;Unmet Demand&quot;</bucket>
              <bucket>&quot;Curtailment&quot;</bucket>
              <bucket>&quot;Solar&quot;</bucket>
              <bucket>&quot;Wind&quot;</bucket>
              <bucket>&quot;Batteries&quot;</bucket>
              <bucket>&quot;Diesel&quot;</bucket>
              <bucket>&quot;Other &quot;</bucket>
              <bucket>&quot;CCGT&quot;</bucket>
              <bucket>&quot;Hydro&quot;</bucket>
              <bucket>&quot;Coal&quot;</bucket>
              <bucket>&quot;Nuclear&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;None&quot;</bucket>
              <bucket>&quot;12-3 AM&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;None&quot;</bucket>
              <bucket>&quot;Flexible&quot;</bucket>
              <bucket>&quot;Inflexible&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;None&quot;</bucket>
              <bucket>&quot;Med&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;default-L-H-8-1275-flexible&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;med-day-L-H-8-1275-inflexible&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]</column>
            <column>[federated.0m2ojda1ih48r312ma38r1hlijh9].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0m2ojda1ih48r312ma38r1hlijh9].[Multiple Values]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_884112924427558912:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group)]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0m2ojda1ih48r312ma38r1hlijh9].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0m2ojda1ih48r312ma38r1hlijh9].[usr:Calculation_889179474279690245:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_889179474280439814:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>(([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_890868329821888518:nk] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk] / [federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk]))) * ([federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_884112924427558912:qk] + ([federated.0m2ojda1ih48r312ma38r1hlijh9].[Multiple Values] + [federated.0m2ojda1ih48r312ma38r1hlijh9].[usr:Calculation_889179474279690245:qk])))</rows>
        <cols>([federated.0m2ojda1ih48r312ma38r1hlijh9].[yr:Calculation_889179474267987968:ok] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[mn:Calculation_889179474267987968:ok] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[dy:Calculation_889179474267987968:ok] / [federated.0m2ojda1ih48r312ma38r1hlijh9].[hr:Calculation_889179474267987968:ok])))</cols>
      </table>
      <simple-id uuid='{479DABD6-75A8-4D7A-8F3C-A837A14CDF36}' />
    </worksheet>
    <worksheet name='Dispatch with Load (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='tab_dam_generator_power_combined' name='federated.0m2ojda1ih48r312ma38r1hlijh9' />
          </datasources>
          <datasource-dependencies datasource='federated.0m2ojda1ih48r312ma38r1hlijh9'>
            <column datatype='string' name='[Attribute]' role='dimension' type='nominal' />
            <column caption='Charging Time' datatype='string' name='[Calculation_1086493432799272960]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-morning-&quot;) THEN&#13;&#10;  &quot;12-3 AM&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-evening-&quot;) THEN&#13;&#10;  &quot;12-3 PM&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='Charging Type' datatype='string' name='[Calculation_1086493432799367169]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-flexible&quot;) THEN&#13;&#10;  &quot;Flexible&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-inflexible&quot;) THEN&#13;&#10;  &quot;Inflexible&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='EV Adoption Level' datatype='string' name='[Calculation_1086493432800079874]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-low-&quot;) THEN&#13;&#10;  &quot;Low&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-med-&quot;) THEN&#13;&#10;  &quot;Med&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-high-&quot;) THEN&#13;&#10;  &quot;High&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='Representative Days' datatype='datetime' name='[Calculation_1086493432800321539]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF [Timeblock]==&quot;t1&quot; THEN DATEPARSE(&quot;dd.MMMM.yyyy&quot;,&quot;21.April.2037&quot;)&#13;&#10;ELSEIF [Timeblock]==&quot;t2&quot; THEN DATEPARSE(&quot;dd.MMMM.yyyy&quot;,&quot;15.June.2037&quot;)&#13;&#10;ELSEIF [Timeblock]==&quot;t3&quot; THEN DATEPARSE(&quot;dd.MMMM.yyyy&quot;,&quot;13.October.2037&quot;)&#13;&#10;ELSEIF [Timeblock]==&quot;t4&quot; THEN DATEPARSE(&quot;dd.MMMM.yyyy&quot;,&quot;12.December.2037&quot;)&#13;&#10;END' />
            </column>
            <column caption='Time Interval' datatype='string' name='[Calculation_1086493432800645124]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Timeblock]==&quot;t1&quot; THEN&#13;&#10;  [Attribute]&#13;&#10;ELSEIF [Timeblock]==&quot;t2&quot; THEN&#13;&#10;  &quot;t&quot;+STR(120+INT(RIGHT([Attribute],LEN([Attribute])-1)))&#13;&#10;ELSEIF [Timeblock]==&quot;t3&quot; THEN&#13;&#10;  &quot;t&quot;+STR(240+INT(RIGHT([Attribute],LEN([Attribute])-1)))&#13;&#10;ELSE&#13;&#10;  &quot;t&quot;+STR(360+INT(RIGHT([Attribute],LEN([Attribute])-1)))&#13;&#10;END' />
            </column>
            <column caption='Generation for Load [MW]' datatype='real' name='[Calculation_884112924427558912]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_generator_power_combined.csv&quot; THEN&#13;&#10;  IF [Resource]==&quot;Curtailment&quot; THEN&#13;&#10;    -1*Value&#13;&#10;  ELSE&#13;&#10;    [Value]&#13;&#10;  END&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; THEN&#13;&#10;  [Value]&#13;&#10;END' />
            </column>
            <column caption='Generation Labels' datatype='string' name='[Calculation_884112924428046337]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_generator_power_combined.csv&quot; THEN&#13;&#10;  [Resource]&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&gt;=0 THEN&#13;&#10;  [Resource]&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&lt;0 THEN&#13;&#10;   [Resource]+&quot; Charging&quot;&#13;&#10;END' />
            </column>
            <column caption='Charging Grid Batteries / PHS [MW]' datatype='real' name='[Calculation_884112924457828355]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&lt;0 AND [Resource]!=&quot;Hydro Reservoir&quot; THEN&#13;&#10;  [Value]&#13;&#10;ELSE&#13;&#10;  0&#13;&#10;END' />
            </column>
            <column caption='Date Time' datatype='datetime' name='[Calculation_889179474267987968]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATEADD(&apos;hour&apos;,INT(RIGHT([Calculation_1086493432800645124],LEN([Calculation_1086493432800645124])-1))-1,[Calculation_1086493432800321539])' />
            </column>
            <column caption='Capacity Expansion' datatype='string' name='[Calculation_890868329821888518]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-solar-added-&quot;) THEN&#13;&#10;  &quot;New Solar&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-wind-added-&quot;) THEN&#13;&#10;  &quot;New Wind&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='Charging EVs [MW]' datatype='real' name='[Calculation_913104849175195648]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_931963670409289734]+[Calculation_931963670409551879]' />
            </column>
            <column caption='Total Generation [MW]' datatype='real' name='[Calculation_918452871620472832]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_generator_power_combined.csv&quot; THEN&#13;&#10;  IF [Resource]==&quot;Unmet Demand&quot; THEN&#13;&#10;    0*[Value]&#13;&#10;  ELSEIF [Resource]==&quot;Curtailment&quot; THEN&#13;&#10;    -1*[Value]&#13;&#10;  ELSE&#13;&#10;    [Value]&#13;&#10;  END&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&gt;=0 THEN&#13;&#10;  [Value]&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&lt;0 THEN&#13;&#10;  0*[Value]&#13;&#10;END' />
            </column>
            <column caption='Inflexible Load [MW]' datatype='real' name='[Calculation_931963670409289734]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_loads_combined.csv&quot; THEN&#13;&#10;  [Value]&#13;&#10;ELSE&#13;&#10;  0&#13;&#10;END' />
            </column>
            <column caption='Flexible Load [MW]' datatype='real' name='[Calculation_931963670409551879]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_demand_response_load_combined.csv&quot; THEN&#13;&#10;  [Value]&#13;&#10;ELSE&#13;&#10;  0&#13;&#10;END' />
            </column>
            <column caption='Total Load [MW]' datatype='real' name='[Calculation_931963670410522634]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_913104849175195648]-[Calculation_884112924457828355]' />
            </column>
            <column caption='Generation Labels with Charging (group)' datatype='string' name='[Generation Labels (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Calculation_884112924428046337]' new-bin='true'>
                <bin default-name='false' value='&quot;CCGT&quot;'>
                  <value>&quot;CCGT New&quot;</value>
                  <value>&quot;CCGT Old&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Coal&quot;'>
                  <value>&quot;Coal new&quot;</value>
                  <value>&quot;Coal Old&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Diesel&quot;'>
                  <value>&quot;Backup&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Hydro&quot;'>
                  <value>&quot;Hydro Reservoir&quot;</value>
                  <value>&quot;Hydro Run of River&quot;</value>
                  <value>&quot;Pumped Hydro Storage&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Nuclear&quot;'>
                  <value>&quot;Nuclear New&quot;</value>
                  <value>&quot;Nuclear Old&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Other &quot;'>
                  <value>&quot;Biomass&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Solar&quot;'>
                  <value>&quot;Curtailment&quot;</value>
                  <value>&quot;Solar&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Resource]' role='dimension' type='nominal' />
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Timeblock]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_889179474267987968]' derivation='Day' name='[dy:Calculation_889179474267987968:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_889179474267987968]' derivation='Hour' name='[hr:Calculation_889179474267987968:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_889179474267987968]' derivation='Month' name='[mn:Calculation_889179474267987968:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1086493432799272960]' derivation='None' name='[none:Calculation_1086493432799272960:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1086493432799367169]' derivation='None' name='[none:Calculation_1086493432799367169:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1086493432800079874]' derivation='None' name='[none:Calculation_1086493432800079874:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_890868329821888518]' derivation='None' name='[none:Calculation_890868329821888518:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_884112924427558912]' derivation='Sum' name='[sum:Calculation_884112924427558912:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_913104849175195648]' derivation='Sum' name='[sum:Calculation_913104849175195648:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_918452871620472832]' derivation='Sum' name='[sum:Calculation_918452871620472832:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_931963670409289734]' derivation='Sum' name='[sum:Calculation_931963670409289734:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_931963670410522634]' derivation='Sum' name='[sum:Calculation_931963670410522634:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_889179474267987968]' derivation='Year' name='[yr:Calculation_889179474267987968:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_918452871620472832:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_931963670410522634:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_913104849175195648:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_931963670409289734:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_918452871620472832:qk]&quot;</bucket>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_931963670410522634:qk]&quot;</bucket>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_913104849175195648:qk]&quot;</bucket>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_931963670409289734:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group)]' direction='ASC'>
            <dictionary>
              <bucket>%null%</bucket>
              <bucket>&quot;Hydro Reservoir Charging&quot;</bucket>
              <bucket>&quot;Batteries Charging&quot;</bucket>
              <bucket>&quot;Pumped Hydro Storage Charging&quot;</bucket>
              <bucket>&quot;Unmet Demand&quot;</bucket>
              <bucket>&quot;Curtailment&quot;</bucket>
              <bucket>&quot;Solar&quot;</bucket>
              <bucket>&quot;Wind&quot;</bucket>
              <bucket>&quot;Batteries&quot;</bucket>
              <bucket>&quot;Diesel&quot;</bucket>
              <bucket>&quot;Other &quot;</bucket>
              <bucket>&quot;CCGT&quot;</bucket>
              <bucket>&quot;Hydro&quot;</bucket>
              <bucket>&quot;Coal&quot;</bucket>
              <bucket>&quot;Nuclear&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;None&quot;</bucket>
              <bucket>&quot;12-3 AM&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;None&quot;</bucket>
              <bucket>&quot;Flexible&quot;</bucket>
              <bucket>&quot;Inflexible&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;None&quot;</bucket>
              <bucket>&quot;Med&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;default-L-H-8-1275-flexible&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;med-day-L-H-8-1275-flexible&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]</column>
            <column>[federated.0m2ojda1ih48r312ma38r1hlijh9].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0m2ojda1ih48r312ma38r1hlijh9].[Multiple Values]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_884112924427558912:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group)]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0m2ojda1ih48r312ma38r1hlijh9].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>(([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_890868329821888518:nk] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk] / [federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk]))) * ([federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_884112924427558912:qk] + [federated.0m2ojda1ih48r312ma38r1hlijh9].[Multiple Values]))</rows>
        <cols>([federated.0m2ojda1ih48r312ma38r1hlijh9].[yr:Calculation_889179474267987968:ok] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[mn:Calculation_889179474267987968:ok] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[dy:Calculation_889179474267987968:ok] / [federated.0m2ojda1ih48r312ma38r1hlijh9].[hr:Calculation_889179474267987968:ok])))</cols>
      </table>
      <simple-id uuid='{E3B40BD3-1B4D-43D4-909A-F4047666F33E}' />
    </worksheet>
    <worksheet name='Dispatch with Load (no charging)'>
      <table>
        <view>
          <datasources>
            <datasource caption='tab_dam_generator_power_combined' name='federated.0m2ojda1ih48r312ma38r1hlijh9' />
          </datasources>
          <datasource-dependencies datasource='federated.0m2ojda1ih48r312ma38r1hlijh9'>
            <column datatype='string' name='[Attribute]' role='dimension' type='nominal' />
            <column caption='VRE (non-curtailed)' datatype='real' name='[Calculation_1044553664332267520]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Resource]==&quot;Solar&quot; OR [Resource]==&quot;Wind&quot; THEN&#13;&#10;  [Value]&#13;&#10;ELSEIF [Resource]==&quot;Curtailment&quot; THEN&#13;&#10;  -1*[Value]&#13;&#10;ELSE&#13;&#10;  0&#13;&#10;END' />
            </column>
            <column caption='Unmet Demand' datatype='real' name='[Calculation_1044553664333684737]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Resource]==&quot;Unmet Demand&quot; THEN&#13;&#10;  [Value]&#13;&#10;ELSE&#13;&#10;  0&#13;&#10;END' />
            </column>
            <column caption='Served Load' datatype='real' name='[Calculation_1044553664334561282]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_931963670410522634]-[Calculation_1044553664333684737]' />
            </column>
            <column caption='Net Served Load [MW]' datatype='real' name='[Calculation_1044553664334868483]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1044553664334561282]-[Calculation_1044553664332267520]' />
            </column>
            <column caption='Charging Time' datatype='string' name='[Calculation_1086493432799272960]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-morning-&quot;) THEN&#13;&#10;  &quot;12-3 AM&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-evening-&quot;) THEN&#13;&#10;  &quot;12-3 PM&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='Charging Type' datatype='string' name='[Calculation_1086493432799367169]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-flexible&quot;) THEN&#13;&#10;  &quot;Flexible&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-inflexible&quot;) THEN&#13;&#10;  &quot;Inflexible&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='EV Adoption Level' datatype='string' name='[Calculation_1086493432800079874]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-low-&quot;) THEN&#13;&#10;  &quot;Low&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-med-&quot;) THEN&#13;&#10;  &quot;Med&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-high-&quot;) THEN&#13;&#10;  &quot;High&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='Representative Days' datatype='datetime' name='[Calculation_1086493432800321539]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF [Timeblock]==&quot;t1&quot; THEN DATEPARSE(&quot;dd.MMMM.yyyy&quot;,&quot;21.April.2037&quot;)&#13;&#10;ELSEIF [Timeblock]==&quot;t2&quot; THEN DATEPARSE(&quot;dd.MMMM.yyyy&quot;,&quot;15.June.2037&quot;)&#13;&#10;ELSEIF [Timeblock]==&quot;t3&quot; THEN DATEPARSE(&quot;dd.MMMM.yyyy&quot;,&quot;13.October.2037&quot;)&#13;&#10;ELSEIF [Timeblock]==&quot;t4&quot; THEN DATEPARSE(&quot;dd.MMMM.yyyy&quot;,&quot;12.December.2037&quot;)&#13;&#10;END' />
            </column>
            <column caption='Time Interval' datatype='string' name='[Calculation_1086493432800645124]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Timeblock]==&quot;t1&quot; THEN&#13;&#10;  [Attribute]&#13;&#10;ELSEIF [Timeblock]==&quot;t2&quot; THEN&#13;&#10;  &quot;t&quot;+STR(120+INT(RIGHT([Attribute],LEN([Attribute])-1)))&#13;&#10;ELSEIF [Timeblock]==&quot;t3&quot; THEN&#13;&#10;  &quot;t&quot;+STR(240+INT(RIGHT([Attribute],LEN([Attribute])-1)))&#13;&#10;ELSE&#13;&#10;  &quot;t&quot;+STR(360+INT(RIGHT([Attribute],LEN([Attribute])-1)))&#13;&#10;END' />
            </column>
            <column caption='Curtailment' datatype='real' name='[Calculation_430093791531491328]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_generator_power_combined.csv&quot; AND [Resource]==&quot;Curtailment&quot; THEN&#13;&#10;  [Value]&#13;&#10;ELSE&#13;&#10;  0&#13;&#10;END' />
            </column>
            <column caption='Curtailed VRE [MW]' datatype='real' name='[Calculation_430093791532744705]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_430093791531491328]+[Calculation_918452871620472832]' />
            </column>
            <column caption='Generation Labels' datatype='string' name='[Calculation_884112924428046337]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_generator_power_combined.csv&quot; THEN&#13;&#10;  [Resource]&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&gt;=0 THEN&#13;&#10;  [Resource]&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&lt;0 THEN&#13;&#10;   [Resource]+&quot; Charging&quot;&#13;&#10;END' />
            </column>
            <column caption='Charging Grid Batteries / PHS [MW]' datatype='real' name='[Calculation_884112924457828355]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&lt;0 AND [Resource]!=&quot;Hydro Reservoir&quot; THEN&#13;&#10;  [Value]&#13;&#10;ELSE&#13;&#10;  0&#13;&#10;END' />
            </column>
            <column caption='Date Time' datatype='datetime' name='[Calculation_889179474267987968]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATEADD(&apos;hour&apos;,INT(RIGHT([Calculation_1086493432800645124],LEN([Calculation_1086493432800645124])-1))-1,[Calculation_1086493432800321539])' />
            </column>
            <column caption='Capacity Expansion' datatype='string' name='[Calculation_890868329821888518]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-solar-added-&quot;) THEN&#13;&#10;  &quot;New Solar&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-wind-added-&quot;) THEN&#13;&#10;  &quot;New Wind&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='Charging EVs [MW]' datatype='real' name='[Calculation_913104849175195648]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_931963670409289734]+[Calculation_931963670409551879]' />
            </column>
            <column caption='Total Generation [MW]' datatype='real' name='[Calculation_918452871620472832]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_generator_power_combined.csv&quot; THEN&#13;&#10;  IF [Resource]==&quot;Unmet Demand&quot; THEN&#13;&#10;    0*[Value]&#13;&#10;  ELSEIF [Resource]==&quot;Curtailment&quot; THEN&#13;&#10;    -1*[Value]&#13;&#10;  ELSE&#13;&#10;    [Value]&#13;&#10;  END&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&gt;=0 THEN&#13;&#10;  [Value]&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&lt;0 THEN&#13;&#10;  0*[Value]&#13;&#10;END' />
            </column>
            <column caption='Inflexible Load [MW]' datatype='real' name='[Calculation_931963670409289734]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_loads_combined.csv&quot; THEN&#13;&#10;  [Value]&#13;&#10;ELSE&#13;&#10;  0&#13;&#10;END' />
            </column>
            <column caption='Flexible Load [MW]' datatype='real' name='[Calculation_931963670409551879]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_demand_response_load_combined.csv&quot; THEN&#13;&#10;  [Value]&#13;&#10;ELSE&#13;&#10;  0&#13;&#10;END' />
            </column>
            <column caption='Total Load [MW]' datatype='real' name='[Calculation_931963670410522634]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_913104849175195648]-[Calculation_884112924457828355]' />
            </column>
            <column caption='Generation Labels (group)' datatype='string' name='[Generation Labels (group) (copy)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Calculation_884112924428046337]' new-bin='true'>
                <bin default-name='false' value='&quot;Batteries&quot;'>
                  <value>&quot;Batteries&quot;</value>
                  <value>&quot;Batteries Charging&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;CCGT&quot;'>
                  <value>&quot;CCGT New&quot;</value>
                  <value>&quot;CCGT Old&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Coal&quot;'>
                  <value>&quot;Coal new&quot;</value>
                  <value>&quot;Coal Old&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Diesel&quot;'>
                  <value>&quot;Backup&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Hydro&quot;'>
                  <value>&quot;Hydro Reservoir&quot;</value>
                  <value>&quot;Hydro Reservoir Charging&quot;</value>
                  <value>&quot;Hydro Run of River&quot;</value>
                  <value>&quot;Pumped Hydro Storage&quot;</value>
                  <value>&quot;Pumped Hydro Storage Charging&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Nuclear&quot;'>
                  <value>&quot;Nuclear New&quot;</value>
                  <value>&quot;Nuclear Old&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Other &quot;'>
                  <value>&quot;Biomass&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Solar&quot;'>
                  <value>&quot;Curtailment&quot;</value>
                  <value>&quot;Solar&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Generation for Load (no charging) [MW]' datatype='real' name='[Generation for Load [MW]] (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_generator_power_combined.csv&quot; THEN&#13;&#10;  IF [Resource]==&quot;Curtailment&quot; THEN&#13;&#10;    -1*Value&#13;&#10;  ELSE&#13;&#10;    [Value]&#13;&#10;  END&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; THEN&#13;&#10;  IF [Value]&lt;0 THEN&#13;&#10;    0*[Value]&#13;&#10;  ELSE&#13;&#10;    [Value]&#13;&#10;  END&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Resource]' role='dimension' type='nominal' />
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Timeblock]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_889179474267987968]' derivation='Day' name='[dy:Calculation_889179474267987968:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_889179474267987968]' derivation='Hour' name='[hr:Calculation_889179474267987968:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_889179474267987968]' derivation='Month' name='[mn:Calculation_889179474267987968:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1086493432799272960]' derivation='None' name='[none:Calculation_1086493432799272960:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1086493432799367169]' derivation='None' name='[none:Calculation_1086493432799367169:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1086493432800079874]' derivation='None' name='[none:Calculation_1086493432800079874:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_889179474267987968]' derivation='None' name='[none:Calculation_889179474267987968:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_890868329821888518]' derivation='None' name='[none:Calculation_890868329821888518:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1044553664334868483]' derivation='Sum' name='[sum:Calculation_1044553664334868483:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_430093791532744705]' derivation='Sum' name='[sum:Calculation_430093791532744705:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_913104849175195648]' derivation='Sum' name='[sum:Calculation_913104849175195648:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_918452871620472832]' derivation='Sum' name='[sum:Calculation_918452871620472832:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_931963670409289734]' derivation='Sum' name='[sum:Calculation_931963670409289734:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_931963670410522634]' derivation='Sum' name='[sum:Calculation_931963670410522634:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Generation for Load [MW]] (copy)]' derivation='Sum' name='[sum:Generation for Load [MW]] (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_889179474267987968]' derivation='Year' name='[yr:Calculation_889179474267987968:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_931963670409289734:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_913104849175195648:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_931963670410522634:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_918452871620472832:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_1044553664334868483:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_430093791532744705:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_931963670409289734:qk]&quot;</bucket>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_913104849175195648:qk]&quot;</bucket>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_931963670410522634:qk]&quot;</bucket>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_918452871620472832:qk]&quot;</bucket>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_1044553664334868483:qk]&quot;</bucket>
              <bucket>&quot;[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_430093791532744705:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group) (copy)]' direction='ASC'>
            <dictionary>
              <bucket>%null%</bucket>
              <bucket>&quot;Unmet Demand&quot;</bucket>
              <bucket>&quot;Solar&quot;</bucket>
              <bucket>&quot;Wind&quot;</bucket>
              <bucket>&quot;Batteries&quot;</bucket>
              <bucket>&quot;Diesel&quot;</bucket>
              <bucket>&quot;Other &quot;</bucket>
              <bucket>&quot;CCGT&quot;</bucket>
              <bucket>&quot;Hydro&quot;</bucket>
              <bucket>&quot;Coal&quot;</bucket>
              <bucket>&quot;Nuclear&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;None&quot;</bucket>
              <bucket>&quot;12-3 AM&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;None&quot;</bucket>
              <bucket>&quot;Flexible&quot;</bucket>
              <bucket>&quot;Inflexible&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;None&quot;</bucket>
              <bucket>&quot;Med&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_889179474267987968:qk]' included-values='in-range'>
            <min>#2037-04-21 00:00:00#</min>
            <max>#2037-04-21 23:59:59#</max>
          </filter>
          <filter class='categorical' column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;med-day-L-H-8-1275-inflexible&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;real-med-morning-L-H-8-1275-inflexible&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]</column>
            <column>[federated.0m2ojda1ih48r312ma38r1hlijh9].[:Measure Names]</column>
            <column>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_889179474267987968:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0m2ojda1ih48r312ma38r1hlijh9].[Multiple Values]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <encoding attr='space' class='0' field='[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Generation for Load [MW]] (copy):qk]' field-type='quantitative' max='510000.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <format attr='display' class='0' field='[federated.0m2ojda1ih48r312ma38r1hlijh9].[Multiple Values]' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Generation for Load [MW]] (copy):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group) (copy)]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0m2ojda1ih48r312ma38r1hlijh9].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>(([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_890868329821888518:nk] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk] / [federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk]))) * ([federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Generation for Load [MW]] (copy):qk] + [federated.0m2ojda1ih48r312ma38r1hlijh9].[Multiple Values]))</rows>
        <cols>([federated.0m2ojda1ih48r312ma38r1hlijh9].[yr:Calculation_889179474267987968:ok] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[mn:Calculation_889179474267987968:ok] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[dy:Calculation_889179474267987968:ok] / [federated.0m2ojda1ih48r312ma38r1hlijh9].[hr:Calculation_889179474267987968:ok])))</cols>
      </table>
      <simple-id uuid='{3837D243-811F-4FBE-AF1E-CFAB3E86C76A}' />
    </worksheet>
    <worksheet name='Dispatch with Price'>
      <table>
        <view>
          <datasources>
            <datasource caption='tab_dam_generator_power_combined' name='federated.0m2ojda1ih48r312ma38r1hlijh9' />
          </datasources>
          <datasource-dependencies datasource='federated.0m2ojda1ih48r312ma38r1hlijh9'>
            <column datatype='string' name='[Attribute]' role='dimension' type='nominal' />
            <column caption='Charging Time' datatype='string' name='[Calculation_1086493432799272960]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-morning-&quot;) THEN&#13;&#10;  &quot;12-3 AM&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-evening-&quot;) THEN&#13;&#10;  &quot;12-3 PM&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='Charging Type' datatype='string' name='[Calculation_1086493432799367169]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-flexible&quot;) THEN&#13;&#10;  &quot;Flexible&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-inflexible&quot;) THEN&#13;&#10;  &quot;Inflexible&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='EV Adoption Level' datatype='string' name='[Calculation_1086493432800079874]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-low-&quot;) THEN&#13;&#10;  &quot;Low&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-med-&quot;) THEN&#13;&#10;  &quot;Med&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-high-&quot;) THEN&#13;&#10;  &quot;High&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='Representative Days' datatype='datetime' name='[Calculation_1086493432800321539]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF [Timeblock]==&quot;t1&quot; THEN DATEPARSE(&quot;dd.MMMM.yyyy&quot;,&quot;21.April.2037&quot;)&#13;&#10;ELSEIF [Timeblock]==&quot;t2&quot; THEN DATEPARSE(&quot;dd.MMMM.yyyy&quot;,&quot;15.June.2037&quot;)&#13;&#10;ELSEIF [Timeblock]==&quot;t3&quot; THEN DATEPARSE(&quot;dd.MMMM.yyyy&quot;,&quot;13.October.2037&quot;)&#13;&#10;ELSEIF [Timeblock]==&quot;t4&quot; THEN DATEPARSE(&quot;dd.MMMM.yyyy&quot;,&quot;12.December.2037&quot;)&#13;&#10;END' />
            </column>
            <column caption='Time Interval' datatype='string' name='[Calculation_1086493432800645124]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Timeblock]==&quot;t1&quot; THEN&#13;&#10;  [Attribute]&#13;&#10;ELSEIF [Timeblock]==&quot;t2&quot; THEN&#13;&#10;  &quot;t&quot;+STR(120+INT(RIGHT([Attribute],LEN([Attribute])-1)))&#13;&#10;ELSEIF [Timeblock]==&quot;t3&quot; THEN&#13;&#10;  &quot;t&quot;+STR(240+INT(RIGHT([Attribute],LEN([Attribute])-1)))&#13;&#10;ELSE&#13;&#10;  &quot;t&quot;+STR(360+INT(RIGHT([Attribute],LEN([Attribute])-1)))&#13;&#10;END' />
            </column>
            <column caption='Generation for Load [MW]' datatype='real' name='[Calculation_884112924427558912]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_generator_power_combined.csv&quot; THEN&#13;&#10;  IF [Resource]==&quot;Curtailment&quot; THEN&#13;&#10;    -1*Value&#13;&#10;  ELSE&#13;&#10;    [Value]&#13;&#10;  END&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; THEN&#13;&#10;  [Value]&#13;&#10;END' />
            </column>
            <column caption='Generation Labels' datatype='string' name='[Calculation_884112924428046337]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_generator_power_combined.csv&quot; THEN&#13;&#10;  [Resource]&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&gt;=0 THEN&#13;&#10;  [Resource]&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&lt;0 THEN&#13;&#10;   [Resource]+&quot; Charging&quot;&#13;&#10;END' />
            </column>
            <column caption='Date Time' datatype='datetime' name='[Calculation_889179474267987968]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATEADD(&apos;hour&apos;,INT(RIGHT([Calculation_1086493432800645124],LEN([Calculation_1086493432800645124])-1))-1,[Calculation_1086493432800321539])' />
            </column>
            <column caption='Price [$/MWh]' datatype='real' name='[Calculation_889179474271539201]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_prices_combined.csv&quot; THEN&#13;&#10;  [Value]&#13;&#10;END' />
            </column>
            <column caption='Capacity Expansion' datatype='string' name='[Calculation_890868329821888518]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-solar-added-&quot;) THEN&#13;&#10;  &quot;New Solar&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-wind-added-&quot;) THEN&#13;&#10;  &quot;New Wind&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='Generation Labels with Charging (group)' datatype='string' name='[Generation Labels (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Calculation_884112924428046337]' new-bin='true'>
                <bin default-name='false' value='&quot;CCGT&quot;'>
                  <value>&quot;CCGT New&quot;</value>
                  <value>&quot;CCGT Old&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Coal&quot;'>
                  <value>&quot;Coal new&quot;</value>
                  <value>&quot;Coal Old&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Diesel&quot;'>
                  <value>&quot;Backup&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Hydro&quot;'>
                  <value>&quot;Hydro Reservoir&quot;</value>
                  <value>&quot;Hydro Run of River&quot;</value>
                  <value>&quot;Pumped Hydro Storage&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Nuclear&quot;'>
                  <value>&quot;Nuclear New&quot;</value>
                  <value>&quot;Nuclear Old&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Other &quot;'>
                  <value>&quot;Biomass&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Solar&quot;'>
                  <value>&quot;Curtailment&quot;</value>
                  <value>&quot;Solar&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Resource]' role='dimension' type='nominal' />
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Timeblock]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_889179474267987968]' derivation='Day' name='[dy:Calculation_889179474267987968:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_889179474267987968]' derivation='Hour' name='[hr:Calculation_889179474267987968:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_889179474271539201]' derivation='Max' name='[max:Calculation_889179474271539201:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_889179474267987968]' derivation='Month' name='[mn:Calculation_889179474267987968:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1086493432799272960]' derivation='None' name='[none:Calculation_1086493432799272960:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1086493432799367169]' derivation='None' name='[none:Calculation_1086493432799367169:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1086493432800079874]' derivation='None' name='[none:Calculation_1086493432800079874:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_890868329821888518]' derivation='None' name='[none:Calculation_890868329821888518:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_884112924427558912]' derivation='Sum' name='[sum:Calculation_884112924427558912:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_889179474267987968]' derivation='Year' name='[yr:Calculation_889179474267987968:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group)]' direction='ASC'>
            <dictionary>
              <bucket>%null%</bucket>
              <bucket>&quot;Hydro Reservoir Charging&quot;</bucket>
              <bucket>&quot;Batteries Charging&quot;</bucket>
              <bucket>&quot;Pumped Hydro Storage Charging&quot;</bucket>
              <bucket>&quot;Unmet Demand&quot;</bucket>
              <bucket>&quot;Curtailment&quot;</bucket>
              <bucket>&quot;Solar&quot;</bucket>
              <bucket>&quot;Wind&quot;</bucket>
              <bucket>&quot;Batteries&quot;</bucket>
              <bucket>&quot;Diesel&quot;</bucket>
              <bucket>&quot;Other &quot;</bucket>
              <bucket>&quot;CCGT&quot;</bucket>
              <bucket>&quot;Hydro&quot;</bucket>
              <bucket>&quot;Coal&quot;</bucket>
              <bucket>&quot;Nuclear&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;None&quot;</bucket>
              <bucket>&quot;12-3 AM&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;None&quot;</bucket>
              <bucket>&quot;Inflexible&quot;</bucket>
              <bucket>&quot;Flexible&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;None&quot;</bucket>
              <bucket>&quot;Low&quot;</bucket>
              <bucket>&quot;Med&quot;</bucket>
              <bucket>&quot;High&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_890868329821888518:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;None&quot;</bucket>
              <bucket>&quot;New Solar&quot;</bucket>
              <bucket>&quot;New Wind&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]'>
            <groupfilter function='level-members' level='[none:Scenario:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0m2ojda1ih48r312ma38r1hlijh9].[max:Calculation_889179474271539201:qk]' field-type='quantitative' fold='true' scale='log' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_884112924427558912:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group)]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0m2ojda1ih48r312ma38r1hlijh9].[max:Calculation_889179474271539201:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>(([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_890868329821888518:nk] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk] / [federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk]))) * ([federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_884112924427558912:qk] + [federated.0m2ojda1ih48r312ma38r1hlijh9].[max:Calculation_889179474271539201:qk]))</rows>
        <cols>([federated.0m2ojda1ih48r312ma38r1hlijh9].[yr:Calculation_889179474267987968:ok] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[mn:Calculation_889179474267987968:ok] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[dy:Calculation_889179474267987968:ok] / [federated.0m2ojda1ih48r312ma38r1hlijh9].[hr:Calculation_889179474267987968:ok])))</cols>
      </table>
      <simple-id uuid='{ADF2290B-4BE5-4103-BCBD-CE6C6455DFA0}' />
    </worksheet>
    <worksheet name='Emissions (Absolute)'>
      <table>
        <view>
          <datasources>
            <datasource caption='tab_dam_generator_power_combined' name='federated.0m2ojda1ih48r312ma38r1hlijh9' />
          </datasources>
          <datasource-dependencies datasource='federated.0m2ojda1ih48r312ma38r1hlijh9'>
            <column caption='Charging Time' datatype='string' name='[Calculation_1086493432799272960]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-morning-&quot;) THEN&#13;&#10;  &quot;12-3 AM&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-evening-&quot;) THEN&#13;&#10;  &quot;12-3 PM&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='Charging Type' datatype='string' name='[Calculation_1086493432799367169]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-flexible&quot;) THEN&#13;&#10;  &quot;Flexible&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-inflexible&quot;) THEN&#13;&#10;  &quot;Inflexible&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='EV Adoption Level' datatype='string' name='[Calculation_1086493432800079874]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-low-&quot;) THEN&#13;&#10;  &quot;Low&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-med-&quot;) THEN&#13;&#10;  &quot;Med&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-high-&quot;) THEN&#13;&#10;  &quot;High&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='Generation for Load [MW]' datatype='real' name='[Calculation_884112924427558912]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_generator_power_combined.csv&quot; THEN&#13;&#10;  IF [Resource]==&quot;Curtailment&quot; THEN&#13;&#10;    -1*Value&#13;&#10;  ELSE&#13;&#10;    [Value]&#13;&#10;  END&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; THEN&#13;&#10;  [Value]&#13;&#10;END' />
            </column>
            <column caption='Generation Labels' datatype='string' name='[Calculation_884112924428046337]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_generator_power_combined.csv&quot; THEN&#13;&#10;  [Resource]&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&gt;=0 THEN&#13;&#10;  [Resource]&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&lt;0 THEN&#13;&#10;   [Resource]+&quot; Charging&quot;&#13;&#10;END' />
            </column>
            <column caption='Weighted Generation for Load [MW]' datatype='real' name='[Calculation_884112924430045186]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_931963670410043401]*[Calculation_884112924427558912]' />
            </column>
            <column caption='Fuel Type' datatype='string' name='[Calculation_890868329750093824]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Calculation_884112924428046337]&#13;&#10;  WHEN &quot;Backup&quot; THEN &quot;diesel&quot;&#13;&#10;  WHEN &quot;Batteries&quot; THEN &quot;none&quot;&#13;&#10;  WHEN &quot;Batteries Charging&quot; THEN &quot;none&quot;&#13;&#10;  WHEN &quot;Biomass&quot; THEN &quot;biomass&quot;&#13;&#10;  WHEN &quot;CCGT New&quot; THEN &quot;natural_gas&quot;&#13;&#10;  WHEN &quot;CCGT Old&quot; THEN &quot;natural_gas&quot;&#13;&#10;  WHEN &quot;Coal new&quot; THEN &quot;coal&quot;&#13;&#10;  WHEN &quot;Coal Old&quot; THEN &quot;coal&quot;&#13;&#10;  WHEN &quot;Curtailment&quot; THEN &quot;none&quot;&#13;&#10;  WHEN &quot;Hydro Reservoir&quot; THEN &quot;none&quot;&#13;&#10;  WHEN &quot;Hydro Reservoir Charging&quot; THEN &quot;none&quot;&#13;&#10;  WHEN &quot;Hydro Run of River&quot; THEN &quot;none&quot;&#13;&#10;  WHEN &quot;Nuclear New&quot; THEN &quot;uranium&quot;&#13;&#10;  WHEN &quot;Nuclear Old&quot; THEN &quot;uranium&quot;&#13;&#10;  WHEN &quot;Pumped Hydro Storage&quot; THEN &quot;none&quot;&#13;&#10;  WHEN &quot;Pumped Hydro Storage Charging&quot; THEN &quot;none&quot;&#13;&#10;  WHEN &quot;Solar&quot; THEN &quot;none&quot;&#13;&#10;  WHEN &quot;Unmet Demand&quot; THEN &quot;none&quot;&#13;&#10;  WHEN &quot;Wind&quot; THEN &quot;none&quot;&#13;&#10;  ELSE &quot;Unknown Generation Label&quot;&#13;&#10;END' />
            </column>
            <column caption='Heat Rate [MMBtu/MWh]' datatype='real' name='[Calculation_890868329752530945]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_890868329750093824]=&quot;biomass&quot; THEN&#13;&#10;  16.655814&#13;&#10;ELSEIF [Calculation_890868329750093824]=&quot;diesel&quot; THEN&#13;&#10;  27.77777778&#13;&#10;ELSEIF [Calculation_890868329750093824]=&quot;natural_gas&quot; THEN&#13;&#10;  IF [Zone]=1 THEN&#13;&#10;    IF [Calculation_884112924428046337]=&quot;CCGT Old&quot; THEN 7.763841639&#13;&#10;    ELSE 6.635897436&#13;&#10;    END&#13;&#10;  ELSEIF [Zone]=2 THEN&#13;&#10;    IF [Calculation_884112924428046337]=&quot;CCGT Old&quot; THEN 6.969187521&#13;&#10;    ELSE 6.635897436&#13;&#10;    END&#13;&#10;  ELSEIF [Zone]=3 THEN&#13;&#10;    IF [Calculation_884112924428046337]=&quot;CCGT Old&quot; THEN 6.151066015&#13;&#10;    ELSE 6.635897436&#13;&#10;    END&#13;&#10;  ELSEIF [Zone]=4 THEN 6.635897436&#13;&#10;  ELSEIF [Zone]=5 THEN 7.70319442&#13;&#10;  END&#13;&#10;ELSEIF [Calculation_890868329750093824]=&quot;coal&quot; THEN&#13;&#10;  IF [Zone]=1 THEN&#13;&#10;    IF [Calculation_884112924428046337]=&quot;Coal Old&quot; THEN 10.04809714&#13;&#10;    ELSE 9.466312997&#13;&#10;    END&#13;&#10;  ELSEIF [Zone]=2 THEN&#13;&#10;    IF [Calculation_884112924428046337]=&quot;Coal Old&quot; THEN 9.120735453&#13;&#10;    ELSE 9.466312997&#13;&#10;    END&#13;&#10;  ELSEIF [Zone]=3 THEN&#13;&#10;    IF [Calculation_884112924428046337]=&quot;Coal Old&quot; THEN 10.50801205&#13;&#10;    ELSE 9.466312997&#13;&#10;    END&#13;&#10;  ELSEIF [Zone]=4 THEN&#13;&#10;    IF [Calculation_884112924428046337]=&quot;Coal Old&quot; THEN 10.56742598&#13;&#10;    ELSE 9.466312997&#13;&#10;    END&#13;&#10;  ELSEIF [Zone]=5 THEN 9.842354016&#13;&#10;  END&#13;&#10;ELSEIF [Calculation_890868329750093824]=&quot;uranium&quot; THEN&#13;&#10;  IF [Calculation_884112924428046337]=&quot;Nuclear Old&quot; AND Zone=2 THEN 10.15243027&#13;&#10;  ELSEIF [Calculation_884112924428046337]=&quot;Nuclear Old&quot; AND Zone=3 THEN 9.969247&#13;&#10;  ELSE 10.10431792&#13;&#10;  END&#13;&#10;ELSE&#13;&#10;  0.0&#13;&#10;END' />
            </column>
            <column caption='CO2 emissions [tons/MMBtu]' datatype='real' name='[Calculation_890868329759539202]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_890868329750093824]=&quot;coal&quot; THEN 0.095661822&#13;&#10;ELSEIF [Calculation_890868329750093824]=&quot;natural_gas&quot; THEN 0.052159978&#13;&#10;ELSEIF [Calculation_890868329750093824]=&quot;diesel&quot; THEN 0.072960617&#13;&#10;ELSE 0&#13;&#10;END' />
            </column>
            <column caption='CO2 emissions [Mt]' datatype='real' name='[Calculation_890868329773191171]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_890868329759539202]*[Calculation_890868329752530945]*[Calculation_884112924430045186]/1e6' />
            </column>
            <column caption='CO2 intensity [Mt/MWh]' datatype='real' name='[Calculation_890868329776488453]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM(1e6*[Calculation_890868329773191171])/SUM([Calculation_884112924430045186])' />
            </column>
            <column caption='Capacity Expansion' datatype='string' name='[Calculation_890868329821888518]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-solar-added-&quot;) THEN&#13;&#10;  &quot;New Solar&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-wind-added-&quot;) THEN&#13;&#10;  &quot;New Wind&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='Weights' datatype='real' name='[Calculation_931963670410043401]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Timeblock]&#13;&#10;  WHEN &quot;t1&quot; THEN 36 &#13;&#10;  WHEN &quot;t2&quot; THEN 14&#13;&#10;  WHEN &quot;t3&quot; THEN 9.18368717&#13;&#10;  WHEN &quot;t4&quot; THEN 13&#13;&#10;END' />
            </column>
            <column caption='Generation Labels (group)' datatype='string' name='[Generation Labels (group) (copy)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Calculation_884112924428046337]' new-bin='true'>
                <bin default-name='false' value='&quot;Batteries&quot;'>
                  <value>&quot;Batteries&quot;</value>
                  <value>&quot;Batteries Charging&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;CCGT&quot;'>
                  <value>&quot;CCGT New&quot;</value>
                  <value>&quot;CCGT Old&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Coal&quot;'>
                  <value>&quot;Coal new&quot;</value>
                  <value>&quot;Coal Old&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Diesel&quot;'>
                  <value>&quot;Backup&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Hydro&quot;'>
                  <value>&quot;Hydro Reservoir&quot;</value>
                  <value>&quot;Hydro Reservoir Charging&quot;</value>
                  <value>&quot;Hydro Run of River&quot;</value>
                  <value>&quot;Pumped Hydro Storage&quot;</value>
                  <value>&quot;Pumped Hydro Storage Charging&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Nuclear&quot;'>
                  <value>&quot;Nuclear New&quot;</value>
                  <value>&quot;Nuclear Old&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Other &quot;'>
                  <value>&quot;Biomass&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Solar&quot;'>
                  <value>&quot;Curtailment&quot;</value>
                  <value>&quot;Solar&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Resource]' role='dimension' type='nominal' />
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Timeblock]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column aggregation='Sum' datatype='integer' name='[Zone]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_1086493432799272960]' derivation='None' name='[none:Calculation_1086493432799272960:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1086493432799367169]' derivation='None' name='[none:Calculation_1086493432799367169:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1086493432800079874]' derivation='None' name='[none:Calculation_1086493432800079874:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_890868329821888518]' derivation='None' name='[none:Calculation_890868329821888518:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_890868329773191171]' derivation='Sum' name='[sum:Calculation_890868329773191171:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_890868329776488453]' derivation='User' name='[usr:Calculation_890868329776488453:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group) (copy)]' direction='ASC'>
            <dictionary>
              <bucket>%null%</bucket>
              <bucket>&quot;Unmet Demand&quot;</bucket>
              <bucket>&quot;Curtailment&quot;</bucket>
              <bucket>&quot;Solar&quot;</bucket>
              <bucket>&quot;Wind&quot;</bucket>
              <bucket>&quot;Batteries&quot;</bucket>
              <bucket>&quot;Diesel&quot;</bucket>
              <bucket>&quot;Other &quot;</bucket>
              <bucket>&quot;CCGT&quot;</bucket>
              <bucket>&quot;Hydro&quot;</bucket>
              <bucket>&quot;Coal&quot;</bucket>
              <bucket>&quot;Nuclear&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_1086493432799272960:nk]' member='&quot;12-3 PM&quot;' />
              <groupfilter function='member' level='[none:Calculation_1086493432799272960:nk]' member='&quot;None&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;12-3 AM&quot;</bucket>
              <bucket>&quot;12-3 PM&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Inflexible&quot;</bucket>
              <bucket>&quot;Flexible&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_1086493432800079874:nk]' member='&quot;High&quot;' />
              <groupfilter function='member' level='[none:Calculation_1086493432800079874:nk]' member='&quot;None&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;None&quot;</bucket>
              <bucket>&quot;Low&quot;</bucket>
              <bucket>&quot;Med&quot;</bucket>
              <bucket>&quot;High&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_890868329821888518:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_890868329821888518:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_890868329821888518:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;None&quot;</bucket>
              <bucket>&quot;New Solar&quot;</bucket>
              <bucket>&quot;New Wind&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_890868329821888518:nk]</column>
            <column>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk]</column>
            <column>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0m2ojda1ih48r312ma38r1hlijh9].[usr:Calculation_890868329776488453:qk]' field-type='quantitative' fold='true' max='0.5' min='0.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk]' value='false' />
            <format attr='display' field='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_890868329821888518:nk]' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_890868329773191171:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group) (copy)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='8' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0m2ojda1ih48r312ma38r1hlijh9].[usr:Calculation_890868329776488453:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <text column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[usr:Calculation_890868329776488453:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_890868329773191171:qk] + [federated.0m2ojda1ih48r312ma38r1hlijh9].[usr:Calculation_890868329776488453:qk])</rows>
        <cols>([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_890868329821888518:nk] / [federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk])))</cols>
      </table>
      <simple-id uuid='{FE28697F-437C-4C08-B2A6-1284D2C1CE3F}' />
    </worksheet>
    <worksheet name='Emissions Intensity'>
      <table>
        <view>
          <datasources>
            <datasource caption='tab_dam_generator_power_combined' name='federated.0m2ojda1ih48r312ma38r1hlijh9' />
          </datasources>
          <datasource-dependencies datasource='federated.0m2ojda1ih48r312ma38r1hlijh9'>
            <column caption='Charging Time' datatype='string' name='[Calculation_1086493432799272960]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-morning-&quot;) THEN&#13;&#10;  &quot;12-3 AM&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-evening-&quot;) THEN&#13;&#10;  &quot;12-3 PM&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='Charging Type' datatype='string' name='[Calculation_1086493432799367169]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-flexible&quot;) THEN&#13;&#10;  &quot;Flexible&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-inflexible&quot;) THEN&#13;&#10;  &quot;Inflexible&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='EV Adoption Level' datatype='string' name='[Calculation_1086493432800079874]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-low-&quot;) THEN&#13;&#10;  &quot;Low&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-med-&quot;) THEN&#13;&#10;  &quot;Med&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-high-&quot;) THEN&#13;&#10;  &quot;High&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='Generation for Load [MW]' datatype='real' name='[Calculation_884112924427558912]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_generator_power_combined.csv&quot; THEN&#13;&#10;  IF [Resource]==&quot;Curtailment&quot; THEN&#13;&#10;    -1*Value&#13;&#10;  ELSE&#13;&#10;    [Value]&#13;&#10;  END&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; THEN&#13;&#10;  [Value]&#13;&#10;END' />
            </column>
            <column caption='Generation Labels' datatype='string' name='[Calculation_884112924428046337]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_generator_power_combined.csv&quot; THEN&#13;&#10;  [Resource]&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&gt;=0 THEN&#13;&#10;  [Resource]&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&lt;0 THEN&#13;&#10;   [Resource]+&quot; Charging&quot;&#13;&#10;END' />
            </column>
            <column caption='Weighted Generation for Load [MW]' datatype='real' name='[Calculation_884112924430045186]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_931963670410043401]*[Calculation_884112924427558912]' />
            </column>
            <column caption='Fuel Type' datatype='string' name='[Calculation_890868329750093824]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Calculation_884112924428046337]&#13;&#10;  WHEN &quot;Backup&quot; THEN &quot;diesel&quot;&#13;&#10;  WHEN &quot;Batteries&quot; THEN &quot;none&quot;&#13;&#10;  WHEN &quot;Batteries Charging&quot; THEN &quot;none&quot;&#13;&#10;  WHEN &quot;Biomass&quot; THEN &quot;biomass&quot;&#13;&#10;  WHEN &quot;CCGT New&quot; THEN &quot;natural_gas&quot;&#13;&#10;  WHEN &quot;CCGT Old&quot; THEN &quot;natural_gas&quot;&#13;&#10;  WHEN &quot;Coal new&quot; THEN &quot;coal&quot;&#13;&#10;  WHEN &quot;Coal Old&quot; THEN &quot;coal&quot;&#13;&#10;  WHEN &quot;Curtailment&quot; THEN &quot;none&quot;&#13;&#10;  WHEN &quot;Hydro Reservoir&quot; THEN &quot;none&quot;&#13;&#10;  WHEN &quot;Hydro Reservoir Charging&quot; THEN &quot;none&quot;&#13;&#10;  WHEN &quot;Hydro Run of River&quot; THEN &quot;none&quot;&#13;&#10;  WHEN &quot;Nuclear New&quot; THEN &quot;uranium&quot;&#13;&#10;  WHEN &quot;Nuclear Old&quot; THEN &quot;uranium&quot;&#13;&#10;  WHEN &quot;Pumped Hydro Storage&quot; THEN &quot;none&quot;&#13;&#10;  WHEN &quot;Pumped Hydro Storage Charging&quot; THEN &quot;none&quot;&#13;&#10;  WHEN &quot;Solar&quot; THEN &quot;none&quot;&#13;&#10;  WHEN &quot;Unmet Demand&quot; THEN &quot;none&quot;&#13;&#10;  WHEN &quot;Wind&quot; THEN &quot;none&quot;&#13;&#10;  ELSE &quot;Unknown Generation Label&quot;&#13;&#10;END' />
            </column>
            <column caption='Heat Rate [MMBtu/MWh]' datatype='real' name='[Calculation_890868329752530945]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_890868329750093824]=&quot;biomass&quot; THEN&#13;&#10;  16.655814&#13;&#10;ELSEIF [Calculation_890868329750093824]=&quot;diesel&quot; THEN&#13;&#10;  27.77777778&#13;&#10;ELSEIF [Calculation_890868329750093824]=&quot;natural_gas&quot; THEN&#13;&#10;  IF [Zone]=1 THEN&#13;&#10;    IF [Calculation_884112924428046337]=&quot;CCGT Old&quot; THEN 7.763841639&#13;&#10;    ELSE 6.635897436&#13;&#10;    END&#13;&#10;  ELSEIF [Zone]=2 THEN&#13;&#10;    IF [Calculation_884112924428046337]=&quot;CCGT Old&quot; THEN 6.969187521&#13;&#10;    ELSE 6.635897436&#13;&#10;    END&#13;&#10;  ELSEIF [Zone]=3 THEN&#13;&#10;    IF [Calculation_884112924428046337]=&quot;CCGT Old&quot; THEN 6.151066015&#13;&#10;    ELSE 6.635897436&#13;&#10;    END&#13;&#10;  ELSEIF [Zone]=4 THEN 6.635897436&#13;&#10;  ELSEIF [Zone]=5 THEN 7.70319442&#13;&#10;  END&#13;&#10;ELSEIF [Calculation_890868329750093824]=&quot;coal&quot; THEN&#13;&#10;  IF [Zone]=1 THEN&#13;&#10;    IF [Calculation_884112924428046337]=&quot;Coal Old&quot; THEN 10.04809714&#13;&#10;    ELSE 9.466312997&#13;&#10;    END&#13;&#10;  ELSEIF [Zone]=2 THEN&#13;&#10;    IF [Calculation_884112924428046337]=&quot;Coal Old&quot; THEN 9.120735453&#13;&#10;    ELSE 9.466312997&#13;&#10;    END&#13;&#10;  ELSEIF [Zone]=3 THEN&#13;&#10;    IF [Calculation_884112924428046337]=&quot;Coal Old&quot; THEN 10.50801205&#13;&#10;    ELSE 9.466312997&#13;&#10;    END&#13;&#10;  ELSEIF [Zone]=4 THEN&#13;&#10;    IF [Calculation_884112924428046337]=&quot;Coal Old&quot; THEN 10.56742598&#13;&#10;    ELSE 9.466312997&#13;&#10;    END&#13;&#10;  ELSEIF [Zone]=5 THEN 9.842354016&#13;&#10;  END&#13;&#10;ELSEIF [Calculation_890868329750093824]=&quot;uranium&quot; THEN&#13;&#10;  IF [Calculation_884112924428046337]=&quot;Nuclear Old&quot; AND Zone=2 THEN 10.15243027&#13;&#10;  ELSEIF [Calculation_884112924428046337]=&quot;Nuclear Old&quot; AND Zone=3 THEN 9.969247&#13;&#10;  ELSE 10.10431792&#13;&#10;  END&#13;&#10;ELSE&#13;&#10;  0.0&#13;&#10;END' />
            </column>
            <column caption='CO2 emissions [tons/MMBtu]' datatype='real' name='[Calculation_890868329759539202]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_890868329750093824]=&quot;coal&quot; THEN 0.095661822&#13;&#10;ELSEIF [Calculation_890868329750093824]=&quot;natural_gas&quot; THEN 0.052159978&#13;&#10;ELSEIF [Calculation_890868329750093824]=&quot;diesel&quot; THEN 0.072960617&#13;&#10;ELSE 0&#13;&#10;END' />
            </column>
            <column caption='CO2 emissions [Mt]' datatype='real' name='[Calculation_890868329773191171]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_890868329759539202]*[Calculation_890868329752530945]*[Calculation_884112924430045186]/1e6' />
            </column>
            <column caption='CO2 intensity [Mt/MWh]' datatype='real' name='[Calculation_890868329776488453]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM(1e6*[Calculation_890868329773191171])/SUM([Calculation_884112924430045186])' />
            </column>
            <column caption='Capacity Expansion' datatype='string' name='[Calculation_890868329821888518]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-solar-added-&quot;) THEN&#13;&#10;  &quot;New Solar&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-wind-added-&quot;) THEN&#13;&#10;  &quot;New Wind&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='Weights' datatype='real' name='[Calculation_931963670410043401]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Timeblock]&#13;&#10;  WHEN &quot;t1&quot; THEN 36 &#13;&#10;  WHEN &quot;t2&quot; THEN 14&#13;&#10;  WHEN &quot;t3&quot; THEN 9.18368717&#13;&#10;  WHEN &quot;t4&quot; THEN 13&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Resource]' role='dimension' type='nominal' />
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Timeblock]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column aggregation='Sum' datatype='integer' name='[Zone]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_1086493432799272960]' derivation='None' name='[none:Calculation_1086493432799272960:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1086493432799367169]' derivation='None' name='[none:Calculation_1086493432799367169:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1086493432800079874]' derivation='None' name='[none:Calculation_1086493432800079874:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_890868329821888518]' derivation='None' name='[none:Calculation_890868329821888518:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_890868329776488453]' derivation='User' name='[usr:Calculation_890868329776488453:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_1086493432799272960:nk]' member='&quot;12-3 PM&quot;' />
              <groupfilter function='member' level='[none:Calculation_1086493432799272960:nk]' member='&quot;None&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;12-3 AM&quot;</bucket>
              <bucket>&quot;12-3 PM&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Inflexible&quot;</bucket>
              <bucket>&quot;Flexible&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;None&quot;</bucket>
              <bucket>&quot;Low&quot;</bucket>
              <bucket>&quot;Med&quot;</bucket>
              <bucket>&quot;High&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_890868329821888518:nk]'>
            <groupfilter function='member' level='[none:Calculation_890868329821888518:nk]' member='&quot;None&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_890868329821888518:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;None&quot;</bucket>
              <bucket>&quot;New Solar&quot;</bucket>
              <bucket>&quot;New Wind&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_890868329821888518:nk]</column>
            <column>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0m2ojda1ih48r312ma38r1hlijh9].[usr:Calculation_890868329776488453:qk]' scope='rows' value='CO2 intensity [tons/MWh]' />
          </style-rule>
        </style>
        <panes>
          <pane id='12' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <text column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[usr:Calculation_890868329776488453:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>&lt;</run>
                <run>[federated.0m2ojda1ih48r312ma38r1hlijh9].[usr:Calculation_890868329776488453:qk]</run>
                <run>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-orientation' value='-90' />
                <format attr='vertical-align' value='center' />
                <format attr='text-align' value='auto' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0m2ojda1ih48r312ma38r1hlijh9].[usr:Calculation_890868329776488453:qk]</rows>
        <cols>([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_890868329821888518:nk] / [federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk])))</cols>
      </table>
      <simple-id uuid='{5A353D30-0AC3-4636-B564-12D57FB5D1BC}' />
    </worksheet>
    <worksheet name='Generation (Absolute) by Type'>
      <table>
        <view>
          <datasources>
            <datasource caption='tab_dam_generator_power_combined' name='federated.0m2ojda1ih48r312ma38r1hlijh9' />
          </datasources>
          <datasource-dependencies datasource='federated.0m2ojda1ih48r312ma38r1hlijh9'>
            <column caption='Charging Time' datatype='string' name='[Calculation_1086493432799272960]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-morning-&quot;) THEN&#13;&#10;  &quot;12-3 AM&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-evening-&quot;) THEN&#13;&#10;  &quot;12-3 PM&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='Charging Type' datatype='string' name='[Calculation_1086493432799367169]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-flexible&quot;) THEN&#13;&#10;  &quot;Flexible&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-inflexible&quot;) THEN&#13;&#10;  &quot;Inflexible&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='EV Adoption Level' datatype='string' name='[Calculation_1086493432800079874]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-low-&quot;) THEN&#13;&#10;  &quot;Low&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-med-&quot;) THEN&#13;&#10;  &quot;Med&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-high-&quot;) THEN&#13;&#10;  &quot;High&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='Generation for Load [MW]' datatype='real' name='[Calculation_884112924427558912]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_generator_power_combined.csv&quot; THEN&#13;&#10;  IF [Resource]==&quot;Curtailment&quot; THEN&#13;&#10;    -1*Value&#13;&#10;  ELSE&#13;&#10;    [Value]&#13;&#10;  END&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; THEN&#13;&#10;  [Value]&#13;&#10;END' />
            </column>
            <column caption='Generation Labels' datatype='string' name='[Calculation_884112924428046337]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_generator_power_combined.csv&quot; THEN&#13;&#10;  [Resource]&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&gt;=0 THEN&#13;&#10;  [Resource]&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&lt;0 THEN&#13;&#10;   [Resource]+&quot; Charging&quot;&#13;&#10;END' />
            </column>
            <column caption='Weighted Generation for Load [MW]' datatype='real' name='[Calculation_884112924430045186]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_931963670410043401]*[Calculation_884112924427558912]' />
            </column>
            <column caption='Capacity Expansion' datatype='string' name='[Calculation_890868329821888518]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-solar-added-&quot;) THEN&#13;&#10;  &quot;New Solar&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-wind-added-&quot;) THEN&#13;&#10;  &quot;New Wind&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='Weights' datatype='real' name='[Calculation_931963670410043401]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Timeblock]&#13;&#10;  WHEN &quot;t1&quot; THEN 36 &#13;&#10;  WHEN &quot;t2&quot; THEN 14&#13;&#10;  WHEN &quot;t3&quot; THEN 9.18368717&#13;&#10;  WHEN &quot;t4&quot; THEN 13&#13;&#10;END' />
            </column>
            <column caption='Generation Labels (group)' datatype='string' name='[Generation Labels (group) (copy)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Calculation_884112924428046337]' new-bin='true'>
                <bin default-name='false' value='&quot;Batteries&quot;'>
                  <value>&quot;Batteries&quot;</value>
                  <value>&quot;Batteries Charging&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;CCGT&quot;'>
                  <value>&quot;CCGT New&quot;</value>
                  <value>&quot;CCGT Old&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Coal&quot;'>
                  <value>&quot;Coal new&quot;</value>
                  <value>&quot;Coal Old&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Diesel&quot;'>
                  <value>&quot;Backup&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Hydro&quot;'>
                  <value>&quot;Hydro Reservoir&quot;</value>
                  <value>&quot;Hydro Reservoir Charging&quot;</value>
                  <value>&quot;Hydro Run of River&quot;</value>
                  <value>&quot;Pumped Hydro Storage&quot;</value>
                  <value>&quot;Pumped Hydro Storage Charging&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Nuclear&quot;'>
                  <value>&quot;Nuclear New&quot;</value>
                  <value>&quot;Nuclear Old&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Other &quot;'>
                  <value>&quot;Biomass&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Solar&quot;'>
                  <value>&quot;Curtailment&quot;</value>
                  <value>&quot;Solar&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='5-day time period' datatype='string' name='[Representative Days (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Timeblock]==&quot;t1&quot; THEN &quot;April 21-25&quot;&#13;&#10;ELSEIF [Timeblock]==&quot;t2&quot; THEN &quot;June 15-19&quot;&#13;&#10;ELSEIF [Timeblock]==&quot;t3&quot; THEN &quot;October 13-17&quot;&#13;&#10;ELSEIF [Timeblock]==&quot;t4&quot; THEN &quot;December 12-16&quot;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Resource]' role='dimension' type='nominal' />
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Timeblock]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1086493432799272960]' derivation='None' name='[none:Calculation_1086493432799272960:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1086493432799367169]' derivation='None' name='[none:Calculation_1086493432799367169:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1086493432800079874]' derivation='None' name='[none:Calculation_1086493432800079874:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_890868329821888518]' derivation='None' name='[none:Calculation_890868329821888518:nk]' pivot='key' type='nominal' />
            <column-instance column='[Representative Days (copy)]' derivation='None' name='[none:Representative Days (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_884112924430045186]' derivation='Sum' name='[pcto:sum:Calculation_884112924430045186:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_884112924427558912]' derivation='Sum' name='[sum:Calculation_884112924427558912:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group) (copy)]' direction='ASC'>
            <dictionary>
              <bucket>%null%</bucket>
              <bucket>&quot;Unmet Demand&quot;</bucket>
              <bucket>&quot;Curtailment&quot;</bucket>
              <bucket>&quot;Solar&quot;</bucket>
              <bucket>&quot;Wind&quot;</bucket>
              <bucket>&quot;Batteries&quot;</bucket>
              <bucket>&quot;Diesel&quot;</bucket>
              <bucket>&quot;Other &quot;</bucket>
              <bucket>&quot;CCGT&quot;</bucket>
              <bucket>&quot;Hydro&quot;</bucket>
              <bucket>&quot;Coal&quot;</bucket>
              <bucket>&quot;Nuclear&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Inflexible&quot;</bucket>
              <bucket>&quot;Flexible&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;None&quot;</bucket>
              <bucket>&quot;Low&quot;</bucket>
              <bucket>&quot;Med&quot;</bucket>
              <bucket>&quot;High&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_890868329821888518:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;None&quot;</bucket>
              <bucket>&quot;New Solar&quot;</bucket>
              <bucket>&quot;New Wind&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Representative Days (copy):nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;April 21-25&quot;</bucket>
              <bucket>&quot;June 15-19&quot;</bucket>
              <bucket>&quot;October 13-17&quot;</bucket>
              <bucket>&quot;December 12-16&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0m2ojda1ih48r312ma38r1hlijh9].[pcto:sum:Calculation_884112924430045186:qk:2]' value='p0%' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group) (copy)]' />
              <text column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[pcto:sum:Calculation_884112924430045186:qk:2]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_884112924427558912:qk]</rows>
        <cols>([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_890868329821888518:nk] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk] / [federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Representative Days (copy):nk]))))</cols>
      </table>
      <simple-id uuid='{FDD355AE-FE5F-4644-903C-47BDD4E2B380}' />
    </worksheet>
    <worksheet name='Generation (Percentage) by Type'>
      <table>
        <view>
          <datasources>
            <datasource caption='tab_dam_generator_power_combined' name='federated.0m2ojda1ih48r312ma38r1hlijh9' />
          </datasources>
          <datasource-dependencies datasource='federated.0m2ojda1ih48r312ma38r1hlijh9'>
            <column datatype='string' name='[Attribute]' role='dimension' type='nominal' />
            <column caption='Charging Time' datatype='string' name='[Calculation_1086493432799272960]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-morning-&quot;) THEN&#13;&#10;  &quot;12-3 AM&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-evening-&quot;) THEN&#13;&#10;  &quot;12-3 PM&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='Charging Type' datatype='string' name='[Calculation_1086493432799367169]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-flexible&quot;) THEN&#13;&#10;  &quot;Flexible&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-inflexible&quot;) THEN&#13;&#10;  &quot;Inflexible&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='EV Adoption Level' datatype='string' name='[Calculation_1086493432800079874]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-low-&quot;) THEN&#13;&#10;  &quot;Low&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-med-&quot;) THEN&#13;&#10;  &quot;Med&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-high-&quot;) THEN&#13;&#10;  &quot;High&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='Representative Days' datatype='datetime' name='[Calculation_1086493432800321539]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF [Timeblock]==&quot;t1&quot; THEN DATEPARSE(&quot;dd.MMMM.yyyy&quot;,&quot;21.April.2037&quot;)&#13;&#10;ELSEIF [Timeblock]==&quot;t2&quot; THEN DATEPARSE(&quot;dd.MMMM.yyyy&quot;,&quot;15.June.2037&quot;)&#13;&#10;ELSEIF [Timeblock]==&quot;t3&quot; THEN DATEPARSE(&quot;dd.MMMM.yyyy&quot;,&quot;13.October.2037&quot;)&#13;&#10;ELSEIF [Timeblock]==&quot;t4&quot; THEN DATEPARSE(&quot;dd.MMMM.yyyy&quot;,&quot;12.December.2037&quot;)&#13;&#10;END' />
            </column>
            <column caption='Time Interval' datatype='string' name='[Calculation_1086493432800645124]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Timeblock]==&quot;t1&quot; THEN&#13;&#10;  [Attribute]&#13;&#10;ELSEIF [Timeblock]==&quot;t2&quot; THEN&#13;&#10;  &quot;t&quot;+STR(120+INT(RIGHT([Attribute],LEN([Attribute])-1)))&#13;&#10;ELSEIF [Timeblock]==&quot;t3&quot; THEN&#13;&#10;  &quot;t&quot;+STR(240+INT(RIGHT([Attribute],LEN([Attribute])-1)))&#13;&#10;ELSE&#13;&#10;  &quot;t&quot;+STR(360+INT(RIGHT([Attribute],LEN([Attribute])-1)))&#13;&#10;END' />
            </column>
            <column caption='Generation for Load [MW]' datatype='real' name='[Calculation_884112924427558912]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_generator_power_combined.csv&quot; THEN&#13;&#10;  IF [Resource]==&quot;Curtailment&quot; THEN&#13;&#10;    -1*Value&#13;&#10;  ELSE&#13;&#10;    [Value]&#13;&#10;  END&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; THEN&#13;&#10;  [Value]&#13;&#10;END' />
            </column>
            <column caption='Generation Labels' datatype='string' name='[Calculation_884112924428046337]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_generator_power_combined.csv&quot; THEN&#13;&#10;  [Resource]&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&gt;=0 THEN&#13;&#10;  [Resource]&#13;&#10;ELSEIF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&lt;0 THEN&#13;&#10;   [Resource]+&quot; Charging&quot;&#13;&#10;END' />
            </column>
            <column caption='Weighted Generation for Load [MW]' datatype='real' name='[Calculation_884112924430045186]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_931963670410043401]*[Calculation_884112924427558912]' />
            </column>
            <column caption='Date Time' datatype='datetime' name='[Calculation_889179474267987968]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATEADD(&apos;hour&apos;,INT(RIGHT([Calculation_1086493432800645124],LEN([Calculation_1086493432800645124])-1))-1,[Calculation_1086493432800321539])' />
            </column>
            <column caption='Capacity Expansion' datatype='string' name='[Calculation_890868329821888518]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-solar-added-&quot;) THEN&#13;&#10;  &quot;New Solar&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-wind-added-&quot;) THEN&#13;&#10;  &quot;New Wind&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='Weights' datatype='real' name='[Calculation_931963670410043401]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Timeblock]&#13;&#10;  WHEN &quot;t1&quot; THEN 36 &#13;&#10;  WHEN &quot;t2&quot; THEN 14&#13;&#10;  WHEN &quot;t3&quot; THEN 9.18368717&#13;&#10;  WHEN &quot;t4&quot; THEN 13&#13;&#10;END' />
            </column>
            <column caption='Generation Labels (group)' datatype='string' name='[Generation Labels (group) (copy)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Calculation_884112924428046337]' new-bin='true'>
                <bin default-name='false' value='&quot;Batteries&quot;'>
                  <value>&quot;Batteries&quot;</value>
                  <value>&quot;Batteries Charging&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;CCGT&quot;'>
                  <value>&quot;CCGT New&quot;</value>
                  <value>&quot;CCGT Old&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Coal&quot;'>
                  <value>&quot;Coal new&quot;</value>
                  <value>&quot;Coal Old&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Diesel&quot;'>
                  <value>&quot;Backup&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Hydro&quot;'>
                  <value>&quot;Hydro Reservoir&quot;</value>
                  <value>&quot;Hydro Reservoir Charging&quot;</value>
                  <value>&quot;Hydro Run of River&quot;</value>
                  <value>&quot;Pumped Hydro Storage&quot;</value>
                  <value>&quot;Pumped Hydro Storage Charging&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Nuclear&quot;'>
                  <value>&quot;Nuclear New&quot;</value>
                  <value>&quot;Nuclear Old&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Other &quot;'>
                  <value>&quot;Biomass&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Solar&quot;'>
                  <value>&quot;Curtailment&quot;</value>
                  <value>&quot;Solar&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Resource]' role='dimension' type='nominal' />
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Timeblock]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_889179474267987968]' derivation='Day' name='[dy:Calculation_889179474267987968:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_889179474267987968]' derivation='Month' name='[mn:Calculation_889179474267987968:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1086493432799272960]' derivation='None' name='[none:Calculation_1086493432799272960:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1086493432799367169]' derivation='None' name='[none:Calculation_1086493432799367169:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1086493432800079874]' derivation='None' name='[none:Calculation_1086493432800079874:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_889179474267987968]' derivation='None' name='[none:Calculation_889179474267987968:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_890868329821888518]' derivation='None' name='[none:Calculation_890868329821888518:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_884112924430045186]' derivation='Sum' name='[pcto:sum:Calculation_884112924430045186:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_889179474267987968]' derivation='Year' name='[yr:Calculation_889179474267987968:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group) (copy)]' direction='ASC'>
            <dictionary>
              <bucket>%null%</bucket>
              <bucket>&quot;Unmet Demand&quot;</bucket>
              <bucket>&quot;Curtailment&quot;</bucket>
              <bucket>&quot;Solar&quot;</bucket>
              <bucket>&quot;Wind&quot;</bucket>
              <bucket>&quot;Batteries&quot;</bucket>
              <bucket>&quot;Diesel&quot;</bucket>
              <bucket>&quot;Other &quot;</bucket>
              <bucket>&quot;CCGT&quot;</bucket>
              <bucket>&quot;Hydro&quot;</bucket>
              <bucket>&quot;Coal&quot;</bucket>
              <bucket>&quot;Nuclear&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Inflexible&quot;</bucket>
              <bucket>&quot;Flexible&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;None&quot;</bucket>
              <bucket>&quot;Low&quot;</bucket>
              <bucket>&quot;Med&quot;</bucket>
              <bucket>&quot;High&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_889179474267987968:qk]' included-values='in-range'>
            <min>#2037-04-21 00:00:00#</min>
            <max>#2037-04-21 23:00:00#</max>
          </filter>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_890868329821888518:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;None&quot;</bucket>
              <bucket>&quot;New Solar&quot;</bucket>
              <bucket>&quot;New Wind&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_889179474267987968:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0m2ojda1ih48r312ma38r1hlijh9].[pcto:sum:Calculation_884112924430045186:qk:2]' value='p0%' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group) (copy)]' />
              <text column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[pcto:sum:Calculation_884112924430045186:qk:2]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0m2ojda1ih48r312ma38r1hlijh9].[pcto:sum:Calculation_884112924430045186:qk:2]</rows>
        <cols>([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_890868329821888518:nk] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[yr:Calculation_889179474267987968:ok] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[mn:Calculation_889179474267987968:ok] / [federated.0m2ojda1ih48r312ma38r1hlijh9].[dy:Calculation_889179474267987968:ok]))))))</cols>
      </table>
      <simple-id uuid='{0463C996-8920-41DA-85B1-5FF5256A4708}' />
    </worksheet>
    <worksheet name='Load'>
      <table>
        <view>
          <datasources>
            <datasource caption='tab_dam_generator_power_combined' name='federated.0m2ojda1ih48r312ma38r1hlijh9' />
          </datasources>
          <datasource-dependencies datasource='federated.0m2ojda1ih48r312ma38r1hlijh9'>
            <column caption='Charging Time' datatype='string' name='[Calculation_1086493432799272960]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-morning-&quot;) THEN&#13;&#10;  &quot;12-3 AM&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-evening-&quot;) THEN&#13;&#10;  &quot;12-3 PM&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='Charging Type' datatype='string' name='[Calculation_1086493432799367169]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-flexible&quot;) THEN&#13;&#10;  &quot;Flexible&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-inflexible&quot;) THEN&#13;&#10;  &quot;Inflexible&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='EV Adoption Level' datatype='string' name='[Calculation_1086493432800079874]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-low-&quot;) THEN&#13;&#10;  &quot;Low&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-med-&quot;) THEN&#13;&#10;  &quot;Med&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-high-&quot;) THEN&#13;&#10;  &quot;High&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='Charging Grid Batteries / PHS [MW]' datatype='real' name='[Calculation_884112924457828355]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&lt;0 AND [Resource]!=&quot;Hydro Reservoir&quot; THEN&#13;&#10;  [Value]&#13;&#10;ELSE&#13;&#10;  0&#13;&#10;END' />
            </column>
            <column caption='Capacity Expansion' datatype='string' name='[Calculation_890868329821888518]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-solar-added-&quot;) THEN&#13;&#10;  &quot;New Solar&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-wind-added-&quot;) THEN&#13;&#10;  &quot;New Wind&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='Charging EVs [MW]' datatype='real' name='[Calculation_913104849175195648]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_931963670409289734]+[Calculation_931963670409551879]' />
            </column>
            <column caption='Inflexible Load [MW]' datatype='real' name='[Calculation_931963670409289734]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_loads_combined.csv&quot; THEN&#13;&#10;  [Value]&#13;&#10;ELSE&#13;&#10;  0&#13;&#10;END' />
            </column>
            <column caption='Flexible Load [MW]' datatype='real' name='[Calculation_931963670409551879]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_demand_response_load_combined.csv&quot; THEN&#13;&#10;  [Value]&#13;&#10;ELSE&#13;&#10;  0&#13;&#10;END' />
            </column>
            <column caption='Load Labels' datatype='string' name='[Calculation_931963670409670664]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_loads_combined.csv&quot; THEN&#13;&#10;  &quot;Inflexible&quot;&#13;&#10;ELSEIF [Table Name]==&quot;tab_dam_demand_response_load_combined.csv&quot; THEN&#13;&#10;  &quot;Charging EVs&quot;&#13;&#10;ELSEIF [Table Name]==&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&lt;0 AND [Resource]!=&quot;Hydro Reservoir&quot; THEN&#13;&#10;  &quot;Charging Grid Batteries/PHS&quot;&#13;&#10;END' />
            </column>
            <column caption='Total Load [MW]' datatype='real' name='[Calculation_931963670410522634]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_913104849175195648]-[Calculation_884112924457828355]' />
            </column>
            <column datatype='string' name='[Resource]' role='dimension' type='nominal' />
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1086493432799272960]' derivation='None' name='[none:Calculation_1086493432799272960:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1086493432799367169]' derivation='None' name='[none:Calculation_1086493432799367169:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1086493432800079874]' derivation='None' name='[none:Calculation_1086493432800079874:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_890868329821888518]' derivation='None' name='[none:Calculation_890868329821888518:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_931963670409670664]' derivation='None' name='[none:Calculation_931963670409670664:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_931963670410522634]' derivation='Sum' name='[sum:Calculation_931963670410522634:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Inflexible&quot;</bucket>
              <bucket>&quot;Flexible&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;None&quot;</bucket>
              <bucket>&quot;Low&quot;</bucket>
              <bucket>&quot;Med&quot;</bucket>
              <bucket>&quot;High&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_890868329821888518:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;None&quot;</bucket>
              <bucket>&quot;New Solar&quot;</bucket>
              <bucket>&quot;New Wind&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_931963670409670664:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_931963670409670664:nk]' />
              <groupfilter function='member' level='[none:Calculation_931963670409670664:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_931963670409670664:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Charging Grid Batteries/PHS&quot;</bucket>
              <bucket>&quot;Charging EVs&quot;</bucket>
              <bucket>&quot;Inflexible&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_931963670409670664:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_931963670409670664:nk]' />
              <text column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_931963670410522634:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_931963670410522634:qk]</rows>
        <cols>([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_890868329821888518:nk] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk] / [federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk])))</cols>
      </table>
      <simple-id uuid='{8B667242-18EF-4CB3-BAE8-514687B68D23}' />
    </worksheet>
    <worksheet name='Price'>
      <table>
        <view>
          <datasources>
            <datasource caption='tab_dam_generator_power_combined' name='federated.0m2ojda1ih48r312ma38r1hlijh9' />
          </datasources>
          <datasource-dependencies datasource='federated.0m2ojda1ih48r312ma38r1hlijh9'>
            <column datatype='string' name='[Attribute]' role='dimension' type='nominal' />
            <column caption='Representative Days' datatype='datetime' name='[Calculation_1086493432800321539]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF [Timeblock]==&quot;t1&quot; THEN DATEPARSE(&quot;dd.MMMM.yyyy&quot;,&quot;21.April.2037&quot;)&#13;&#10;ELSEIF [Timeblock]==&quot;t2&quot; THEN DATEPARSE(&quot;dd.MMMM.yyyy&quot;,&quot;15.June.2037&quot;)&#13;&#10;ELSEIF [Timeblock]==&quot;t3&quot; THEN DATEPARSE(&quot;dd.MMMM.yyyy&quot;,&quot;13.October.2037&quot;)&#13;&#10;ELSEIF [Timeblock]==&quot;t4&quot; THEN DATEPARSE(&quot;dd.MMMM.yyyy&quot;,&quot;12.December.2037&quot;)&#13;&#10;END' />
            </column>
            <column caption='Time Interval' datatype='string' name='[Calculation_1086493432800645124]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Timeblock]==&quot;t1&quot; THEN&#13;&#10;  [Attribute]&#13;&#10;ELSEIF [Timeblock]==&quot;t2&quot; THEN&#13;&#10;  &quot;t&quot;+STR(120+INT(RIGHT([Attribute],LEN([Attribute])-1)))&#13;&#10;ELSEIF [Timeblock]==&quot;t3&quot; THEN&#13;&#10;  &quot;t&quot;+STR(240+INT(RIGHT([Attribute],LEN([Attribute])-1)))&#13;&#10;ELSE&#13;&#10;  &quot;t&quot;+STR(360+INT(RIGHT([Attribute],LEN([Attribute])-1)))&#13;&#10;END' />
            </column>
            <column caption='Date Time' datatype='datetime' name='[Calculation_889179474267987968]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATEADD(&apos;hour&apos;,INT(RIGHT([Calculation_1086493432800645124],LEN([Calculation_1086493432800645124])-1))-1,[Calculation_1086493432800321539])' />
            </column>
            <column caption='Price [$/MWh]' datatype='real' name='[Calculation_889179474271539201]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_prices_combined.csv&quot; THEN&#13;&#10;  [Value]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Timeblock]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_889179474267987968]' derivation='Day' name='[dy:Calculation_889179474267987968:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_889179474267987968]' derivation='Hour' name='[hr:Calculation_889179474267987968:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_889179474271539201]' derivation='Max' name='[max:Calculation_889179474271539201:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_889179474267987968]' derivation='Month' name='[mn:Calculation_889179474267987968:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_889179474267987968]' derivation='Year' name='[yr:Calculation_889179474267987968:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]'>
            <groupfilter function='level-members' level='[none:Scenario:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0m2ojda1ih48r312ma38r1hlijh9].[max:Calculation_889179474271539201:qk]' field-type='quantitative' scale='log' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0m2ojda1ih48r312ma38r1hlijh9].[max:Calculation_889179474271539201:qk]</rows>
        <cols>([federated.0m2ojda1ih48r312ma38r1hlijh9].[yr:Calculation_889179474267987968:ok] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[mn:Calculation_889179474267987968:ok] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[dy:Calculation_889179474267987968:ok] / [federated.0m2ojda1ih48r312ma38r1hlijh9].[hr:Calculation_889179474267987968:ok])))</cols>
      </table>
      <simple-id uuid='{21C34E38-9C25-4026-B1E3-E07D41E79DF1}' />
    </worksheet>
    <worksheet name='Price (table)'>
      <table>
        <view>
          <datasources>
            <datasource caption='tab_dam_generator_power_combined' name='federated.0m2ojda1ih48r312ma38r1hlijh9' />
          </datasources>
          <datasource-dependencies datasource='federated.0m2ojda1ih48r312ma38r1hlijh9'>
            <column datatype='string' name='[Attribute]' role='dimension' type='nominal' />
            <column caption='Charging Time' datatype='string' name='[Calculation_1086493432799272960]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-morning-&quot;) THEN&#13;&#10;  &quot;12-3 AM&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-evening-&quot;) THEN&#13;&#10;  &quot;12-3 PM&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='Charging Type' datatype='string' name='[Calculation_1086493432799367169]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-flexible&quot;) THEN&#13;&#10;  &quot;Flexible&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-inflexible&quot;) THEN&#13;&#10;  &quot;Inflexible&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='EV Adoption Level' datatype='string' name='[Calculation_1086493432800079874]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-low-&quot;) THEN&#13;&#10;  &quot;Low&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-med-&quot;) THEN&#13;&#10;  &quot;Med&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-high-&quot;) THEN&#13;&#10;  &quot;High&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='Representative Days' datatype='datetime' name='[Calculation_1086493432800321539]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF [Timeblock]==&quot;t1&quot; THEN DATEPARSE(&quot;dd.MMMM.yyyy&quot;,&quot;21.April.2037&quot;)&#13;&#10;ELSEIF [Timeblock]==&quot;t2&quot; THEN DATEPARSE(&quot;dd.MMMM.yyyy&quot;,&quot;15.June.2037&quot;)&#13;&#10;ELSEIF [Timeblock]==&quot;t3&quot; THEN DATEPARSE(&quot;dd.MMMM.yyyy&quot;,&quot;13.October.2037&quot;)&#13;&#10;ELSEIF [Timeblock]==&quot;t4&quot; THEN DATEPARSE(&quot;dd.MMMM.yyyy&quot;,&quot;12.December.2037&quot;)&#13;&#10;END' />
            </column>
            <column caption='Time Interval' datatype='string' name='[Calculation_1086493432800645124]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Timeblock]==&quot;t1&quot; THEN&#13;&#10;  [Attribute]&#13;&#10;ELSEIF [Timeblock]==&quot;t2&quot; THEN&#13;&#10;  &quot;t&quot;+STR(120+INT(RIGHT([Attribute],LEN([Attribute])-1)))&#13;&#10;ELSEIF [Timeblock]==&quot;t3&quot; THEN&#13;&#10;  &quot;t&quot;+STR(240+INT(RIGHT([Attribute],LEN([Attribute])-1)))&#13;&#10;ELSE&#13;&#10;  &quot;t&quot;+STR(360+INT(RIGHT([Attribute],LEN([Attribute])-1)))&#13;&#10;END' />
            </column>
            <column caption='Date Time' datatype='datetime' name='[Calculation_889179474267987968]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATEADD(&apos;hour&apos;,INT(RIGHT([Calculation_1086493432800645124],LEN([Calculation_1086493432800645124])-1))-1,[Calculation_1086493432800321539])' />
            </column>
            <column caption='Price [$/MWh]' datatype='real' name='[Calculation_889179474271539201]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_prices_combined.csv&quot; THEN&#13;&#10;  [Value]&#13;&#10;END' />
            </column>
            <column caption='Capacity Expansion' datatype='string' name='[Calculation_890868329821888518]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-solar-added-&quot;) THEN&#13;&#10;  &quot;New Solar&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-wind-added-&quot;) THEN&#13;&#10;  &quot;New Wind&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Timeblock]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column aggregation='Sum' datatype='integer' name='[Zone]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_889179474267987968]' derivation='Day' name='[dy:Calculation_889179474267987968:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_889179474267987968]' derivation='Hour' name='[hr:Calculation_889179474267987968:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_889179474271539201]' derivation='Max' name='[max:Calculation_889179474271539201:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_889179474267987968]' derivation='Month' name='[mn:Calculation_889179474267987968:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1086493432799272960]' derivation='None' name='[none:Calculation_1086493432799272960:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1086493432799367169]' derivation='None' name='[none:Calculation_1086493432799367169:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1086493432800079874]' derivation='None' name='[none:Calculation_1086493432800079874:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_890868329821888518]' derivation='None' name='[none:Calculation_890868329821888518:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[Zone]' derivation='None' name='[none:Zone:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_889179474267987968]' derivation='Year' name='[yr:Calculation_889179474267987968:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;None&quot;</bucket>
              <bucket>&quot;12-3 AM&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;None&quot;</bucket>
              <bucket>&quot;Inflexible&quot;</bucket>
              <bucket>&quot;Flexible&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;None&quot;</bucket>
              <bucket>&quot;Low&quot;</bucket>
              <bucket>&quot;Med&quot;</bucket>
              <bucket>&quot;High&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_890868329821888518:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;None&quot;</bucket>
              <bucket>&quot;New Solar&quot;</bucket>
              <bucket>&quot;New Wind&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]'>
            <groupfilter function='level-members' level='[none:Scenario:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[max:Calculation_889179474271539201:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_890868329821888518:nk] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk] / [federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Zone:ok]))))</rows>
        <cols>([federated.0m2ojda1ih48r312ma38r1hlijh9].[yr:Calculation_889179474267987968:ok] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[mn:Calculation_889179474267987968:ok] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[dy:Calculation_889179474267987968:ok] / [federated.0m2ojda1ih48r312ma38r1hlijh9].[hr:Calculation_889179474267987968:ok])))</cols>
      </table>
      <simple-id uuid='{1E85334E-5C0F-4E6E-99B0-2EFB1A1B48F7}' />
    </worksheet>
    <worksheet name='State of Charge'>
      <table>
        <view>
          <datasources>
            <datasource caption='tab_dam_generator_power_combined' name='federated.0m2ojda1ih48r312ma38r1hlijh9' />
          </datasources>
          <datasource-dependencies datasource='federated.0m2ojda1ih48r312ma38r1hlijh9'>
            <column datatype='string' name='[Attribute]' role='dimension' type='nominal' />
            <column caption='Charging Time' datatype='string' name='[Calculation_1086493432799272960]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-morning-&quot;) THEN&#13;&#10;  &quot;12-3 AM&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-evening-&quot;) THEN&#13;&#10;  &quot;12-3 PM&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='Charging Type' datatype='string' name='[Calculation_1086493432799367169]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-flexible&quot;) THEN&#13;&#10;  &quot;Flexible&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-inflexible&quot;) THEN&#13;&#10;  &quot;Inflexible&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='EV Adoption Level' datatype='string' name='[Calculation_1086493432800079874]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-low-&quot;) THEN&#13;&#10;  &quot;Low&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-med-&quot;) THEN&#13;&#10;  &quot;Med&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-high-&quot;) THEN&#13;&#10;  &quot;High&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='Representative Days' datatype='datetime' name='[Calculation_1086493432800321539]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF [Timeblock]==&quot;t1&quot; THEN DATEPARSE(&quot;dd.MMMM.yyyy&quot;,&quot;21.April.2037&quot;)&#13;&#10;ELSEIF [Timeblock]==&quot;t2&quot; THEN DATEPARSE(&quot;dd.MMMM.yyyy&quot;,&quot;15.June.2037&quot;)&#13;&#10;ELSEIF [Timeblock]==&quot;t3&quot; THEN DATEPARSE(&quot;dd.MMMM.yyyy&quot;,&quot;13.October.2037&quot;)&#13;&#10;ELSEIF [Timeblock]==&quot;t4&quot; THEN DATEPARSE(&quot;dd.MMMM.yyyy&quot;,&quot;12.December.2037&quot;)&#13;&#10;END' />
            </column>
            <column caption='Time Interval' datatype='string' name='[Calculation_1086493432800645124]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Timeblock]==&quot;t1&quot; THEN&#13;&#10;  [Attribute]&#13;&#10;ELSEIF [Timeblock]==&quot;t2&quot; THEN&#13;&#10;  &quot;t&quot;+STR(120+INT(RIGHT([Attribute],LEN([Attribute])-1)))&#13;&#10;ELSEIF [Timeblock]==&quot;t3&quot; THEN&#13;&#10;  &quot;t&quot;+STR(240+INT(RIGHT([Attribute],LEN([Attribute])-1)))&#13;&#10;ELSE&#13;&#10;  &quot;t&quot;+STR(360+INT(RIGHT([Attribute],LEN([Attribute])-1)))&#13;&#10;END' />
            </column>
            <column caption='Date Time' datatype='datetime' name='[Calculation_889179474267987968]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATEADD(&apos;hour&apos;,INT(RIGHT([Calculation_1086493432800645124],LEN([Calculation_1086493432800645124])-1))-1,[Calculation_1086493432800321539])' />
            </column>
            <column caption='Storage Level [MW]' datatype='real' name='[Calculation_889179474278793218]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_storage_unit_soc_combined.csv&quot; THEN&#13;&#10;  [Value]&#13;&#10;END' />
            </column>
            <column caption='Max Storage Level [MW]' datatype='real' name='[Calculation_889179474279444483]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_storage_unit_soc_combined.csv&quot; THEN&#13;&#10;  {FIXED [Resource],[Zone]: MAX([Value])}&#13;&#10;END' />
            </column>
            <column caption='State of Charge' datatype='real' name='[Calculation_889179474279563268]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_889179474278793218]/[Calculation_889179474279444483]' />
            </column>
            <column caption='Weighted State of Charge' datatype='real' name='[Calculation_889179474279690245]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Sum([Calculation_889179474279563268]*[Calculation_889179474279444483])/SUM([Calculation_889179474279444483])' />
            </column>
            <column caption='Storage Label' datatype='string' name='[Calculation_889179474280439814]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_storage_unit_soc_combined.csv&quot; THEN&#13;&#10;  [Resource]&#13;&#10;END' />
            </column>
            <column caption='Capacity Expansion' datatype='string' name='[Calculation_890868329821888518]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-solar-added-&quot;) THEN&#13;&#10;  &quot;New Solar&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-wind-added-&quot;) THEN&#13;&#10;  &quot;New Wind&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Resource]' role='dimension' type='nominal' />
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Timeblock]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column aggregation='Sum' datatype='integer' name='[Zone]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_889179474267987968]' derivation='Day' name='[dy:Calculation_889179474267987968:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_889179474267987968]' derivation='Hour' name='[hr:Calculation_889179474267987968:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_889179474267987968]' derivation='Month' name='[mn:Calculation_889179474267987968:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1086493432799272960]' derivation='None' name='[none:Calculation_1086493432799272960:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1086493432799367169]' derivation='None' name='[none:Calculation_1086493432799367169:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1086493432800079874]' derivation='None' name='[none:Calculation_1086493432800079874:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_889179474280439814]' derivation='None' name='[none:Calculation_889179474280439814:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_890868329821888518]' derivation='None' name='[none:Calculation_890868329821888518:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_889179474279690245]' derivation='User' name='[usr:Calculation_889179474279690245:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_889179474267987968]' derivation='Year' name='[yr:Calculation_889179474267987968:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;None&quot;</bucket>
              <bucket>&quot;Med&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;default-L-H-8-1275-flexible&quot;' />
              <groupfilter function='member' level='[none:Scenario:nk]' member='&quot;med-night-L-H-8-1275-flexible&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_889179474280439814:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>(([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_890868329821888518:nk] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk] / [federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk]))) * [federated.0m2ojda1ih48r312ma38r1hlijh9].[usr:Calculation_889179474279690245:qk])</rows>
        <cols>([federated.0m2ojda1ih48r312ma38r1hlijh9].[yr:Calculation_889179474267987968:ok] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[mn:Calculation_889179474267987968:ok] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[dy:Calculation_889179474267987968:ok] / [federated.0m2ojda1ih48r312ma38r1hlijh9].[hr:Calculation_889179474267987968:ok])))</cols>
      </table>
      <simple-id uuid='{532A57AC-E5A5-4E0B-A968-1257218AECBD}' />
    </worksheet>
    <worksheet name='Weighted Load'>
      <table>
        <view>
          <datasources>
            <datasource caption='tab_dam_generator_power_combined' name='federated.0m2ojda1ih48r312ma38r1hlijh9' />
          </datasources>
          <datasource-dependencies datasource='federated.0m2ojda1ih48r312ma38r1hlijh9'>
            <column caption='Charging Time' datatype='string' name='[Calculation_1086493432799272960]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-morning-&quot;) THEN&#13;&#10;  &quot;12-3 AM&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-evening-&quot;) THEN&#13;&#10;  &quot;12-3 PM&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='Charging Type' datatype='string' name='[Calculation_1086493432799367169]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-flexible&quot;) THEN&#13;&#10;  &quot;Flexible&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-inflexible&quot;) THEN&#13;&#10;  &quot;Inflexible&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='EV Adoption Level' datatype='string' name='[Calculation_1086493432800079874]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-low-&quot;) THEN&#13;&#10;  &quot;Low&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-med-&quot;) THEN&#13;&#10;  &quot;Med&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-high-&quot;) THEN&#13;&#10;  &quot;High&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='Charging Grid Batteries / PHS [MW]' datatype='real' name='[Calculation_884112924457828355]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]=&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&lt;0 AND [Resource]!=&quot;Hydro Reservoir&quot; THEN&#13;&#10;  [Value]&#13;&#10;ELSE&#13;&#10;  0&#13;&#10;END' />
            </column>
            <column caption='Capacity Expansion' datatype='string' name='[Calculation_890868329821888518]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Scenario],&quot;-solar-added-&quot;) THEN&#13;&#10;  &quot;New Solar&quot;&#13;&#10;ELSEIF CONTAINS([Scenario],&quot;-wind-added-&quot;) THEN&#13;&#10;  &quot;New Wind&quot;&#13;&#10;ELSE&#13;&#10;  &quot;None&quot;&#13;&#10;END' />
            </column>
            <column caption='Charging EVs [MW]' datatype='real' name='[Calculation_913104849175195648]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_931963670409289734]+[Calculation_931963670409551879]' />
            </column>
            <column caption='Inflexible Load [MW]' datatype='real' name='[Calculation_931963670409289734]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_loads_combined.csv&quot; THEN&#13;&#10;  [Value]&#13;&#10;ELSE&#13;&#10;  0&#13;&#10;END' />
            </column>
            <column caption='Flexible Load [MW]' datatype='real' name='[Calculation_931963670409551879]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_demand_response_load_combined.csv&quot; THEN&#13;&#10;  [Value]&#13;&#10;ELSE&#13;&#10;  0&#13;&#10;END' />
            </column>
            <column caption='Load Labels' datatype='string' name='[Calculation_931963670409670664]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Table Name]==&quot;tab_dam_loads_combined.csv&quot; THEN&#13;&#10;  &quot;Inflexible&quot;&#13;&#10;ELSEIF [Table Name]==&quot;tab_dam_demand_response_load_combined.csv&quot; THEN&#13;&#10;  &quot;Charging EVs&quot;&#13;&#10;ELSEIF [Table Name]==&quot;tab_dam_storage_unit_power_combined.csv&quot; AND [Value]&lt;0 AND [Resource]!=&quot;Hydro Reservoir&quot; THEN&#13;&#10;  &quot;Charging Grid Batteries/PHS&quot;&#13;&#10;END' />
            </column>
            <column caption='Weights' datatype='real' name='[Calculation_931963670410043401]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Timeblock]&#13;&#10;  WHEN &quot;t1&quot; THEN 36 &#13;&#10;  WHEN &quot;t2&quot; THEN 14&#13;&#10;  WHEN &quot;t3&quot; THEN 9.18368717&#13;&#10;  WHEN &quot;t4&quot; THEN 13&#13;&#10;END' />
            </column>
            <column caption='Total Load [MW]' datatype='real' name='[Calculation_931963670410522634]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_913104849175195648]-[Calculation_884112924457828355]' />
            </column>
            <column caption='Weighted Load [MW]' datatype='real' name='[Calculation_931963670410706955]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_931963670410043401]*[Calculation_931963670410522634]' />
            </column>
            <column datatype='string' name='[Resource]' role='dimension' type='nominal' />
            <column datatype='string' name='[Scenario]' role='dimension' type='nominal' />
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Timeblock]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1086493432799272960]' derivation='None' name='[none:Calculation_1086493432799272960:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1086493432799367169]' derivation='None' name='[none:Calculation_1086493432799367169:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1086493432800079874]' derivation='None' name='[none:Calculation_1086493432800079874:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_890868329821888518]' derivation='None' name='[none:Calculation_890868329821888518:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_931963670409670664]' derivation='None' name='[none:Calculation_931963670409670664:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_931963670410706955]' derivation='Sum' name='[sum:Calculation_931963670410706955:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Inflexible&quot;</bucket>
              <bucket>&quot;Flexible&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;None&quot;</bucket>
              <bucket>&quot;Low&quot;</bucket>
              <bucket>&quot;Med&quot;</bucket>
              <bucket>&quot;High&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_890868329821888518:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;None&quot;</bucket>
              <bucket>&quot;New Solar&quot;</bucket>
              <bucket>&quot;New Wind&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_931963670409670664:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_931963670409670664:nk]' />
              <groupfilter function='member' level='[none:Calculation_931963670409670664:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_931963670409670664:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Charging Grid Batteries/PHS&quot;</bucket>
              <bucket>&quot;Charging EVs&quot;</bucket>
              <bucket>&quot;Inflexible&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_931963670409670664:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_931963670409670664:nk]' />
              <text column='[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_931963670410706955:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0m2ojda1ih48r312ma38r1hlijh9].[sum:Calculation_931963670410706955:qk]</rows>
        <cols>([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_890868329821888518:nk] / ([federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk] / [federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk])))</cols>
      </table>
      <simple-id uuid='{9C3248B4-CA65-4AB4-8AF7-43069A9EC60A}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Load'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='196'>
            <card pane-specification-id='1' param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_931963670409670664:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Attribute:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_890868329821888518:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_931963670409670664:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Timeblock:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BAEF791B-62B9-4302-A729-F06036C42CEA}' />
    </window>
    <window class='worksheet' name='Weighted Load'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='196'>
            <card pane-specification-id='1' param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_931963670409670664:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_890868329821888518:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_931963670409670664:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6C6BBB67-6C09-4BA5-AE87-2C233DB2D5BD}' />
    </window>
    <window class='worksheet' name='Dispatch with Load (no charging)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='298'>
            <card param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_889179474267987968:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]' type='filter' />
            <card pane-specification-id='2' param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[:Measure Names]' type='color' />
            <card pane-specification-id='1' param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group) (copy)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[:Measure Names]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group) (copy)]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Attribute:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800321539:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800645124:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_889179474267987968:qk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_890868329821888518:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Timeblock:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Zone:ok]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[tyr:Calculation_889179474267987968:qk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[yr:Calculation_889179474267987968:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C081E53D-7EDE-4D07-904F-5CF28A317B08}' />
    </window>
    <window class='worksheet' name='Dispatch with Load'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='174'>
            <card param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]' type='filter' />
            <card pane-specification-id='2' param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[:Measure Names]' type='color' />
            <card pane-specification-id='1' param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group)]' type='color' />
            <card pane-specification-id='3' param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_889179474280439814:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[:Measure Names]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group)]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Attribute:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800321539:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800645124:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_889179474280439814:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_890868329821888518:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Timeblock:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[tyr:Calculation_889179474267987968:qk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[yr:Calculation_889179474267987968:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0EF62D6A-0B23-49A9-944F-94146763D7F4}' />
    </window>
    <window class='worksheet' name='Dispatch with Load (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='174'>
            <card param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]' type='filter' />
            <card pane-specification-id='2' param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[:Measure Names]' type='color' />
            <card pane-specification-id='1' param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[:Measure Names]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group)]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Attribute:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800321539:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800645124:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_889179474280439814:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_890868329821888518:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Timeblock:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[tyr:Calculation_889179474267987968:qk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[yr:Calculation_889179474267987968:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CC8FBFB4-4E52-432F-84C3-2F986CC2B3F0}' />
    </window>
    <window class='worksheet' name='State of Charge'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_889179474280439814:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group) (copy)]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_889179474280439814:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_890868329821888518:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[yr:Calculation_889179474267987968:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3EA27D34-3DC9-4246-BF47-6AF5D6A9961D}' />
    </window>
    <window class='worksheet' name='Dispatch with Price'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]' type='filter' />
            <card pane-specification-id='2' param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[:Measure Names]' type='color' />
            <card pane-specification-id='1' param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[:Measure Names]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Attribute:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800321539:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800645124:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_890868329821888518:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Timeblock:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[tyr:Calculation_889179474267987968:qk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[yr:Calculation_889179474267987968:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E69E3722-61CB-44DD-8D40-4E62D8A62266}' />
    </window>
    <window class='worksheet' name='Price'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]' type='filter' />
            <card pane-specification-id='2' param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Attribute:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800321539:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800645124:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Timeblock:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[tyr:Calculation_889179474267987968:qk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[yr:Calculation_889179474267987968:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8776E69B-AEAE-4960-88A8-2BEB283686E9}' />
    </window>
    <window class='worksheet' name='Price (table)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_890868329821888518:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0863AD72-3D79-475A-A10D-11536BCBF4F7}' />
    </window>
    <window class='worksheet' name='Emissions Intensity'>
      <cards>
        <edge name='left'>
          <strip size='244'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_890868329821888518:nk]' type='filter' />
            <card param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group) (copy)]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Attribute:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_890868329821888518:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Timeblock:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CC7FE3A8-AA92-4BE6-A6A6-EB4C63650B7B}' />
    </window>
    <window class='worksheet' name='Emissions (Absolute)'>
      <cards>
        <edge name='left'>
          <strip size='244'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]' type='filter' />
            <card param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_890868329821888518:nk]' type='filter' />
            <card param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk]' type='filter' />
            <card pane-specification-id='7' param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group) (copy)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group) (copy)]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Attribute:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_884112924428046337:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_890868329821888518:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Timeblock:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EBBF176C-F8A6-4BF9-85C5-C79AE6F173EE}' />
    </window>
    <window class='worksheet' maximized='true' name='Annual Generation (Absolute) by Type'>
      <cards>
        <edge name='left'>
          <strip size='244'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]' type='filter' />
            <card param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_890868329821888518:nk]' type='filter' />
            <card param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk]' type='filter' />
            <card pane-specification-id='2' param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group) (copy)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[:Measure Names]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group) (copy)]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Attribute:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_890868329821888518:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Timeblock:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2E078A88-7588-4937-9F81-5FA871753AA0}' />
    </window>
    <window class='worksheet' name='Annual Generation (Percentage) by Type'>
      <cards>
        <edge name='left'>
          <strip size='244'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group) (copy)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[:Measure Names]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group) (copy)]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Attribute:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_890868329821888518:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Timeblock:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{54E92261-4EF1-4742-819C-BE27C66A5A2B}' />
    </window>
    <window class='worksheet' name='Generation (Absolute) by Type'>
      <cards>
        <edge name='left'>
          <strip size='244'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group) (copy)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[:Measure Names]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group) (copy)]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Attribute:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_890868329821888518:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Representative Days (copy):nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Timeblock:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[yr:Calculation_1086493432800321539:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1174B8D6-7C9B-4F6B-B7B8-A94423935180}' />
    </window>
    <window class='worksheet' name='Generation (Percentage) by Type'>
      <cards>
        <edge name='left'>
          <strip size='244'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group) (copy)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[:Measure Names]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[Generation Labels (group) (copy)]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Attribute:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799272960:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432799367169:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_1086493432800079874:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_889179474267987968:qk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Calculation_890868329821888518:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Representative Days (copy):nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Scenario:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[none:Timeblock:nk]</field>
            <field>[federated.0m2ojda1ih48r312ma38r1hlijh9].[yr:Calculation_889179474267987968:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{832BB494-54B8-4EFB-8A7D-039A7EA68799}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Annual Generation (Absolute) by Type' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Annual Generation (Percentage) by Type' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dispatch with Load' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO2dd5AkSX3vP1mm/fT4ndlxa2/d3e3eHecd9jiBHh4kQCCQhEIS8CSeTIhn
      QvGeQiEhISEQSIgQyL0nnBDmcMIc57g7zsPd3no73rW31VWV+f7ondmZ3dndmdnp6Z6d/ERM
      bG9WdXVWd36zfvnLX/5SKKUUGs06xah3BTSaeqIFoFnXaAFo1jVaAJp1jRaAZl2jBaBZ12gB
      NBC5XK7eVVh3aAE0EHpKZvXRAtCsa7QANOsaLQDNukYLQLOu0QLQrGu0ADTrGi0AzbpGC0Cz
      rtEC0KxrrHpXQLM+yaUTFDyDiCkJx9uxzfrUQz8BNHXBsAIUcxm8UoZcpY71qN9Ha9Yzp44d
      RhoWqUSCqenputVD6EXxjUM2myUej9e7GuuK2TFALpfT0Yh1plQq1bsK645ZATQ1NdWzHpoz
      6CfA6qLHAJp1jRaAZl2jBaBZVZRSKLdY72rMoifCNDVHllL4oz/FH3wcOX0UpI+1+3XY174F
      IerbB2s3aANxpblBZWYE5+GPgvQxuq/GGrgNo2MHCIHz8F+BaRO8878hTLtuddQCaCCuJAH4
      Ey/iPPgRgi//HxiduxBCzDuupI/7sy/gDz9F6FX/BxFuqUs99RhAs+J4Jx7E+fFfE3rtX2Bu
      2H1e4wcQhol93S9h7XkjpW//HjI9WIea6idAQ7HWnwBKKdznv4w/+DihV/8xIri4e/GnDuE8
      8BFC9/xvjNbNta3kOWgBNBBrWQBKSSqPfQpVThN86R+iDJuhkXGOnjhFzs1QUFlKKkdR5ZCG
      x1XdV3FN7156m/uxTRt/6gjOg39G+HWfQIRW7zvQAlhFHMfBNMCTAqE8DCuAIQyUkliWtWYF
      oJTCffZf8fOT5Ha/lxcOHuPEiUPEzTF29Lr4PhQcg0JZkCsZ5BzFdNEn43uEojF29O9g7/Y9
      XGUM4x+8j9DP/yXCWB0HpRbAKlHOp3nu0Em6W2M4vsBQFQzbwsm5bBgYoKMlRi6XIxaL1buq
      S8Y/+TCjP/5Xfui/FJsx9m5y2LzBI2BdvGmVXUG+JEjkTI6NW8jIPu7tGiYkiwTu+B3g/LHD
      SqPnAVaJ8fFxnFIRv6UJ0xAYWAihcCsVhBDVCaIzf2sJOXWIo9/+OA+L27j3xhN0tfiLfm/I
      VoRsRUdcsqPH5cDQM3z+QB+vi59iw/6vYV39phrWvIp+AqwilUoF5btUpIHwHaxQBFMYSOkT
      DAbXnAkkC1P89PN/xNNOD6+/zaU5evlNaTxt8M0no9whH2HfW/8Iq++mFajphdECaCDWkgCU
      5/DIFz/GyaLP6291CAVW7tqFsuAbTwTZ4Ixw5+2303LN6yAYX9CderloATQQa0UAnufzg+98
      nVzmEK+5oYxVg/W8voQnjgTYPwgxv8ieq3dz7Y2vJNrasyJCUEqRSCS0ABqJRheAUoqDh49z
      /0MPcU33KLfsqFCDTvmcz4Rk3uDAkMWREYN42zZ6+zbR2dFGV2c7ba0tmKaBYVx6TlcpxdTU
      FN/61re475v3MTh9SgugkWhUASilGBwe4wcPPEK7fYy79ziEAxLXlRwfTPL8oQn2H55kcDSN
      60kAfKnwPIllGrS1hOnqiNLZFmVDe5Tuzhib+1vY2NmEaYqL9uhVxwB4nmQykeenR3JUZJhI
      rJWyHyZdDIDdTv/AVm5+yT4621vnXU8pRblc5qtf/Spf+vIXGU4NcfXtu7nurr3E2+JaAI1E
      PQSw0M/v+T7pTJZUKkMqneXU4BBudj937Cxw6tQw333oKE/9dAQhoL+nmRuu3sg1O7vY1NeM
      fcYeMg2BZRl4niSRLjE5nWc6VWRyusDIRI7jg0mmk9Ww6O7OGNs2tYECqRSO46GAUtllaCxL
      JlcmaJt0tEXY1NtCJucwPJahUHLxfEk0EkAENyDtLq7bt5fXvubV3Hzj9Rw8cIDPfvazvPDs
      g9xzRwc77thCoecW5j62tAAaiBkBlMtl9u/fz+bNm+no6Fj29aSU7N+/nx/96Ee88MILOI5D
      pVLBcRwcx6FcLqOkD0hQHkr5FEsVMnmPWLyF7q5WrtnWxKYNiuf3H+f5Q+Ncu7OLN7x6F3fd
      uIlA4PKNf9+XjEzkODmUQggwhCAYsEBAOGTPPjkuRr5Y4ejJBEdOJjhwdIrjg0lGJ8vs3tbC
      u964l5v3beTprM+UDJMTbfjirPdfC6CBmBHAoZMH+eB/fz+JsRRuwaU50kJXRxebN29mYGCA
      gYEB+vv76evro7m5mUwmQy6XI5PJkM1mOXHiBPfffz8Hjx+gpS/Ovut66N+1iW47x54mn+54
      nFDAJmCbmOb55ke+UOH0SJqTw2mGRqs97T13bmPf7q6aeGJqwdxmfSqf5zF3G1GVxRUBHBGZ
      PaYF0EDMCGA0M8I39n8Fy7BQSiGlpJAtkhxPkpxIkRhLkJxIkZ7K4BQdgpEg4ViYYCRIJBam
      rauVnTdcRVt3O4YhiMskRRHDEwGE8ulS4+wMlegNhzBWKeSgXmScAt/Pd+MYUYKqiK0q5I2z
      oddX9t3XiUcfuJ9ISxsAjiu49ebrln0tIQSmaRJvbSLe2sTm3ZuWfA0DH0nVXFHCZFz0Mu5I
      9nknuSZurplefam4foXHC004RtWE8rEIMX85pl4PUAO2bd/C+Mggo9MFbrpxb72rc0YA5/zU
      wmC/38d0uVCfStUYpSTP5yTTdM6W+ZgYzA/V0AKoAdlkAivSTO/GzkX5p1eFBXp5XwR5stRC
      xXPqUKHaoZRisFDgsOybd98KAwM571xtAtWAptZ2wrkKgcDZ+IBMcpKRyTTN0SBFT2D7Jcxo
      jJARBMuis712SwIFFx7mpWjnhXyOG5pl3ReorxRTpTw/qfQhxTnNWwjwFUYyh316GvvIuBZA
      LZgeG+LgoWNslgF279gCQCQSxa1M4kXChCzAjoBX4tDRE7zkztvxfR8pJZ7nIaU/O/hdCaTi
      otc65PfSXTzNxvDF3Y1rgYxT5OFiF44Igppzz0oR/9IThJ45zoZAG6qnGzmwRQugFmzs38KO
      oo+a42LM5XIEQyGCFpQ8E9MrYEfjXHNdB8Vcjkh7C4ZhYFkWhlEdmK6U+STkxa+lCPB0uYN7
      A2lCdnhFPrMeFCpFHim2UTbj8217pYh+41lio4Lgh95IVm2ePaQFUANS6TSRpjjhaAuFfJ5Y
      LEZbZzdtnZd+70pjpAsEHthP8+QBiq/Yg7utC4zzxwM50cJz+Ry3tvgIUafdKi4Dxyvz43yM
      rNF23rHQT47R9OQE3vveCeYYeGePaQHUgFwuj2EFcYoZjp/02XftziW9X0iJNZHFCAZQAQsV
      tFnSFiqeT/D5IWI/eIHORJKem3sJX9PG+FceZSzpkLljJ6WX70Y2n50QQghOqF76iifoj66t
      RMmeX+HxXIApzu9h7GMTtHzxObzfeA/YFgoDgY864xbWAqgBvT0bOXxyiHBTG3uX2PgB4okc
      L/ncD3FdhVvxqVR8PAluyMYP2LjhADISQDaFUQELUXAwHBej6GB4kki2SE9PjI2vvYrIZhsh
      bAQh2vb1cFWuzNRjpxj5s68zevUA2XfdMespUcLkuXI7XcEcASu40l9LTVBK8rOcYlhtPM/T
      ZSTytP3N/fjvfgfEqmL3VRBTVPBU1dTTM8E14vGHfkTOs7nnlXctemXrzEywnzxF5cl/QJhn
      +yclJb7jIys+vuPil1zcnIN0faxIADNgYUZshGlgNwUxg9X3SjIIoohz+jrlSw5/9ie8eO02
      iq++ds4BxbXmKfbGQ2tigmyimOP+8makmJ9dTpQrtP/xfYiX30Nlaz+eW0G6ZYIii2H4FCtR
      BEo/AWqFpSR2dOW8KsIwsMIGhG0gtIR3+iw03SNMg6vecxO5j/yI49s2VMcGAEJw0N/IJmeI
      llBjm0Ku5/B0ue28xo/n0/rp++nc04W9qUCTcYB4syAaNLBMD2GUsIQL6ImwmhEKWhQK5XpX
      A1BcKLuCGbK5+tdvpevTP0Rkz+5O44kQzxVjSOkt+L5GQCnFi3mfFG3nHqDpiz9hVwRe8oYd
      7Oux2NoZoKPJJhwwsUwLQ5w1erQAakTBk4QbwpmiEBcxwiK9zVz78ztp+9QPYM5cwQhdDBUb
      d8umRDnPQdl7nt0f/uGL7BgaZ+vbr7+ACWfAnHAILYAa0d7eQTi8FFOlVlzajm+/sZ+dbTax
      rz0z520GzzmdOF7jicDzKzxVasEX8wfqgReG2PyDn7Lj125BmAs37XM7Ay2AGjB6+hijUynG
      xyYuEoTQOAgh2PL269j89FECz59NUpsXzbyYX3jVWL1QSnEo75Fg/kIhcyRF3+ce4NoP3okV
      uXCKipl7mcnBpAfBNaBn03a6+7fWLRBu9keWkop0KToVfAxipkfAtjBMA5i/FtewTPa8/3ay
      H32AoT/9RVQsBEJwWPYyUDpFR6Qx1iqnnQL7/f75yxpzJbr+8lvs/bWbIGIynfdIyxhlZeMq
      CxcLV5l4ysLDpMkOkHb7kef5xjQrxv3fvY+Ogd1cd+3OJSf4y8sQL2Q6EMsUUFkFycgoeREl
      GMgxpXaBEBgVh1ApQ5PK0SQKRER5voUkoPNlO8n+08OkP3gPCIEvAjxc6ubV5hSxYP1ihZRS
      pMp5Hil14s01faSk5W9+SPFVP8/34nvIl1vxzOiCs90zdJghpsV24JyJsEo+Q9JRBA1obb38
      6EQlfYZHx4hFYytyPYDBwUGamuIrdr2RwROIYIRwIEZr69m8nIVMChWMYKsKvggTCS2tr+jr
      7yPnnfWiVMoFJhI52uMhip6B6ZewInECpoXve0QiZ2Nw8irC0+ZtWBewYxdLQORRwgZZbQzS
      DFI0N1BkAxMXeE/TjQNseebPKT13GueGzQAUjTgP5l1eZeQI2as/rlFKMVzI87jTS8WIzDsW
      fvAQlehVJF9y71KvCuc+Adyiw2Q2Q1R5jIyMEAwFKeZKBIOS0aTDy++8eUm9mZKKxMQY+eYO
      psaHCTZFSU9kCIWDHDk9ymvufQXWRZS6EKVMgqlMkY7UJA4WfrFAIBTk0OFj3PbSV9EWW1qK
      skI+TzwcYnzwNI89NsTe667FMG0oZZjI5Ik3xXDLLqdHp7nnnrtZrGMnny9Skme9Db4UeE6B
      sekyBgohQOXSTI6m2blvH8E50aCGXyKcO33ZJlTMSuLKEEG5eHds0mzBftt7af/cZxjd+U5k
      uOpjT9LKw9kKL28uYxormAbuEiglOZQr8Jy/rbqoZ46nysyUiHztRYbf9wHC2dOLvqZhJ4n5
      ElcG5wvAtG0GutoZHhw7c6bF5oE+ptPTbO5fRnYCIRjYspnBoQlmxiV9m7eSmhzlqm1blpVU
      qWNjH6XhUaDaY27Y2IdbSNG/aSvhwNIbTHtXL+3tMYqpIpu3bCVgm1RciWmY2JaBHQgilMnW
      rQOLFv/hF57j6Ikhdlxz/WzZ9Ohpcl6AqFGm4BuYfhErEqW9vZ1isUhLrG02GjRiSnZHcxjm
      5flRg0aaimxFsfiw6rRT4GjLVVh3vYrmf36YzAfumT02qbp5IjvE7S0Kw6i9j9fzKzyVVRxX
      O8AQ53lsWv7hQaZe+Tp2teSJLGGbMUtIBAlcpfMC1QSlFIVCgUAwiG3bCKo9mVLMGXjOn6AS
      QsyGQmSmxvjZA9++bAGEzHHKfics+rlVrftoKcB4cDO9n/4YxV/YjnPdprknsMc4wfXN4Qsu
      oKl6WDxcz8GRkrISVKTAUQaOFEgMIoZPzPCJmoqgaWMYNhWvRM6HpGeR8i2m/AgZ0bbgarbg
      UyewvzOJfMe9bIq5S/peDBxsI4cjO/QguBYIIXjq0Ydo7d3Ovmt2nikzzvkdax9nIy4QBnHR
      9whBT7hCLj/CxLt+nZ6//1Mqf74RFQ7MnMABuYVkapyg8DGFwkJhCYUCitKgIC2KxHDEBnxs
      Zu917hfgqTN1lNiqjI1Deeb8mfMuUHVRrND0f59m7N2/xjXRCkv9LhUmQlTNUy2AGhGyBUPj
      07MCqA+C5QhNCMGOWIHnCyEyd7+O+D8+NM8UQhiM01N9PWM/zLUjFqO5mQhUTCoiSoXFe5ji
      /+9Rpm95FZs7fYxl2NEzIdGLrapmGTjSIqAq9a7GsjGEYFcoSWrfXvxiN03/9mi9qwSAfWgM
      ccwncOM2muzlWu8GM4rVAqgBxXSG1o4WmuuxBGwFCVmw3Rxn/M1vQxwziX7z2brWxzoxSfPf
      /5iJN76RzdHyZYVrz7xTC6AGWEEbx1HYYmUWtdeTlqBkgBFG3/0rWM+UiXz/hbrUI/zAAZo/
      +QQj73g//d0Kc4nu83OZeXZoAdQAJT2S05P4dV1b66NW4OcVQrAh5NErhxl9168S/P4o4YcO
      rkD9FknFo/kzD2A/nGXo/X9AvM2nLbhyHYseBNeAYDSOOzXBCSLcdP3VdamDKcr4amVmbYUQ
      bAx7qNIYI7/x2/R95hOAwN3SibJMsAyUbYJpoEyjal+YBkoIMI3q3zIwEnlaPvEDCtvvZPod
      t7LFGKYj5K/oSjUtgBqx67bbibXUbwxgCgdPRS594iKZcY+6hXGGf+NDdP7nN4k8chJ8D+F7
      CK+CkD5CetVtXaSPUAqki4wJ8h026e4mKv09eB2tCFHBVBUipk1EWZgFB2syizWSwhzPYKRd
      cCymX/9OKr1t7A2NVfMprZD7WGEj8LQAakUuMU2yKOnuqo8IDDyUWtmfVwjBpmgFWZhg/A1v
      XVQmOaEkRrGAPTFB06kTBB4awpo+CYaBtG0IBJGBIDIapdzeg9v3ErzrN+BHY/gBi3ZnlF3R
      5LLcnRejujje0QKoFSf3Hya4c0/dPl+IlRkDnH9dwZZomY7K0cUHWASBAWBgE7CY7NZJIIml
      oLpv+MpPGvoqiCUKWgC1on/XJqbdemZVuPBa4MtFCEF8bWRNuSBKmRjC1wKoFYWSS09v++z/
      89kUiWwJwy2Sdw0sWcSMRAkoGzsapaujtQa1aPy0JvViJhxCC6BGeNkypY1n1wPE4q3kCmU8
      GSRqKBBxUA6nT46w95Zb5iXH9X2JVHI2jn85KGPlkutesRhaADVBKUXPll4y/tmp+mxyikQ6
      y8aOFsr+mQUx0U6uu7EXt1LCDMdnw6FN08AQi9v79kKsZHLdKxZhaAHUgkMHDiCFIDM1PVsW
      b+vkmjUeGnEloruIGtActUgVPVraamHXX5q5yV81F0c/AWpAz+ad9GyuXxi0Icr4ao27aVYJ
      /QS4ArFECV+u3Y0uVo/zl1lqrgC0CbQ4fBXSArgSEULWZBb4SsNXQf0tXZnUbhb4SkIqWwvg
      ykUL4FIo9DxAw6KURC1zJlgZCqVngReBzg3akBiEsJxuxDKX/ZnSwXQ3rHCtrky0ABoQgUE4
      0n4mi/PSCZhZRGAZmfzWIVoAdeLUscOY0RhhI4iyLDrbVybZL7iwwgthrmT0N1UXFFYogvJK
      HDx6gpfceTu+7+N5HqVSCWl69O4oLm8YK3xK5asIq2g184E6m2hNLfI1gjPpHKtlKTOAmjXH
      BGdzKiz29ZmKXPD1cq9bfW37Pk3KW9a96tygdWLw5FGsaJywFcRT0NneMpsbtJFQSnE85eCf
      00x8pwxq9QfahmFgCoEQ1S0ADCGIBG02xJe3/lkLoIFoRAFciPHx8VVbb6CUwjRNYrEYkUgE
      IcSKZYbQJpBmWTQ3N5NOp5FS1mxDbaUUtm0Ti8UIh8M1+RwtAM2yCIfDBAIBUqkUjuOsaONU
      SiGEoLW1tWYNfwY9E6xZNqZp0t7eTnNzM7Ayu0nOmDudnZ2z5k4t0U8AzWUhhCAWixEMBslk
      MlQqldkefKkopQgGg7S2tmJe5uYgi0ULQLMi2LZNR0cHvu9TKpUolUpUKktLDx+NRmlubq55
      rz8XLQDNijLjrYnFYriui+M4552TKXs0n7PrpmmahEKhVW38oAWgqSG2bWPb5+9eF45cfnrz
      lUIPgjWrTqM0ftAC0KxztAm0QlS3Br18N6DO5ra6aAGsEDPej8uhVCqt+iBwvaNjgRqItRQL
      dKWgxwB1oFzIUapU96mdmhjD8fw612j9ok2gOuCX0mQqFiF8co6iMDLGQH8PUkp8X4thhkKh
      gOu6izp3JhnwTKSoYRiLmlfQAqgDpVKRqXKCVjtKIZMk3tox+6PpjM5VUqkUhUKBpqamRZ2v
      VDUd/My/hUKBjo4OotGL70CvxwB1wHNdJGCZJlJKTNNECKHHAGfI5/MkEgn6+/uX3SEUi0Uy
      mQwbN2686Hm6u6kDlm0TsO3Z/QC05+cspVKJqakpent7L+tpGAqFqstLL+FW1gLQNAyu6zI2
      NkZPTw+WdXnWuWEYBINByuXyxc+7rE/RaFYI3/cZGRmhu7ubYHBlUrvH43Hy+fxFz9EC0NQd
      pRRjY2O0tbURiazc5t6RSIRisXjRGXotAE3d8X0f3/dX3AFgmiaWZS0Ykj2DFoCm7hQKhRXt
      +ecSi8XI5XIXPK4FoKk7+Xx+0f7+pRKLxS5qBmkBaOqKlBLHcVZs4HsuM25mz/MWPK4FoKkr
      juPUfCnkxcwgLQBNXcnlcsRisZp+hhaApiFRSlEqlWo2AJ7Btm2klAuaQVoAdSCbnGI6nQOl
      GBk6Tb60tPQhVwqe56GUuuxZ30sxk7uoWCyed0xHg9aBVK6IVAU6mmwmp5K4IkR4Y8cFe6kr
      lXw+TyQSWZV7jkajJBKJ8542WgB1wC0XcI0QhUIeBXiei2mas8Fx64WZkOXVuGfTNPE8DyHE
      vKxz6+fbbiC279wz+/qGG9bnVkZSSlzXrZn781yEEITDYcrl8rw1AnoMoKkLjuMQCARWNRR8
      IW+QFkCN2P/00xwfGUWvNlqYbDZbs9nfCxEOh8/L3KEFUCMmB09y8MjJelejIVFKUS6Xa+7+
      PBfTNGfHAjNoAdSIcHs7Mj3KieFUvavScKyW+3MhwuEwhUJh9v9aADWipTVOx8ZegpZe7ngu
      xWJxRc2fk2MpKu7ismlEo9F54wAtgBoxPj5Fa/tGertXav/fK4dcLnfJbA2L5YHnTvLRL/6Y
      j3/lcXz/0mklQ6EQruvORodqAdSKUpETw6P1rkXDMTPZtxLuz+8+cZSHfnqSj33gNWzvbePv
      vvEk/qUWwRsGtm3Pbt6hBVAj+rZsImgH6l2NhqNcLq+I+/O+Rw/x1KFhPvxLdxMKWLzprt00
      hQP847efRV4i008kEpldK6wFUCMyhRIdLTrHz7nkcrnLtv+/+dgh9p+Y4MPvrDZ+qE50/fK9
      16OAL93/wkXXAc+NC9ICqAFDJ46QyC19j6wrnZWI/rzv0UMcGUrwB++4k4A9fyM9wxD86mtv
      YDyV5ysPHbjgNWzbxvM8pJRaALUgkUzzsle8ElU5P/pwPeN5HoZhLHsHyEeeP83zJyb4nbfe
      hm0tfA3LNPjgm27h2HCCR/cPLniOEGI2Z5AWQA3YvXsHzz31FF39W1jI0k1NjTORSAOKseHT
      ZPKXt6/AWuFyFr8fGpzi648c5HffdjuWefFma1smH3zzLXz14QNMpBbOCxSLxcjn8zoYrhac
      PjVIMpmkpbMbBeeJIFeqoJQDcYtTI9PsbGrH9/0rPhw6l8vR3t6+5HucShf59Dee4g/ffgcB
      68Lre+cSDpi89959fPI/fsL/evfd54kmFAqRSCS0AGrB9l17SExPkEhnFzzuOUVcI0Sx4tMc
      C5LOZGhrjl3R4dAz0Z/hcHhJHqBi2eWvvvwYH3jjzfR0Ni/pM6/dtpFDgwm+/OABfvne6+Yd
      m9nMW5tANcAwLXxlUMqmFzy+9apd7Ny2mUi0mT1XX8PWgd5VruHqUyqVltz4PV/ysS8/xpvv
      3sOO/uWFjb/p7j0MTqR59sj8ORkhBJFIRD8BasUNN96MsvQ8wAz5fH5Ji9+lUvzjd55l16YO
      br9mYNmfa5kGH3jTLfyff36Azd2ttMXDs8disZh+AtSK737hSzz01DM6HJqquVEsFhc9AFZK
      8Z3Hj1CueLzl7j2XfsMlaG0K856fu56//doT88IlQqGQFkAtkNJn676raQmEF/QCrTc8z5sN
      Rb4USimeOTzKEweH+a033LRiC2auv2ojA13NfOPRQ7NlhmFoAdQCJ59haHSCYDhU76o0BDOL
      3xfDybEU//bD5/n9t99xQV//cvmle/by7JFRDg1OzZZpAdSAcLwNmZjg6JAOhgMWvddXIlvk
      b7/2JL/3i7fTHF35zsMyTf7rm2/lM/c9Ta5YzRitBVADlJJce+ed9DTXNuPZWkBKSaVSIRC4
      uEPAqXh89As/5r2vuZ6+Jbo7l0JXW4y3vuxq/u7rT6KU0gKoBaVskv0HjhJvba13VerOYtyf
      vpR88qtPcM9N27l2a1fN63T71f20NoX53pPHtABqwdDoFNu39JKYTta7KnXnUu5PpRSf/+Hz
      dLVFeeUNW1elTtXI0eu4/9kTWgC1oCliUxIRtg7UvjdrZBbj/rz/2ROMJfK881V7V7FmEApY
      /PZbbtUCqAWmYZKZGmdsauGZ4PXCjPvzQtud/uzYOD969gS/85ZbMeuwQXhfZ1wLoBZ09W8h
      HjYpFtZHlOeFyOfzRKPRBe3/4aks//TdZ/ndX7iDYKA+AQk6FqiGOJkS7Rs7Fzw2PT7C6EQC
      gFxygmT+wpu4rWUKhcKC9n+mUObj//4YH3rbbXQ0r25uoHPRsUA1wgoYTE8vnBOo5EqUKqBk
      M1OTEwQ6wjSHrSsqHFopRaVSwTCMeffkej5/8YUf89aX7qGvo6nu96sFUAOK6SmODE/Qv23h
      lCh+pYRrhMjnsjgVj0q+gNkRv6LCoQuFAuFwGNu2Z8ukVHzuO09z+9UD3LKnf1Xzgl6IK+Pb
      bjAiLZ3s3DZAsHVhAWzetmP29e69batVrVXlXPenUoqvPPQiAdvitbde1RCNH/RMcE2YGDpJ
      qlDC9xeXrexKYyH352P7Bzk6nOBXXnN9wzR+0AKoCV39WwgaihMHnuTA0Yl6VwwZYvYAAAg5
      SURBVGfVOdf9efD0FPc9epgPXWQxe73QJlAN8F2X3t6NhFs30N25uinAG4G57s/JVJ7P3PcU
      H37nXUTDjbdASD8BaoBTLJEvljHsMG0t9XXz1YMZ92e+VOEvv/Qov/WGm+lub8yOQAugBkSa
      45x8bj8T6fWXGn1m8bthWnz8K4/zX27byc6Bxt0GSptANWBi+CSRni7CofUXDl0qlQgGQ/zL
      937Krv4O7tq7qd5Vuij6CVADMolprHCMaKjxbN5ak8/nefjFUQqlCm++e09DeXwWQgugBrR0
      dOLks0xNJ+pdlVVFKcVEIs3h4Qy/+fqbMIzGbvwAQl0sja5mWfi+j2EYS+79stks8fjazSid
      yuY5ePQUV+/aXpMljbVAPwFqgGmaDf/oX2nS+TKf/94z7NrSs2YaP+hBsGYFKFc8PvJvD/PS
      3W0rtvXRSqKUQgG+Al8qpKqW+UoLoC5MjA5SESH6u9s5cfw4sbYuNrTVbiF4LfGl5JP/8RNe
      fv1mdnTal1z8XitmGnnFVxRdWf3zJI6nKHsSAZiGwBBgCoE4868WQB2oSANUGTBoa23FF2LN
      Zof+/P0v0NkS4cbtHXiuW/P4JwV4vqLgSsq+ouRByau+FkDAgJApCNuCtoBBKGIQNG0uZJFq
      AdQB5Zar2aELGU6eHqZvy7bZ2Jm1FA79wHMnGZ7K8eF33sXp06fo6+u77PrP+GQ8CUVPnu3N
      XUnJlQgBliGI2gYR26A9YhC2DEKWWNa4S3uBGoi15AU6eHqKz337Gf7kfa8C6TE1NUV/f/+S
      ruFJRemMqVKoSEpnGrxSYJmCiGUQDVQbeMSuNnJjhZ0La6e70TQMY4kcn/rqE/zJ+15JKGAx
      NjZF6wVyIPlSzTbsuba5UiAERO1qA28KGnRFLcK2gYBV86JpAVxhzDzQa9WA8qUKf/75R/j9
      t99Ba1MYKSXFUol4+wamix5F16foVgeivqra5eEz5krENuiIWIQsA/NM9ertLtYmUAOxWBNI
      KYUnmd+zehLHk/iquiXT9rYgraGV69+kUjie4p++/zN6NrSye2t3dW1zKYeJxIi2ELaNWds8
      bFcb+Wr25stBPwEamBkbuexJCmcaetlT+EphGlUbOWQJ4mfMh5BlYAgoe4rDiTKTtse21iDW
      IkMSlFI4/lm7fEZcnlR4UvGzI6Pcum8rXc3h2YY+PDhBf1/fvLW/awktgAak6EoOTJUwhCBo
      ifPMB0Nw0cFg2Bbs6wozUfB4drzIlpYAHeHqT+2rqq/c8atiKlR8ip7E9RVKgW2K2UFne9hi
      IG5gGYKvP3IQmS1wfe/Z9bylUomAba8pz9W5aBOogZgxgWYmdVbC41HxJUeTDqUzA09TQMA0
      CFqCoHnWZAmY1UmihcyVx18c4vtPHeN/vvul83ZbHB0dpbm5uSFnfxfL2pXuFYwQYsV2lgmY
      Bns6QsgzXpeliurYSJKvPPQif/yrr5jX+KWUOI5zWbu+NwI6GG4dIIQ4EwawtMY/mSrwqa/+
      hD94+53nrW3IZDI0NTU19AB3MWgBaBYkX6rw1//+GL/5+pvobpu/sk0pRTqdpqVl4bxHawlt
      AmnOw/Mln/jK49x783Z2bTqb33Qm3eH4+DjxeHxRm941OloAmnlIpfiX/3yObb1tvOy6LbPl
      SikSiQS5XI7u7m5CodCaN39AC6AujA2doiJCbOrt5Njhw7R0D9DRMj+NYL2ccz94+ji5osN7
      fu46pKzuqTvT60ciETZt2nTBfP9rES2AOuAJC0NVUE6eYHsfpVwKvymM53mUStWUitPT03UR
      wYawx9bruxgaHJwtE0LQ1NREOBzGnRPybJrm7GvDMGYFYxjGrIjnvp55Ysy8FkIgpZz3+txr
      zf2MWnyeFkAdMGQFV4Qo+Qal6UFau/oxTRPLsgiHwwAX3VdLs3LoibAGYi2FQ18pXDnGnEaz
      DGZNoFwuV7eBl6ZKqbS+9xSrB7MCWMxW9prac64J5Pv+ef72Ris7NwfS3IHm3DJgngdp7sB1
      bpmUctXuRZtADUhqeoJsoQww+8MVcmnKFX9eWTY5xWQiM68sOTXORCI9r0wpSTI5vyyXTnBy
      aHRemeeUGBoZn3+9yTEOHz2JnFNWKecZHBlHKTWbA6lSLjA8NolSZxq5kiSTKbxKiZGxSYRh
      IAQkkyl8r0Iqkz0jEkgmk/iuw6nTQ4DAMAySySSuU+T4ycFqEJ9pkEwkUQpSqSRSKUzTIJVM
      Iv0KR48cpez6mKZBOpnEV4qRoUEcb6YsgVMucvjwYTL5EqZpkEkltAAaD0k2XyYxOT6v1PVL
      5LPzd5M0gyHy2fkZqIWA6enpeWXJyTFGJ+aXjY2PEQrOT2B14tgRPFmNRJ2hrbObcNCa11Cm
      JiaZnJycd97E6ChDp09Sdqsi9X2PXL7A+PgkuAVKrkL6HtlcHs/zyefzACjpk8nm8TyJrRwK
      HqB80ukcGIJSaqpahiSTyeK7RQ4dOY4vq2W5TIZ8KknWVdimASgK2QypxASjk5lqGgkUTi6D
      a0Xo7mgBUb0bN5fRAmg8BMV8GlfNn2XNpZKMTU7NKVEcP3QAYc9vxOVymXKpPK9xZrM5Mqkk
      ck5he2sbw8PD886LRGMkJsaZm9ikUspgR+abZZ7v4VVc5Jyy9s4OQuHIbMSo9FxGRwYpOxWm
      UjksA5TvMTY6RCqdYWhoiIonUdJnYmyY4cFTjKZL2EKilM/kxAgTk0k8v0LFkyAlUxOjnDg9
      gl8pkS9VQCqmJ8dJO5KQm2UqWwalSExPkM6VCRgVJpK5alliiunpBJlCheZoEJQimZzm/wNw
      OSj+WKkN3wAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Dispatch with Load (2)' width='192'>
      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
      p6xU5P8Dqs+w3JAoavYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dispatch with Load (no charging)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dispatch with Price' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Emissions (Absolute)' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Emissions Intensity' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Generation (Absolute) by Type' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Generation (Percentage) by Type' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9WYwlSZae97mbb3ffYt9yraytq6q7ZrrZPT1LN2eGQ4qU+CJQpAABhAQ+
      UJBACSJFCXrQEIIgPuhBEkUBBASKeiEJECQEENJAQ4IENdNrTVf1UpWZlXvGHnH3e/36bmZ6
      8MjIjIobkVld2Z3Vk/d/iri/m9kxs3PcbTl2zNBaa2aY4SWF+aIFmGGGF4mZAczwUmNmAL9g
      eP+97/DxjY/Y7Yx4+HATrWK++/0P0MDe1haZeuJhGTP0Q/r9wal8tja3puZ/uLtDmEkAbt+6
      jQbu3brO3Ye7Z8o0GgzoDwY8OZj+7h/+K3YOe+dXRmv6/f7U32/fug1oHty+wY2ffISfTc+i
      P/hEeq356Aff4v2P7tIfDKemkWnA3fvbaCWxzpdwhs8btrZ3eOeX17j34fdw6hsU5B3ub+9S
      dA1ufXyf9Y1ttG0TtA9xHc1mUOXNNY8ffjDGNU0Gk5gv/8Y32d7awYj7/PM/+DF/4t23saXP
      9977IQvr1/i131rEY4Ifawxga7/Dr//aVf7x3/97zF19B50ENGouW92Iec9AlBt0t26xuLSO
      9iq88/YX2N7eYnXjEr//Lz6kVDJQRoGkex+32qQ/jilW6xRKNWpmwA9/MMITKb3Q4Kvf/B2a
      dsgkUqA1m7sd1koG//L3/yWvXJjjx7f2WCkLnFKFSSxZnq/wwz/6PoVSmfF4wsa1LzFfcxmW
      F3lw5wP+v4dtTM+jUinxYG/AX/73/jw79+5SW3+doH1/9gX4RUOtVkVpC6Tk6tWL9MYRaw2X
      /d6YaqOOaYJhaPqDAbWFdVYaJQzDwDDAMEwuXlhDKU0ajWmPIr74ztuURYThNbh47QtsrMxj
      GQYP79zj4tXLAFQ9izs3b1JbWKHf7ZFpg0ksmasVMcjzvnL1FVYvX2brwSaOMKjWamSZxDAM
      +oM+QgjMQhVbx1y6dIFSpcHh3i4YBgCGaXLpwiqphIe3b7Nx7RUwDKolm2EquLaxTHsQsdSq
      M7+8hmfDYDAEA+aX13FMSRyNGQUpTqFCwTExDJP19XXW1pZBFPjiW6+D1nSDjLmihddcwXge
      q0Baa4yjipzFA+c+M8PzhGI0mlCtVk78+mn6YX9vn8WlJT756GQ8xi2VsczTeQSjHolZpF72
      Tvw+HI2oVavPLP3e3h7Ly8vnPtPd3ybQLuvL8wBomfDRjTu89sbrU2V7BK0l+wddlpcWAJ6P
      AYzHYyqVypm8lJIoiiiVSp+1qBk+AyaTCZ7nIYR40aJ8bvDchkC7W1tEkz6T5Hnl+PnAeDx+
      0SK89IhGfQ4GY+4/ePDEr5rx2P/MeT+3SbDWKQ9u30KWV1BJQMk1kNjsP/iY5WtfYrlZfl5F
      /Vzh+z6kIQ/22lRrTZLAp9aoszA//6JFe2mQTiL6WUpnZxcVDtkbaRZrNrhVKpXPplfPzQC8
      Uh0Z+cTCIMag2mhhKEW2tEqjUnxexfzcEfpD4tABw8AlRToWqbJftFgvFYTjUJAh8ysXcc2I
      9UqBeNyj4LqfOe+XZg7wtIn6yyDD52EO8KLb4JMLAS/NMqjvf/bx4h8HGV40XnQbKKUIguD4
      /+c+Cfaf0yQ4ywJ2dzsMPrnT9zOFZGtzZ3qZWnL/zm26g3xSPO4POGNz8jNh3D2gP5kw6J9W
      lOFgQPdwn/F4RHc4Qj3x7f5ZTdYnoy69QfBz7QetY7a2DqaWGYz7fPzx3aO21wym7HJ/Gjz3
      SXBWXkHHASUPJA57Dz5m5aeYBCuVcrh/SLlmsbu9Rang0fVjio7FVnvIb//6V5+X6E9AMux2
      GQYT7lz/EWZ5jkbJQwublZUVkjQlHPf5ydYmrmVj9fc56Kc0PYML117Hsz/70CLNJIf7W2hf
      8u3vbPPG22+TBmOq9QZCJ/THPtFBj0azxqjXIUo1npES4fD6OcPQnxZBnDEc7qETn+3dbRy7
      SBDFeIT0Eodf+aW3nnuZkHCw2yZeKPKj977D0vplDNOk0WjgCFBasfPgLmFqULBMrv/oPeaW
      LmJWylxdPX//4JN4bl+AQrlOsVjAtQwM06DWmKdZqzD/U06CDcPiwsYyUZTvJprC4uLFDWzb
      49LG6vMS+xMwWdlYR2cJ9dYCayvLpMpApimeZWDbFkmaAAZuoQCGRb1SZH555bkoP4DteMzX
      amjb5uKly5SsDOE4SG3RqFbBKuM4goJjUarWWZxroDQUPO/pmf808tgOi60q0nAAA9stsLG6
      RKFUY3154WdSJgguX14nDGIWlteoljxc2yLSIp+/yJQMA9M0cD2bWnMJoRVrn1L54RdoEvxZ
      J09Pk/FZyofPtpv9PGT4LOU/j0nw56EfPkv5n9TFX5hJ8IuePCVJQpK82F2+F90GnwcZnnf5
      vzAGMMMMPwvMDGCGlxozA5jhpcbMAGZ4qTEzgBleajw3AxgOBsgkJJbnP5dEE8aTiH7ngO7A
      R2vJw/v3iBKJUhnDkc+w30dqRbd3eidQa0Wv10OmEQ8ebqM1DLuH7Ld7KJly9/Zt/NEIP0zo
      93qo0zkw6ndJpWJ78yFRKklCn/sPt9FaE07GxKmk3++TJSHDcXgqhyyNGYx8/GGX/XYftGZn
      8wHjIGYy6nN/c4fBUR16Z9Yhz//h1g5aa/qdAw46/cdtmcYMxxOGgz6ZPF2LQb9HJiXbmw+O
      6jDh/sNtlNbsbN6nPxrR7w8J/QFBcrpT4tBnHMT0DvfoDSdoJbl/7x5xKtEyYTAOGPT7KK3p
      9U6f7dVH/ZMlIQ828zoMjuqgs5hbt+4wHg+ZRBm9Xpdpi+39bhelFZsP7pNkijjwub+5gwaC
      8ZBE5meGR/0e6ekmIPAHhHHGwe4W4yBGZQn37t4nU5rDvW0OOn36/T4yCRj40/vxuRlAv73H
      g7sfs7l7yMd3H7CzeZ+H27vcv/Mx/dFj3wuZSfzJGNtxGQ/7SKnQMqU7GDLqHLBz2GXY22d3
      e4fb97dPlaO1ZDTyyaTG1jF+koFh0Ol0yJKIYrHA/du32do/4OZHN6cYAKThED9WFFyb/nCM
      wmAy7BBm0D7cp93p8fDuHfZ2tzjojU6ll5li4o8xhUPgj8hkhoGm2+0x8UMsI2Zzc5Pd7R3u
      be6dSq9kxsj3kQoMGRMmGYYBnU4HrTMe3rtLvzdmc2+HO3c+Jp6iwJPQJ40SCgWXfn+MRjMa
      9EgzhRYWncNN7tzeYu/BLXqT9LQMKPzhGMf1GA0HSClBxXQHPt3DNoedNoP2Drvb29zZ3D/d
      DzJjNJ4gJegsJskyMA3anQ5EA9z6HB/euEv3cI/r169P6QWYDIekKqNQLNDrjwBNv90hQ9Pt
      tTnYP+Tunbs8vHWD8RS/E0XMaBDheV6u6EqTJSOGfkKqYNRvc+/OPXZ29ugNThtxlmXP0R26
      0mCwe5tQj9FxQGV5HkdJPrx1k8tv1yk4uStEOBmztdvDzgLmVtbpdDrESYpOMyajPoEfUV5Z
      pXuwz8J861Q5WkoO9neRyYRBpDC9DipNiI/W6LsDn7W1FXZ6fSqNuSmS6vxcayjoH+5z4eIG
      vX5AmmXILKbTGyLcjFarzsCPqDZOb7okccD29g49x6RQn6PT6RLGCZlp4toKnDILiwUOdvdp
      NafUQUkOdnfIwjGjxMTxusg0Jk4SJv0OqWFweNjF9TKkVwNOyzDqdUjClL3DLhcvrNPra7I0
      JdOaUb/H+uUL6PiQWCV4U/aNgvGQnb0RRjZicfUi7XaHJM0wk4TxsMdwkrKyukznYI+Fs+qw
      t00WjfAjKHS7SBmTxgkY0OkOubCxQtg/pDq3MqUfYNDvoByTh5uHvHJ5g04/Q2UxmVS0D7tY
      xZSl+QqDgTWlBWA86HPYnxD5u6xfuEyn2yNNJWmaEfgjWktrFGyTzjih1SycSp9GwedjJ/hZ
      dlmfVsbTdgg/a/o4jgFwz/FB/1nL8Czp4ex2fJad4M9DHX6WbfC53An+pIvqT4PPukP4PHYY
      X7QMYRjmQ5kXKMOLTq+1ZjKZPPPzz80Ath/eY++gzWA4PRiRVpKxnwuWRWMe7uwweeIAca+9
      z/3NnemBko4weuTyqxUPH2wyGj0xPpcpH9+8wcH+/pkT8XgyOua6h3vs7LdP8A/v32Z//4DR
      5AxjVCmjo8lUEvlsPtwhOPoyAISjLjdv36MzZeL7COPxY5m3Nh/QHz5RhzTk+o2bHBy2Twa4
      egJh4JMekb3DPXb32yfmObub99k7PKA/xZ0aABkxOmr30B+w9XCb6AmjGfUOuX3vIb1n6Qdg
      88EDBqOT86Rb13/C7s4B2RmDi/F4fPymPtzbZr99cny+s3mf3YOzXeFVOsEPc5nHgy7bmzs8
      6aTS2d/h4fbe1IBgAGjF6Og88XObA0wmE2pehfb2Pb71rX2+8Nbb2K7LysLROFxrRv1dbt8O
      KJqg6xXCMKNUcgDwJz6FapFhv8MH3/82a1ffQAibyxfXjsd/E9/nYOchmILeOMN2baqPwm1o
      iR/GFOwxd3odDgchl5caNBZzb0KAJJhw0BkQ+AEkPm51Dnh8tnfiT3DsInubd/nDzQO+8Mar
      uMUyi63GURkZg+6QB3cPMIWJMKuUk4Ti0bAoiSakqsR4NODe9Q8otNbwbMGlS5exRF4L359w
      sLuNEi6Dfp8V4dKoHdVBxkwiSdEfcfNgi2FkstwosrB2ibKXH8OMwgmTwy69yYQsDqhV51DM
      H7/J/MmEZrXE7oMHfPs7u3zxi29iCJeVxaN+UDG9/T73/DaYJmVRJFYK72hYFAQTtNdgPBpw
      /YPv01y9gmVZXL18AfNoWDHxfbr7O6Ra0OsPEY5L/YmwJ5PJBCF8bt/cpz2UXFisUl9YpVYq
      HLWBz3jQpTuOyYIB1dYKzDdPpK96Vdo79/nWt77N5WtvsLS4QKNaOurqiMPtHneCHtKApl0g
      BZzjNvCpFasM2nt899vf4rW33sljIq0/mosoxqMJD+99jPjd3/3d331GHT8TSZLgFUu0mg2i
      wKdQbVIpFeHIZTXLMvJ1MEljYQlPODQWW6g4QWmNaVtkqWRjfZU4irBsl1qthtIax7bI0vR4
      bFgsVSgWPFqtOSxhoJRGKo2SKdXmAiXHJEVQr1VxhAGmQElJpsAWBlI4NKslqvUGpYKL1pr0
      KP9iqUKzViGKE0rVOpVCrtgGuZ++JUBmBs25Bo5XoFVvosmQWYawHOI4ZHntIlommIagVq+j
      lcZybFSWHdehUCpTLBRoNhvYtoXWkjTNV8NqC6t4pkIbgnqthjDAEBZaSTKlsYUJhk2jUaFU
      bVAtuiidT4ABbNdjcb7BxA8p1+pUKgW0NhCGJIwkBVcQx7C41EB4FeZrVTKtUGmKZTtEUcTG
      +gZpGmOaFvWjOjiufaIfvGKJYrFIq9XAtqwT7VipNSi6Dso0qFVzH34DyGS+fGqaJpbjUi2X
      qDdaFDznRHqvUGKu1ST0x3jVJpViEcvMx++JhIJjEkWwuNxAeDUWqkVSrZFpim1ZJJlifW2Z
      OAyxvDL1WhmlwbZM0jRfsdMY1BuNz8ck+FncpZ9Wxs+af5ZJ8IuWMQgCHMfBsqZ/2J9lEvyi
      6/BZ+UfzyXJ5+gGsz+UkeIYZXhSe2xcgiyZ0xjEVF6RZIA0GOIUyo2Gf5uIGxAN6w5hmo0iQ
      gKUisD2C0ZBifZ6CmdLuDWm1mgz8mIqjiZWFjEdYhQa1ksXhfpvG3ByHh10WF5p0+j4Vz2Ac
      a1YWWwy6HYRXJhh2qbfm6XS61GoVOt0BaxvrJP6ASAl07FOsNRl0OlRqNbrdLgvL65ipzyjW
      uEaC6VYIRj0KpSqDfpf5lQuIbEK7P6ZRq+DHEo+EzHRJgiGF6gJFR9E+7NCcm6fd7TPfqND3
      YwpCEkqLpVaFw3abcqVOr9djYb5Fpz+iUrAZBilry3N0Dw8pVOr0ux3mFxY4bHdp1Ep0+/n+
      RuQPiJSFkfq4pTqjfpdStUav02Fp/SI6HjHwM0quBrtINBrglsqM+11Kc6uURUp7MKFWcomU
      wEx8DKdI4A+oNlexCel0+rTm5+kMxrTKDuNYI2SIFEXmmyXaewdUGk3ah20Wlxc5OOzTrLr0
      RjFrK4uM+oeYXgW/d0hzYYX2wQGNZoODTp9LG6v4wx7SKpBN+pRrc/S6bSq1Bp3DNqsXL2Km
      Ae1hSNUzyUyPbNLDKdVP8J1RRMU1cn6KrnWHEa1G6am69tzmAMVigTBJ0dpEqwzXMklwKTsW
      tVYT0wCZZqSAQFFyHcaxolUtUKg0sIWJlhlBqvEEFEsF+qOQ1bk6olBBGPkYfjwYs7jWIgw0
      g+GAy5c2SDON61i4rk0cRRQrNcIwIY1GtJYuYKiMYsGj4LkkUYBRqJHFAWQxhcYiFppyuUCx
      6BGnKWChZIplZODUKNgm1VoV27JIs5Qk09iGplB0GQUpC/UyTrmOCQgDxuOQ5lwZrSx6gyGX
      NlbItMCxLRxb4I+HzDVbhMpg3O9z4dIFklThuTauYxOMxjSX5/BHKeFkwOrGRWSaUCh4FAou
      SZaC4SKzBFPF2OUFHKEpl8t4jkOSZmgMtMxwLcjMAkXPplIuUyw4RHGGVBpTSzzXJkihUfQo
      N5sYOv/djzIqBRvX8+j2R1xYXUCZHrYwcByLcX/AyuUlRr2M0bjPpauXSaKYQsHFc2xU0MNs
      XSGd9IhGIxYuXsFIY7xCgYLnkqkMwyiQZTGkY4rNdSxDUip6lIoFgjif02iVIWVKqbH8BO8R
      xin6iHdtkwTnSNdaR7omH+ua5zCO5Cd0LSVI9XOMCrG9TZJk6CzMoweHMcIE4RawDWjv7RAk
      KaaWxKliHARYwkQaNiVXMGjvMQgSPAvGUcpk7GNbgiCDZqWATCbs7HUoVUtsPtgHI8O1LUZj
      n/mFedCKrc1tTMuhe7iHKUCbDmnkU67nKwzb21tkWIT9AwxDkGoDncYUKzUMYGdrizRVZFHu
      HhElChOJ7ZUQBnQOdvHDFNtQTBLJxJ9gCUGiBbWiQzwZsN8ZUCq57O31yLIYx7IZTSLm5xpo
      GbG5vY9XLLO9d4ApEyzHZjT0mV+YA52xubmDUyyy+3AHYYMQNoE/oj6Xn7/d3toilQZx0Edj
      kEgTU8W4xSqmAXu728RphkxClIZJlCEEWI6HMGF/d5cwSTB1SiI1k0mIJQTacijagkm/TXsU
      UHQtusMJYTDBtmxGYcp8swIqYXNzl1Ktwv2PN7FcjWNZjAcDWkv5mdzNzU2kW2O4/TGG6SBc
      m9gfUm4t5OHWNzfJpEkwPsQwTFLDxcgCvHINgJ2d7dyIs5hMG2ilIZ1QqNSP+J0TfBDECNNA
      uAUc85GuJQgtiVLFeBJgCTFV12aT4GfkZ5PgXwx+NgmeYYZPgedmAForNj9x7U4WB8cuvqDz
      K32e4FWW0G+3iY42Irc3HyKfeEAryXjYZRzk48Fee5/xJOZJBJMxvUG+E5lGI3YPTu4eBkFw
      vKsp05jt3ZOejWEQ0Ov3jspL2dzaOcEnUUC7+zjPrc2HJwJSqSyl3+8Sxrm7Ynt/hyA+6boY
      TAb0hvku+KhzQH8SnZKxfyRD6Pc47I5P8Y/qoGXM5vbJOkRh8MTus+bh5taJdk6ikF6ve7xj
      vLn58IR7skwj2t3esdv13vYWySdcsAO/S2+Uyz0etukNTu6WPylj4g/Z6w5O8Y/qqLOAzZ32
      mem11mxubn4q/qSucVrXZEK/fXhK157bTnA66bF/0MW0TIadHl6liMgyfNNjrlFFpiH9w30c
      W7Df61N0PEpFQTSKaVaauCpjPOyibJv+bodipYDlFRBqjFMpUnI0g+EQI4jZvjfCKZeIw4x6
      zSVRDq16mYP9LhOpeeC3iZVAJxFepQpa0Wo26bcP6A1jyAIGgcTVCUahim1Ims0W/qBLpzfA
      NBTDwRjXsxCYxKZNtVxEpSH9bhdsm8Feh0K1iCUsMlLm7AoCzWg0YJIqJr0BbqmI1CbVgiSm
      Tqvm0h2N0OOYw3CAZXlEmNQrJbIkptls0W4PiBX43W2U5RFPAqqNOlJmtJpNeu02g+EEU0UM
      /RjX0piWizJNit484aBNpzfCEVsc9MdUXIEWDhaaxoKHjEccHnQxbZvBQQevWsJSiolhUavW
      AM1k3CUxTYZ7XQplD7NQosiQ2FqlVTHp9sZI7dPdDxCFEpPBhOZ8gzRNaTWb7HV6pFJzv39A
      YrhkkwHl1iJkeR33dw/xY8n2gzGjSGKTYLgVLFPTajaRYZ+9vS6mZTHsdFHCoVgqIIycT4Me
      +/u9Y/6Rro1Nj/lmDZVFJ3St4HhUioJgFNOqtHBUhj/ssmPbz88Ahn7CwlyZXmeAZdlUqk1K
      Roo+emEHozHl1jzBoIvEolyts1C32c9G2AakkY/p1cji3NffK5RZXGrRbWe4jolWMvefV5Ik
      TSk7LvNzy0RBH0vk43KlFaSSUKU4RY9mq0WaPfYSiaWiKBTDSYZte8y1WqTp47d1EGXUSjaD
      4RjLtqk357B1yujInT4KAwqVGqE/QmqDQqnCXL3EYX+Q7zJHMRkOhkpIkoxK02Nufh5/sE/R
      dkArZKrQtiJJEgrFGnMLS8T+ELuQBw9TKkNJQZqkFAsVWqtrpFkM5K4QSaYoWDCahFi2S6PV
      wJAp0dELexJlNEoW/ZGPEBa15hzCUMRxhgmM/ZBmq8agNwBTUK7UqbsGe36CaRioZEJmVrBl
      SJJKal6R5dVlBocJRdcCFCpLkIZLmiRUq3XW1tdJswj70dxDSdJMk8kEp1xmYX0jb2c7r6NE
      Y6YpvgLL9phrzJFmj88sDMYRi4sVuu0+tmWxuLQC8vGBlpEfszBfptfpH+ta2UhRx7o2ojy3
      QPiEri3WbfayEbYJWeRjuLmuPZdJ8Gg0Op5UpGmKbZ8MH66UIgxDSqUSKkvRwkY84a0qpSSO
      Y4rFIlpLpDSwrJOjs8eTH02aSmzbOoOfLsNn5ZMkQWuN67pImQEmQpwloyJN1c9dxjAMsW0b
      y8rdR4Rln7jiKAgCXNdFCEGWpQhhnXIbPlkHjf2JiHc/6zp8Vv7T6tpz+wJE0eNx7Sddch/5
      eRw/k+VrtE8KnSQJpvlYobJPnAA6kR6OlPA8Xj53/lFdHv/2+ZIxSRKUUrnvFZBN4YHjds6y
      026zp8tIn8I//3b+LLzWmiRJHq90PUXXnosBGIZx7hKmlPLcZ6SUmKZ5bh5KqRfKP8sy6IuW
      0TCMc5dBgacug77oOjwPHnhmXZstg87wUmNmADO81JgZwAwvNZ5iAJoszQ9yJHGM0po4jpFZ
      SibV8Xhrhhl+UXH+MqjWPLx+nearF3lw/QFKZTgWJEa+sbKwvMZco8J4PMZLY0Y/ev90AUJQ
      /9VvEvg+8Q++O7WY8pe+TGYKojP42pe/RqhB3fyQzD99FVDplddIaw3MvW2ina1TvLuwhN64
      hBNO8D/68SnedF2st97FCXz86z85zXsepV/6KjIMCd7/3lQZ61/7NYI0Q374ATKKTvHlN94i
      KZYxth4QH5yOFeStrKFW1jE27xMfno7D462uo5bXsEcDJrdunOKtcgX7zXcQSYz/wXtTZfR+
      6atYSp7JN3/9N/GDgPSD76OnHK6vvv0ukeMir98iaXdP8cWrl9CrS1jdNsH9O6d4u97AuPoa
      VveQ4P7d03yjiXHlVbwsZfTDP5rCtzCuXMONEgbf+8HpCpgmc3/6T56ra5UvfZnEFMf8U1eB
      SqUSSRxRKFUY9A5o1eqY1QWi7iYffnyPb3z1nXxpUF3H5q+dzkB7KPUeWsfTeQD9j9F66Wxe
      /VM0awj9tzG4dYo29H+D1v8Opv4n2PyjU7yp/zSZ/lsY6gfY/PUp6RfQ+p9jqPew+ZtT+CWU
      +j207p4j479A6ypC/y4mpxXcUH8brb+J0P8nNv/3FBn/AlL/Fwj9D7D5vSn8X0Tq/xxD/Rts
      /vsp/DW0/odovXOmjFr/a9CHZ/PqPbTWWPqvA6eNGP330PqLjD/4X5nc/IMpOfxVvJW/gqH/
      X2z+l1Os0L+M1H8XQ/8eNn93Cv8VpP47oD+eKqPga0j9P5F0r9P7l//xKd6wXZp/6kdonZzT
      Bv8IrVeO+acagPIcRGLTrBW5dOld+r0hrWaZrPo6jXk/v77INDHMs0dTpmlimiZnBezI058d
      C8Y0TUxMOCPWi2EeyXAWfyzj+WU8rQ48Qx3P+pwaR/xTZTyTN5+xnZ/WjufwQmCaoM545lEd
      Wl+zqL16+q5k94IgPa+dDc6tY36G3MQ0ptfROOK9RcHKn59yV7NpIYR4qq49yZ9vAIbBwtLJ
      qF5zc7lvvW1Do1E/N/kMM3zeMVsFmuGlxswAZnipMTOAGV5qzAxghpcaMwOY4aXGzABmeKkx
      M4AZXmrMDGCGlxozA5jhpcYznQjTMubWrfu05lrst3vMNUogXIqFEtVKftC5P8r49g8mXF5x
      0Gj2OhnLcxari0cH1pXm/Zshl1YdxhOFaYDnGriOSQHQCt6/GXJ51WE0URgGFDwDzzYpkx91
      ++HNECeLGU8UqwsWvZFkoWFx4UjOJNVMQoUlwLIMwljjOQZTNs1/KmRS80c3Qq6uO/iBIs00
      tbLAcwzODtV0EjcfRow3I5TSrC/a3N1Jubhss3G04b51kBDsJpgmzNcttg9TllrW8S0Gu+2E
      P/qeT6VoIiV0hpLXLzq8+joIAA0DX1IpmmSZRipwbAPDyDt7HEj+4Kifkkwz9CXNqmC5ZVEl
      P1H1nZ8EzFVT/FBRLZpIpalXBBePZPjwbkjWi+iPFfWKSZppVuZsLhx1xNZ+wp0fBzSrgrm6
      4Md3Yl6/6LKWB34jzcAPFOKJsOmea/DonJpGMxhLSgWTKFEI08CxjWNl1Ud1LHsmcaZBg+cY
      Jxw4hn6e3g9UnrdpHHvSZJniD38YsDJnPeORyKPY9B9+fJuvvbnBzbbEinfpOBXeeOVifkyt
      YNCoCJZaggd7KZmED+/GRKnLl6RESkm1LOgMJFGimISK7lCyOm/TkooMSbUk6BkO6gEAACAA
      SURBVAwlYazwA0VvJFlbsJlXCqUVC02LdJx/tJSC3XbGTjtj8UsSLSV7nZgbH4bUKybVkuB7
      H4W8fcXlnQWFkpKDbsy3v+NzYclmt5MRJYqNJZs3rmlMKdnvxHz3uz4bizkfxoqLKw6vX9PY
      SiGzvFGHY8U4VHSHGf79mEsrDnNKkmUZ718PKImYdj+jUhS4jkGrJthQCiklczUL6Rl4riBO
      Nf2xpD+WlC9klJYkBc9gz1c4toGUGdfvx+x2Mn79osSUEscyuLTsMIkUSkMLuLeToryYN9+U
      BJOU929GrC1YjAPFQU/i2AbvvurRkgrvSJ6FZt5PSsFH92PGgWIuk2itWWxZlBxJJvO7F+7u
      pLh2xvqv5f0437BoDw3m64KtgxSlYb8rab0usaSkURFUiiYr8/lLKogUP7kboSspy1cknW7M
      +z8OuLLq8GAv4f5uylfeLPB2XYGU9EcJ3/sofxne3U6QSrO2YPN2I+cHo5jvfRhScHPjG07y
      Mr/8pk1ZSpIk5eaDBGHmhhKnGtsyeP2iS0lKDFOz0BQ0quIZh0CWiyc0r125xK2dEa9fWWV5
      aQGl1LFz0fZBwtCXbB5kPNhLeeOSw5VVh0yBEII0U7x3PcQ04Pr9hNcuuiy3LO7vJghhkqSK
      P7oZYgA37ie8ftFlqWVxfzdFHDlQXb8XEsWKezsJtmXwxiUXxzLAMBFCMJporqzZVEsC1zZ4
      /YLD/b2Ue7sZQggKrs2FZZtq2eTqms1c3WJzP+XDe3HOexYXlmyqJZOr6w5zdcHDvZSP7uWH
      qP1Q8tG9mExqrt+Pefuqx3zd4uF+ijAFQggWWzbVosl8w8IwYHM/5cd3IpQ2EEJw80FInGru
      7SRMIsXbV1xqZTO/xEII3vtoghCweZCSSs3br3hMQkV/rBBCMPRTeiNJtWRSL5t84bLLm5dd
      WrW8/EwZFD2DlTmbNNO8dcVFSs1710OEMGn3Eg77kt12xr2dhFfWHa6tO2RSIyyB1pobRwZx
      ZzthvmHx2gUHrXNHMiEE1+/lQbH2uhmvXXT5wmWXomcc1+HWZkiYaO7tpBz0JF961WO5ZSGP
      dGEcaC6vOvRGkreuePzy6wV2Oxkf3c8PsydZbqRpprm8arO+aLPTzrhxxMepwVxdUHANXMfg
      i694hLHmg1tRft7ZMAni/IVZKwv+xJsFXNvgD38UYApBnEjubCX0R88YFcIwBFdeewOApeU8
      AGpzfpnm49uFuLxWYOnd/KDxK+v5ZTWtmgVmPgQqFhz+0p/Kv4FX1nL+3dcKvPtafm1OqWjz
      F3/7JP9LrxX4pdfy/E3T5Le/WkX5Ltc2Hh9MX1+08RyDBJivC0Z9sC2wLHjzisvFFZvmcj4I
      GozzSseJRml4dcNhbcFCH4X+GIwT+mNJlGi0htcuuExCBW7Ot+ou/+6frJ6Q8StvPr5+UynF
      jXsRy1XJTifjK68XaFQEd3eS40hsv/rFCumBd6J9VxdsnJogA/7Mr9RJDz3evvqYv7Lq4MzZ
      ZMCV9SKr4ckrPxtVgVnKu9JzDGplgR8qGpV8CPKNd4v4YX54aWXBo/Hl0ok6NKqPD8lblsWf
      /XoFVMjVR3xFcGnFOfbi/OYv18h6Lq9dfNwPqws2btEkBd59vUzsnpRxdd5G1G000KoJ2tuw
      1LLIpOb1Sw4XV2wqR8PlsmdSLphUyyaTUHNtw2Z9waaykstTLpiUPJPVBYso1lRKJitzFlHm
      HOkKLLcsbAsqxTyvr75VYDDO26BYcPI68hwjw30esDzn0IqdE795joltGUhgY9lj/u3iCb5e
      ERhObiAXlgssvDWFd5+tmYQQ/M7XKujY560jBW7WBBeWbWzLID4/+XNBwRO8fqSYS63HcrvO
      52e9Y6FpU1v7ZD+BcAw0UC5aJ4zrEW/ZJgoolx7zlSe6yyschToR4phffuKq6MXm6Tb4/LTK
      DDO8AMwMYIaXGjMDmOGlxswAZnipMTOAGV5qzAxghpcaMwOY4aXGzABmeKnxbM5wWrH14D7N
      hSXa7S7NagFtF3EtQaHgPT2DGWb4nOLZDEDFdDoDDntjXllrcGevjyP3KFSbXN5YQanz44RK
      KVFTQu095nNntzN5pZBaIs6I4qiOHM3Ms3itcxnOlPFp/KMyzpMxdxQ765P6dBkf8dPLeMRH
      EobydHx/WwnKUmKcJ6NUmOf1U5bXwTgjvJc6qmMgTeIpMlSkgSEl1hll6KN+EOqs8GE5L9V0
      XXmU/kxd0pybHkBJidKP+Wfb45cShMC1BA/2+rz2xpuMDza5ezDg6sW13FFMO3wQnHYKFsLj
      14XAFOLMaF1CmMhzonkJ00Qg+H/Gc3SHw1P8r6VlLgqBeUbEMdMwjiOGTcfT+NwXSZnmVOUD
      KB1FJTurax85kt1Pi+xPaafVtMiaEBhnREUzjxz+vhM2+Ad7r5zi1+sb/LdCYIqz6yCEyVC6
      /LP+4lT+rwgLIeAfDxZJ5enQiH9OFmh4gv+jv8qPp8jw5+fm+LeE4Hpc5XtTylgRLX5TiHOi
      1+X9INT0NjaO+tFP3am6Zpou3xACYZ6ta6YQKMPiHx7J90wGYDpl3n33iyd+K61fYWn98f/b
      qcvf762eSusIh18HUm3wt/YvTc3/P0tdKrbJf3cG/zcyl6oFH4RVNieNU/yV1OUi8F5Q5cMp
      DX+1VOdrQKpNBvJ0lYUS1I5knMZbysIFBtLmv5rS8QD/s7R4lsHgv/EbfGtKO/1mq85fAP7J
      cIEPprTDr1Za/M7KqZ9PYSBt/ukZCv6XtIGvBH84pQ0B/kOdK+a3JnUSedpz6evSZnrKk9hM
      3allvFYq85vAbupyb4oCNwpFrgEjJXh/Ct8sFnkF2DlD12zT5huAhqn9COBoA4lxLN/PzRlO
      A4fZ9OuFMm2gMc7lnwV3k8LUhs+iIl8DfhyW+Tt7V0/xjUKTvw18EFb436bwreIc/+MzSQD/
      13AePzz9HfitpMDy2Tf7HGMorantMFbP1lWTcxT8LzxjO/6s8UFY4Z9OUeA3nDmukRvINAX/
      gtti+uvnJDJt8F9P6UeAv5W6NJ/ww/tj5Q36ecB7YZXuJDn1+9uZzfILkGeG8zFbBp3hpcbM
      AGZ4qXE8BFIqP0uZw8D13HMiyc8wwx8PHBvA/q2b3OiOWGrUGewc8M5vf4Pyi5Rshhl+Djge
      Ai2/+ioVHfP+e99n4513Z8o/w0uBJ+YAijDMWFxZwj5nM2WGGf444YllUE2SpNQWFikXnbNT
      zPALDSUV44MJpjDw2wFuxaFQ97CcfPdVa81434eCpr85pFDzsIsW1hOBAXoP+oRBxGh3TDRO
      cEs2pfkSvJXzSZASDiLCwePd5PL8yWADnwlak0YZWipkqhC2ieVZaOPsC0/PwgkDmIxHDOOQ
      C1depVz4dEYgU4XfniBsQTyOAYNC08MqPY7LlkYZliOI/QTLERjCOHGh2pO8cATmE7zWmvbt
      LqEd0bndw7RMLNeiNPccG/Yp0Eox2vfxqi7jfR+7YOOUbCx3+tb9NMhUoTKV19W1kIn8VOmj
      UUTvwYA0zDAMCAcRtbUq67Vnr0cWZzQ2asR+QtiP8A8mVFce77xmiaTQdPCqLkmQMj7wccvO
      sZtHaa4EW+BWXeobNXr3B/Tu90n8fP9DWCaxn1Bfr9J/OGS4MybxE+L5fJFFS02WSLIwzS/9
      M8D2Tm5J5QquyZK8nR4Z6CNuuD2islii92CAjCV20Wbp2sIz1V8pxd6Hh1QWSk8awJGyKcUn
      rw7WWczNj2+QKgctEwrlMsIwac4v0ajmCmgYkEaSaBgTjWIMw8BvTzAvPYrkpune7VNsFug/
      HCAcgWEa1FYrx0J17/Up1j36WyOEnd82WFurHuVvUGoV6fbzUHhOySELM7p3e2RRBsD4YMJo
      38c/nGAYBmmY0dio8ih2YhZLJp0Aw8w5JRWlVgHlqmPFmHQDwCCLM1R2xHt5e2ggizLCTBH0
      QoSToHYV5YVnN8JJN2DSCehvDtEqjz9UWSqhX8vLGO2OCYcR4z0fu2iTRRmlJ96eXtVD2AJh
      CwbbIwp1D/9wwqCa+0jlb/g8bTSIMYSBV3ERR0YmU8lwe4xbdnDLDuWFEsOdEWE/zOuoNf7B
      BO3kbTJ3pcFge8Rod8yj4EaTzoRoGFNseLhlh+blOkE3xDpS4nAUM9oZYwqT+noVt+ISdIPj
      L0LsJ4z3fNyKw+BBH78d0LpSRy0d9UOUMtgaUV0q0X+Yt1Oh4aGWc960TLJYgmFQXSpjCIPh
      9pj+g+Gxru19eEhjo8bB9TZOycFyBZWlfGZrmibFRgGl9GMDGB32eefrX8/jaPpD4laZRxvy
      huVSqzaRGNQ9zX7kko72+fhOxFe++BpKKaIgZrg9olBzQcPcKw2Guz5hPzrhaZlGudXXVqsE
      3YD2rR5SHfE6t27D4Jjv3OrmHn6mZNILSMIUr+5RWymjIVdoy0BKSaGRe+NopRGOiV20GOyM
      GR9OchlQpGFGEqSkYYpKc0Uuv1pDSolGkwYZSZCQhhkyyfma1UApRZqkjPb843KaF+v47YBJ
      L8xl1JLDGx3iSkT3bg9hCyxXUJovHnuDGpZBGmWU5opkicRyBP7BBL+Ty1ioe8gdhVb5UETY
      gngyJHozRkqJ3/WJhhGFusfc1Qa2Z5FGGW7NzWWQiiyS+Zt7L/9Kjfd8qstlpFIIR3DxV9ZO
      GOX8K63cOGSG1pr1L6+c8AVqbNRobNSOvWobF+o0nMefHLfk4JYcDDPvh1KzwMafeOzKUJ4v
      Up4vUluoHLVBPkyyPMHcK00KdZegHzHYGub9YIBMJIZpUFksozLJpBMy2B7ldcwk5fkiwjIp
      L5ZQUlOoewhlHfdjsVHArThUlso4JYfhzoj2rS5KKtI0JRyElFrFxwYgLJP+3j4GIFNN68IT
      vhhaU200KbgWD7YOuHKxRdgsU+gNjkMjFqsFLn7tZMMuvOriCOfY07I8X8QpOxRqHoW6R6lV
      IA2zPKzgk3z9CT7KwxoKIZi/2iLsn7wp3i05CCvng25API4pNgs4JRvbs4hGCV7VRQiBjCXD
      nRFuJTftuWtNxvsTokEeUi+LTvLz15qMDyaEgwjTNHE991QdvWr+rBACoQWluSJREORfqbJD
      Mkno3O6hZf6M5Vh4NRfDMHArecjB8kKJ8lwp93RsTwj7IcIVtBabGMaRkR95QpZbZRbfmD8h
      g1PK21QIgVaa4e6Y5qU6Ttlh7kr+Igr6EeKor86CEBZKnD2OFkcerWfeZWzmMp51T7Bx1E4G
      BuX5Il7Nzb9mq1XKCyXq67VcV4xcF0xhUlnKFbw0V6S+VkUIgVPIv1zHcll5efaRRy46Hxra
      RYvyfBHLs7ALFkEvxBQmtm2z9GY+XDo2gFKzgf/9H6DKLutXfokTMwDDoFzOPx9XLufjiVLJ
      olR6Bu+uI5imcSy0U7SPG8ytOEd/m9P58rPPRarLleO32SM4Jed4fFmoelz46kkFLtQ8GoXG
      8d+n+LpHq/gsPpD58CHoh2SGxKu51FbKKKmZdANMyzySwaXYOBk2UJQfhx1sXKgzr0/Wodgs
      PHM7OJ59bKTVo0/+/CvNZ0r784JTck7M3YRlIizzuI2EI04p+JP80yCEydKbJ18Sj4Z8n8Sx
      ARiGzZd++S2+/9HHWLNl0J8KhmEwf62FOTn5FnXLzlmX3M/wgnFC0yN/wt7ODmGcvSh5Zpjh
      54oTBlBqNKlUqtTK0/3yZ5jhjxtOGMD4cIdSvcJhd/Ki5Jlhhp8rTuw+zF95k8v2HSx7dk5m
      hpcDx5qudcL3vvVdElLWLj7bjtoMM/yi44lVIIe3334Ls1LHE7MlixnORjSM8Nunh8nJJJ3y
      9OcbJ8Y6Kgv417//R3zt679Ks1o4K80LQ9APpzZ8Gs5WrZ4VhdjmrTvTv/Dm0aH533n/BlkS
      nuLnftmHKiTvKeL3TgcekQ0F78DVvQ5/5r2PTvGLV4vw9c9YASDsR9z7g81Tvzu2A//+p8vr
      hAHE4xFuwaDdDz+1AchETlVO1zpqKKWRH+1NTau/kYKtp6YHUJkCG/7aeI9o8PAUvxyPp6T6
      GSCVZ9aBf1v+XEIM6N5kqgxqqQS/9fT085bPf9L49lTORhIDf+6iA9np4FaFokkI/Ke/0SS8
      cvqIf/2t3K/rWl1w8fLplUSxbCOBUhfmPz6dfz3V8DUo+iFXfnjvFL8SLMBXoSHq/FrxtCXZ
      R3NXrc/WNX4jxbTUcf5PzAFSwkTgOCWWFqon0mituHPrYxrNFnsHXZqNMqZwKJYq1I4uabqW
      RfwPU5TTdHJDcgz435emK7hrKWKtpqYHWJYJKbBUtVDJ6d081zOJgTc397GnvHkuyAvwLpQH
      E65OadhKzYc/DQzD6cpVzzurKdSZdSgJzQQIuiH+6PQzWZS/CNT2YHoZ5SF8AeJRjH94On28
      kntafrOY8StTZDDnTr+xf1aohfco+z869buTfIXT8TBO45uFHl+fO90PojqX3+Xmwn+5ftpA
      xLxCAmvllL/6hd4p3hC5B4HDObpmKxLzcf5PvLNMrv/kRxgLi6RJAoXHlE6H9AYJ46jNmxs1
      bnUUZrRPu+/zhVcvoZSiIDQbzSnb9ZZ9HM7urJmFUhKt1fT0gGnoo5B9Z6XPHc3eapq8Pu3N
      M2+RSMk1T/I3pjSsUZJkUvJlJ5nacEY5eKbwj9KQ/M3xDtlo9xS/FI+RUvIf1SL+8pQyRCUi
      kZK/OGnzZ0enXwT1oHtu+EatNUpKvEnKr344vfONPyNR54ZOzEMfnuWcrY74M8M7qryf9FNC
      I6oz0uvjEJVnhUbMZXSTIfNTDBDhHIdGPDNE5Sd08YlJsOBXf+sbfHDj7qkQg4ZdZa7h4hZK
      3N71ee21q/h9j92uf+wMd76TVR4a8eywgXk4u7O6RogjJyyYmof5NCetp4ZG5HzeyMvANM+R
      USAMwUrNRpunDdnzBNE5Mj4K3zhXtqg3Tqe3yxbpOTIahoEpBHOu4j9Ynv75Ny0DMzu/DcQ5
      RxPMI6fEM+tw7Ax3tozinBCWxnGIyrNCIz7SpafUwTxH1z6hiydGrZPOPpPsdFLDEFy5ll/Y
      +8hVrDG3QGNutlz6i4ggUXy0G7FQtXCEQcExqRceK12Uav7VRyMsYWCZBhdbDpfnPt0BqY8P
      YsaRJEw1yzWLC03nzC/Li8QJAyjUGljbbcLk7M/kebh9GHNjP6bsmni2wauLLq0nTioFieL3
      b4xxhEHZE1xo2FxoPW7YKFV8625AtWDiWgbzZYvlWj6u01rz/lbIZSTvPQxplgSGAYsVi4tP
      yPDhbsQkVoSp4kLLYaNhn6hkKjXdSYZnmRQcA9MwTni+plLTm2S4Z/BKaw5GGbWCQGmNIwyc
      Z/RSfIQfboekUjOOFFfnHdYa9gn+JzsRiVSYhsHFlk2tcFJ17rZj2r5Ea81c2WKtbvPsfrlw
      MMrYGqTsj/OzF/Nli69ceLzo4VgGFU8QHOnBew8DmiXBp1kWkUpzt5OwWrO5sR8TpZp3Nh7z
      N/cj/FgRpJqVKQayN0z5+CCmURS4lsHVefdTGVCYKr5zL5fbAOYrFiu1x+08iRX/4ub49LrF
      ecOEp0Hlh7WYL1tsD1K+cz/gz33xcXwJeRQWu1Wy8GPFdx8EzFes44M3qdSMIokloDfRbA9S
      WiWLIvnnc6lq09uXXJqzudtOUBp2hxnLT3y1hqFkEitsYXBjLyKVmjeekPHmfsSddoIlDBxh
      8IUVj7Un5vw39iLudROEYeDaOb9af8zvDjK++yAAoOQYXGg6vL70eN4hleb3PhwhTAOlNK8u
      uf9/e2fyI3mS5fWP/Tbf1/DYIzJyrawts7bee9TMxrRm1DAjBOIAHJjDCAkJceAfQNw4IG5I
      oOECiNZw5YDEMEMzQ9Pqme6urr2ysjIjIzJ2391/+2Icfh7u/gtfMrO2rsr07yUz/Ptbnpm9
      Z2Y/s2fvca2W/C7p2CF+GBv1u0cuQQQ3x/jn11K8feBwr+5R7we8spVhPFJmKGG/5bFW1Pnw
      xKXvRrwxFji3ZYX85L5FOatSyijUchorhVFTrxQ0cobCt69m2W143G/4jEcsFwLSuuDrOzkc
      P26H/Fii7XcObdbtkPeOHK4uGey3fTZKOuMhfYtplWs1gys1g6YZ4oXJmUUkiQ2kHBuIG0hu
      7yTL2LLC+DyEGxFJuDU9dvJUSBl3Vg8aHmld4WHbp5ZTh7oWDr5DEmeCG81OPA/7BIeLATZK
      Gm0r5MZK3KsddZIbI1lDYb2k88JaiiiCvZZHWhvNB1VFUMqo3FhOEQF3T92hG7GUkt26S9YJ
      qfdDXtvO4AaSu2fJKMbFtIqmCK7WDBpWMPHhfG6kr2ymuXvm8fN9m63NC7yEV7bTfHTm8fM9
      m82xIwLLBZWcoXB92aBhhvxs3+ba8miMOP++y6cUvEDyy4cOOUNJjFLFdDx6bJUNGmYw4Sp9
      0PZ5fi3FSkFjr+Vx2gsSBlBMK1yqGDy/luKsH9B3kyN2JauyWdZIaQofn7kcdQJ+47nc8MMw
      l1L4/ovxkuXtzQy3N5N9uwC+vhOv7qV1KGeTfe9G2cBpSGo5DQQ0zZCTbsCyGw1Hy62KPhzZ
      lnKT68OFdFyHl6sGTSvEv2AghZRCJavyrStZ7py4iTrqOSF/fd8iowtOewFeKFnOa7x6eTQS
      pjSBoSp8/bksfTfizqk7KFmMc11MSPbggw+xywVs55NtLBXSKt+8Mqq4yoWKUxXBNy+PDkKU
      s8mKzxoKv3lzNGJslUdDlhCC71zLEdWT92yWdVKa4NwMbm2OgpQvFyYr/sX1NJtlnUpWZb2k
      Y/tJ5XlpI81WRac8g9cUwdd3MlRzKpeX4PnVFIY6bsSxTBslHUMVHHf9xPwa4LXtURlWi5My
      Xh5MC7OGMjE9Algr6qwV498vTo8g7vmqWY31kkZaFzxofrY7tLt1h6Dt0zADbq6muLWZ5uMz
      74kiCW5XDLYHH/tL+ck6KGVUfv25WBduXTDQQlqllFFx/IhqLu7w9po+P9+3+a3BNaoi+N6N
      3PBZm+VkPWoDXUwcir/9tdf5i5+/hZ6arPSnBboqqA0qXAX0C8se4zxTeFUZ8Yo62TsKIXh1
      a9RgF/kvAooQQ8PZqRrszFhe/qR4/VKOUCaVcqOkY6SUx9oH+LRomQHHXZ/ryyksL2K9pLFZ
      1rHCJ9fbhOmFfki+kifwvno+HQs8O6jkNH7juSmxC9VPaQCKGmJaUPwEB2JcqXMcTJ6dFSLN
      FSBE4Uf2q5M3At+VGQzE1PsBLskv4wLaJ8P73g4Pp9TDjr/NVaAd5elPqYdSlH2iVZhZ6EVZ
      /u+Mdvg9FCDkP/T+Fr4/2Zf/vWCF5cnbJvAgWOODKe9Y8m5w+wnl/Twg5UjXEgYgQ1BwODrp
      PbEv0If+Jf5l659O/G7oKj8EAqnyx/0fkDLiU/uqquD5IUEY8XxYoip1/sWU+wH+bVijBtSj
      Et4U5ViO4iWy/2b+Bv+rMbk38Y3+Nf4R8HP3Of5d459N8GUvx78C7vjb/Pfu70/wRVHmDx9R
      /nP8P/clbHsyRdHrYZUS8OfOa/yf/uQh9e+717gK/Of+7/CXrecn+N81r/MPgIOwxttTlKvo
      XuIbxHX0n6aUAeCPpE4jLPLH/R9M5X9HaoDPT9wXkTJeDdI1FccLCMKIvxkVHssA3vSu81+m
      vOMla5nbwG6wzodTylDzrnNrUMYfTinDZes6v/cY75dzOtNNqeIx0rWEARRX10h9tMfW1ieP
      IvDq9VU6posfRLT7Dl4QXuDXCMMIIQSNrs29w1aCf+PmOn4QIiWcNE1O26Nt/X/T+fvsttoT
      7/wj9xbfAyyZoiNLrC/lSRsapy2TvuNhRvGHsYdGKyqyvVIkiiR928P1A0QUz5HrUYkfu7di
      Xkr6lofjBRTcFH8I9GWW/9j9g6nl/idRBkWFH/Z/k3rfmuCL/iZvDP5fLWS4tlkhbWjsnXTY
      O0km/sumdS6tlEgbGgf1LvX26HnveZenKvBOvsQ3ACtK82P3FplBKMMokoSRJAgj/nDQwwN8
      75UdztomiiI4POvR6ieT4r10ZRlNVVCVuJ0+ejjpezMPaUPj9efWCCNJq+fw8cHo/l94N/iv
      /R+QTevoqkLf9oik5GV7hVtAJ8rzY/cW2bQeZ36MIrwgxPRWH8sAfNSZnem/DleoDf7/xnPr
      SQNoHewRZnKEvp/wBUJKms06mXwR13bIpDSkaqApAk0bXbe1XGS1kqdveyzXCpTzKe6MVVwh
      Y5BLGzw4bqMogmsbFQ7OukO+mEuxWsmze9zG0FReuFyj/U6yYXZWS1SLGbIpnXtHLY4a/QS/
      uVygUoj5SiHD/aOkgVUKaTZrBXq2x+ZykdNWn+5YSqNqIcNGrYBp+2zWipw0+5hO/E3kSp0f
      uy9Prdh/LA0yA0eJ65tVClkDXVPZP+lw1EzK+Nz2EmlD5bRtsVrNT2RNfP5SDUNT8IKIndUy
      6gXe0FW+8fwmtudj2h73DpOdgqoIvvXiFo2uTUpXOWr0eThWz5vLBUq5FPunHaqFDC9eWebH
      7+wP+bShUcimqHcsHC/gyno5Uc+tqIAZTHaS1Sg7XGd/fqdGPmPw8UGLWjnLje1kqJdKIc3N
      SzUMVaFre3y030jwuqrw3Ze3OWr00VSFjx4m+cfB9c0qYRQhELRNh2Z35DBYzKZYreaTBpDK
      Zzi69wuaV15ITIGkDLl39x7Lq6vIwOGeI9EJWVpeZ32lSjQIp3jWMfn4UGP/tEvP8obPkFIi
      ZUTP9vjzX9xHIBACDs56uH7sHBVJSdd0+dOf3QMJuqawXM7hByFRJImiCEURXFot47gBfdvj
      8lqZMJKxI1gUISWkdI1iNsW7u6esVvOU8ul4UySKiCJJ2tDIpHTevX/GajVPOZ+ha7oxLyXp
      lEY2pfPe7hlr1TzlQhrT8QbvmL0/EsnYWU7XFC6vlWibLq4XcG2zguMHjZZ2MwAAGapJREFU
      QxmRkp+895B8xiCSkoyh4YfRiEdy96BJtZCh3XcoZlODvYvzMkY8t7VEPqNzUO+yXM5x89LS
      WBkiauUshqZy0uyzVMpyY6vKYb03CMUoOTjr0e45OF7AacukVsoONo7iMjhewF/88gFCxO10
      3Ohjuf7QIfDfd3/Am62vTdTB37Ve4G8PdOHNj47JZwzCKOK0bZI2NJbL2aGurFXzFDIGb949
      5tJqiSvr5bF2ilhbyqOpCgf1Ltc3q1xej3cjoyhiz6/xJ1NGYk3T+OdRHFUvk9LYWStx1rbQ
      VYVaOcvPzaOhLnWtWNcufARnKJYL5IwL67IyQhBhOR6R73P1yhWsVp279x6wvlKNnZwI0dwu
      Rw+7aEC/2aXfhPzAR1tB8kZ0wYNvsN2Q49soaOxE+wwX9D2QFlwCDHyE0IiiiB+9uUs2pSOB
      ci5Np+8AYuigdfegyd3BcNvqxaPH+lJ+2JhHjf6wN+sNrqsW0jEPHNZ7HNbj8wU9K+ZrpVH8
      01kQAxn8IOLPfrFLWo83iaqFDH3bAxEvkdZoxuU8n9kNZjdLMocQgjQuYb/J2aDDbQyOOqSp
      DsooeOf+KbvHbfwg5Kxtkc8YpHR1UAbBSdPkT9v3iKTkrGOxe9SOPTAFZLHjdjifVQWxDDVA
      5Q8IhOC16B38aOwjeNBOJV5DiAJCxHW6XM6xWslx/6jN7nF7UEeCdXkav+OCU+ql4hWE+AYA
      7z+oc2fQ6ze7Nqqq8NzW0qCdBPunXQ7rPaJI8ubdY4QQvHCphhCCdlTgr8PbVIsZDE2NDeWs
      hwxlXEcCPD/k7Y9PsVwfKSWZlI6UEiFi7+JzXRs7D+By2u2SCiSWk1wGFarBG9/8duK3cj7P
      xvblYaFrtPnt6C8nFEONDIT4h6gCtuTxVOUxRIAmJK/K96byWeEiRJYNeYIMz0aNZ8EaUOQa
      QghelB8RhT+auP969AZC3GadM74f/u8JPheVEOK32OB0Kp+PKgjxfRQBOTnd1VgRceVvySNy
      QXeoNFiwAeR5GSEEO/KAcEo5t1lBCMHL8kNy0U8n+JvSQIjblISZNCAXMGFjfRkhBFnhxMo3
      vn83kEUTv4MU4cx2UAZGuimPCeTkKlBGeMOOZmOpQCalcWe/wXI5y/ZKcai8Rcyp71gmvmaD
      06kyXpbXEOLrFDGT/ECUq/I6QnxtaOiXVkqctEyWillWKzl+duco9ooVsBXsQZPRypkFOSCF
      j4o61LWxrl5l9+NdMsUMqScMjf5F4bnoHstyf+L3Gq8BoBOQZjLBsz7QAFVGU/nUoIZVZvAD
      ZUhLd6qRA2T4fSQpXpR3MOXkB2NFfhfYnrzxCbEkm1M7ikoU+2voBLMVfKYz95PjZ3eOht8m
      x80+fhjxtZuPkckbKNKfYSDxNCeFO5WvydF3h6Gr9CyXo3qPRsdiaWzKrjCnM8WGsZTmiZ3g
      y1euEUhJOff07gQv8OlxI7qPEt0Z9dCDEWZDViDhEvf5IIPDkvkxthmPrviABTufIJxPwgD8
      xjEHnoNFmVcfM9nAAs8eajRxp/TQJfnFnM0uyP7UHl6NntwAhj6uQihcvf0yIlBYXy7Mu2eB
      BZ4aXAiNeMbewT6drjPr+gUWeKowZgCSex/vsnP9MsrME5ULLPB0ITECbG5vYlkh5fKXLyjW
      Agt8HhgagJQBH314B83IMiPDzQILPHUY+wjWefmV2xjC5id/9davUqYFFvjCkJgCpfNZpA+V
      cnHW9Qss8FQheSi+1UVVNW5c30leJSW77/81lrGG36tj5HKoQrC8ujnME7zAAl9FjI0AgqwC
      PavL8UnSfTdwOhydtTk6a7KzXiWVK4Nv8e6H94bee48MGzgnJF8URkTh9HB4MR+H5JseF24U
      GnFmyD0ZPSKsIPP5gSfmrJB9MAorOGsB7VzGi0nIL8ooZ3icymh+GTgPKzinHsNH1PN5GWat
      AUZROLcM0Xk9yxkynodGfFToxE/Kj5VhFi7qaiI47u7hMWfHbb7zveRpGi1T5lvf+TXMQFA/
      PePydhW3WiA7lif4UWEH1Tnh7BRVQZkTk+88JB8z4g6ch0acGXJPKHNDHw5D7s3iEYMyzpZR
      VVWkqs4S8THCNyrzc+wq88vAeVjBOfWoPqKe43aKZkZ3UJRHhEY8r2cxK8Tk/BCVjwph+Uh+
      WIY5unRBV8emQBGdnsPOpTUc24Vs0h9I6BnyOuR3YoeuTEZja3OxXLrAVxtjpqSSz6XYfbCH
      PyU2/AILPI1IOMNdf/EV3vjO9+ZOVxZY4GnCmAGE3Hn3bTzgxVe+NjwFtcACTzPGNsIMrm0s
      c3/3LqfNLy7byAIL/CqRzBS/tMxrr7/OUik96/oFFniqkNgI+6sf/YhOLkOx+vmf6llggS8D
      EhthL7x4g4xuYLmLtKMLPBsY8wb1UIurFFJ5Lm2U592zwAJPDcZGAJM/+58/iWOquF9EkOsF
      FvjVY+wboMDv/Z3vk8tNfgBLGfDxnbsYqTTtnkmlXEBRNXKFMuXCYrl0ga8uxkaAgP/xwz/h
      Rz/9Kc1echlUCJWUoXDS6nNzq0THVWg3ztjdP1w4ww2wcIb7ajrDjfYBSPFbv/s97HaH6EKa
      YRl4WJ5ka7XC3SOL56+ssbW5SUpXn8gZznY9HM/nuNmhbzs4no8fhE+NM5z6VDjDqc+oM5wQ
      RL6HkVZptSxqhVGSDKGluHkzzmO4Pgj+VarWKFVrjOOtjx+yvlSi3ukjgGIuw8ZKfI2Ukvf3
      jthYKnNYbw+EkKxWRodv3ry7x0q5yEG9RUrX0TWVreWRZ6rlupy1e7T7FvlMPFUrZEdyun7A
      B3vHpHWNIAxx/ID1pdIwVJNE8va9h6yUi7T7FkEUsVTMsZOPZYjkGG9aBEFIrZTncnG0KGA6
      Lrqm0u5ZpA2dtKEnFKJrOrS7fRodk0I2jaoIsulRpL1Wz+Stew/JGDpd00YCW8uVYZZIy/G4
      e3CKIM5kKCNJrZzMhrJ/2sTQNfwgxPV9VspFymO98ru7h6xWipy0uuiqQi6dGj1DSn78zl1u
      bK2ye1xH11QyhsHl9VFbvr93REoRnLa7cexNTWW9+vgLI7bn8dMP7rNeLdHsmnRMm+tbK6wO
      G0Kyf9qMFVpRMB2H1UqJ9QtlzKUNOqaNrmmUck/meHna6mLoGietLsVsmrShY4wFznrz7j4r
      5UKyq69cusHljU2210sTD3wUdg+OOWv30DUV1w9QVYXjZofDRhw0td3p4Lg+rZ6FlHBppUo2
      ZXD/eBAgtdmi2bNwPJ+UoVMtxpGhP9g7GtSZ5KjexnI9irkMXdPmpNVl97gxjNr8zt0HdE2b
      dMogiCLCMOLhaYv2IF7/3b1DGl0TQ9dwgwBVCI4aHY6b3Qu8SjGbRlEUDsf4SEa8e/+QTt+m
      3be4e3DKew+Ohs+PoojjRhvb9SlkU3RNm8NGm73T5jB75EcPHmLaLmlDp5TPkk0b7J00aXbj
      YJ/vfvyATt8mndLjSM2+z95Jk74dh6o5a3Vp9y0KmRRBGNLqWdw/qtM242nr0Wmd40YHkBSz
      aXQtVoKHZ3E77B+dYLkeQRihaxq1UgHTjY0OoN/vc9LsYrkumZRBpZAjiiTvPzgcTjE9P+Ck
      2WXvpIHpuDw8a9GzRqF0Pry/j+166JpK2tBZqRQ5bXXZP41DRh422vRtl5Sh0eqZNDomD04a
      dM34GT3T5rjZIWXodPo2HdPmwUkj8Y690yZd06bZM9k9rtMxbYLBNDsIAo5bXYIwGnQ0DrvH
      DY4acR6GZrtNq2die37yPMBHH3zIRx/eQc2ts7P+ZMciN1drPL+zju16ZFMG60tlSjkXORhu
      KuUy33rpGlEk8YOQtKFRzme5vBbP16rVCr/28nVsz0MCq5UiS8VcQrkc16XVM/GDkJvba9iu
      z0GjhT+Y8714dZv23Qqm41LMZshVDdqmjTqQYWd9hee2VrEcl1zKYKVSxHLcIX95I+ZbPQtF
      EWwtx8865+vNFq4fcNToxNGMt1fZP22xd9IYVrzr+3Q7PcIw4ualtTh+ZaNNOJh3fuPlm2R6
      x5x1eqxWimiqQte0KWTjEe3lazt4x/cxHZdKIUdK12h0TdTBtMJxHPq2y92DU8r5LNc2lmn2
      TCw7jmm6XC3z0pUNTMfD9QK2lsvkMymswcre9sYa3335Oo7nUy1kWS7lqRZzmIP78/k8v3b7
      Bt1uj9N2j7VqiVopT7NnDqeYh/UWfcclpWtYjke906fZNfnmoB1evXmN3s3LtPsWS6U8ubSB
      7frUivEo5LkuHdMmbehoqsq1zRXafQvTiWWwbBs/COOZhBCsVgq0+zbmoAxd0+ak2WVjqcRp
      q0ffdmn2TC6txdEMbdshCEMenrVQBNzYWqXe6dPoxge9quUy3711Hdv1kzvBd997m9LmS5SL
      Tx4cV9c0NmvxMLk+yIWQz6RQ9dGzFCFQVIE28DYVAgxlJIKhaxi6RimXHTxTJZOK71dVlZeu
      XmIjO5puFHMZVqtFUoOhLZMy2Kglh+pSPjtULkPXJ/hCNk22WJzL50oxv7K0xHdfvk4YRfhh
      SFrXuLm9NlRuwzC4dW0bsz3K257PpFlfKg3LDJDLpMhlRlO3TCpOpgGQSU+WoZzPkhlMo7bX
      V/j2S9cSfKWQozKYKmqaxlo1OYJn08mcb5mUMezdh9ekRu2kKQrFXIbiYNqhayqbY7xtO/Qs
      m04kubRaZbNW5qDexvNHG6i5dIpcOlnG8zJc3lzjWy9eTchUK+VZX4rlXq1V+c7L1wHYWV0a
      8AXWBtNl27bxg3gUOm51eW5rlbN2b2hAhUKe128kj/Vur1TZXhkLrqtpGJo2bgA6X/vur1Nd
      WUNbxEWZCUURKIo6VNj4t6cnid/j4IWr2xSDZFqn5XIhofCfJ8YNZHNg+IVsGlX7FMFxhRCs
      rK3Pu3aBBZ46LE6+LPBMY2EACzzTWBjAAs80FgawwDONxzIAKSVnJ0e4fsDpWR2738VyPDzf
      f/TNCyzwJcZjrhuFRGHEe2+/zWq1wHvHPjoBlaVVNtdqj3SG++z4WY5i5zl0ZzmayWEO3en8
      p5cxjCKIopnOcKNcxvNlfCT/Kevxce6f7QwXzZUxkqNcxlMh58vwqHaQPJqf7zA4xxluLqKA
      B3uHlEsF2j2Tq9euUs1p3H1wOEyNOc8ZTlGUmQ5UEDtRzeUVMZc/l2FWIl8hxq6Zy88vw8WM
      7gn+vAwzLjl//2wZxDD951T+/Jp5MijKTIfA+B3z61kM2mnWFY9dhlnveEQ7nD9jnrNbXAez
      +cfRtRmR4eZASXH71Vtouj7Ihq5Ruvw8q9vBIws0FG5+lulHPOP8HY+o2EfcP/eKQSLt+Zh3
      PzMNcPwdj+Rna9/8OkgI8slkPFewefLN5Yf3z3/GozqqeZjfzo+W8eLNj2UAQgjS6cFBmYGr
      qRCgKIt0qgt8tbFYBVrgmcbCABZ4prEwgAWeaSwMYIFnGgsDWOCZxsIAFnimsTCABZ5pLAxg
      gWcaCwNY4JnGY+0ESxny7rsfsLlSYe/gGDWTQwNWN7YXeYIX+ErjsUYAIVSWalUcL2BrtUq+
      tIQqHd56/+4iNOIAi9CIX83QiI85AgSYnS7l5VUsy2Jno4xbKVBoL/IEn2ORJ/irHhpxDoTQ
      uD4IjcggRF46rbG2tvo4ty+wwJcWi4/gBZ5pPHkkoU8Mgcb0cIsCdSDMI3iRm3qNQhxxTBGZ
      qbwq4ghnQujTeQqD90znNVF4ZBnO+xJNFNCYTDGlCGMoy3QZ0oN/s3N5BWOGjPmBhOocGRcB
      zy7iMzMAXVSpqn9j4vdRtC6FkvbG1HtVsgjU2fxAgfPqi0TaZPAuQ8QxITNie+ozMsrOQMbK
      VD6tZoZlmHq/Gq90KcKYKaOCQYikoNxC08wJXhdxWL6scoXSlFpPK5fG+ElFPecNZXmqDHkl
      npqqIjNTRoGKSoaC8soMPjbignqLIJw04vOOIKtcpTDleyilrA3+XZn6jpyyGfNidSqfVbYG
      78nP4C8N5ZjGj+b+YmYZVZFFCHXIf6YjwLQjhfPP7yzwRUMIFUOpziKBuKNQlMmVFEF8AEoT
      hanPUBh0FGSm8ucGNJsvDt8z7/5Z/PnHt0DMLKMYqPw5/wVOgWLklgr4todQFALXI/TDSd7x
      EEIQuP4EnypkQIKqq7h9e4JXDY1UPgNInK49uewnBIXlEr7j4dvexAFuIQT55SK+4+Pb7tRl
      yfxyEc/y4mU9P5iQIV3KIsMIRVPxTGeC19I6etpAKAKnZxNd4PW0jjbg3d5kGYUiyC0VCf0A
      z3SG4eHHUVgp4ZnucIn54jMWiPGZGkC2kidbzoESn7/tHDUJxyIGaymdylYNq21iZFN4pkNz
      72zEp5O8azq0xnghoHZ1jd5Jm9J6FavVp7l/lpChdmUNq92ntF7F7Tu0D+oJvrK5hFAVMuUc
      QhH0zzqE3kjG8tYSQlHIVvIgBL3TDnLMiFKFDMWVMq7poGdSOF2L9kFjJKMiWNpZpXfaJl8r
      4nRtmnunCRmWr67Rr/eobC1hdyxaD5My1q6u0693qWwtYXVM2g8bCb56aYUwCCgsF4lCSfe4
      lWyHaoFstYCRTaNnDOy2SeeoeaEdlvDs2Iidno3bd8aeIFi+to5rOqiGhtO1sNvJaV15a4nA
      DcgtFegdt7Ha/QSfWyqiGRpGNoXTt+mfJYPp5mtFFF0llU1P5Y1siuJaBd/xkJGkd9qe5Fcr
      BJ5PFEY4XYvAG4XpEUJQu7aGZzoIRcHt29gda8QrgtrVtc92FUjPGBi5NJ7loqgKtWtrCV5G
      EWEQEvoBVqtPfrmEOpa1Q0Yy5r2YLyyXUPXRXFMCge1hZFO09s8wskZscGPwHY/8UpH6vWOE
      gPxyMlR44PmkCxm6R01CN6CwmgxFHrgB6UKGzmGT0AsoXuBlGIcN8SwXp2NRWC2jXNjj8B0P
      zdDpHLVIFzODEWkEz/bIVfOxjIogX0t+tPq2R7aap37/BEVRJvjA9chW8jT36kRBSGElWcYo
      CFBUBadr4fZtimvlxNp9ppRFDPYMMqUcpY3kdEHVVYxsCj0Vj1TljSVUI9lXZopZjGwKpKSw
      Woo7jHG+lCWVTxP6AflqgeJqJcGnS1nS+cyQv9gO2UoeoQgUVSFbzlFYmcKrcZSMbCVHaT1Z
      hvNRVjV0jFya8uYSija2/p820NPGZzsCdI5aIKF30sGs90gXkw0f+iHH7+0PdxK7J20Y21UM
      vWAuj4STjw6Gu639Rndi57X54DQeKqTE6cYWn7k1ihXfO+3QP+siBz0fAtJjCto7bdM/6yT4
      zJi7h2e5CRnbR82EjDKSnHx4MPytX+9MyNi4fxIvyEiwBj3ruBLW7x+P+Fbcs5a3RimMOkct
      usftOGBZP5axOKYgTtceymg2e7QeNhIyms0+qXyG3mkb29AmlDf0Q6y2id0xkWFErlZAXtjJ
      7511EUJg1rsY2RRhkJxi9c86ZCp5+mcd7K6FqmtoKW2M75Ip5+jXuzGvqTCmLr3TDpXtGt2T
      NtlybmKa1zvrUNmKeb1jkCklXXJ828Pp2ZiNOLtPrlZMTGd928Xp2Z/xN4CUw6E2jCLMRi/R
      g8eXyMT1k4+YzyeUadae/Yyt+unv+LT81AseQ8a5Ij6S/zQyRkFI/d4xAIHrx4Z+4eWtsaml
      azpcxPiUZRrv9Ozhc307zuySyq2M+K417KB8K05skR7raEI/GMrYO43flS2NRvvQG/GhF+B0
      rUQPD4PO8FzG/gUZZcw/kQEETp87u8esVHNILU3GSJHPL5zhFvjq4okM4KTe5upqmvdPHHTv
      FDVb5ubVbcIwJFBCtK3JTH6qpuJ5Hp7vTeUBfHwin5m8J31UH8SyjqZNXhOlJZ7nIYvK1Gco
      VR3XdQm1aCqv5TI4jkOoz+DzmbgMoT9bxtAnkhJ1zUArTDprhXqE7/vIkjr1GaKk4TgOlGfx
      Kq7rEqWm15O2lI5ljObI6HuEMpjNex6e56FtZhDB5KqRr4QEQQCV6TKSV3BdF5kT03VhJYVl
      WbP5ZQPXdfHFdBmHvDKD1+I6cr3ZuubJC7omnwC91pn85S/fkrbvy9PDPfmztz6UUkrZ7Xbn
      3hcEgez3+5+Yf5x3fN684zjScZxfqQyP4k3TlL7vz+T7/b4MguBzleFXzYdhKHu93kz+oq49
      0QiQL9e4XY4/xtLr2ywvMiot8BXHwhlugWcaCwNY4JnGwgAWeKaxMIAFnml8JhthUkp6vV7i
      7/Gt9yiK4iW8wVlMOdiYOb8mDEN835/JA1jWyI9j2js+b973faSMl1u/rDI6joPneUO34Isy
      Oo6D7/sz+S9DGT4tf65r52W7WMYoivA8b6hrn4kBCCEoFArDvy8KFYYhmqaRy+WmChWGIY7j
      zOTPMe8dnzfvuvFuZSqV+tLKqKoqhmGgDc5gXJRRURTS6fRcA/hVl+HT8lEUoaoq+Xx+ahkv
      6tpnPgXqtuo0On06rTbTzu5bvTYn9TZmr800D13P7nN4coZj9XG8yUMZMgrY29snCDy6PWvy
      AVJydLCP4wW0251JHsnZ8SGm7dFut6fw0Kqf0O5btFvtqR4Jjtnl+KyJ1e/hTdkwigKPvf0D
      As+hN8VNQEbhoAw+nV5/gkdKDvb38IOAdqc7VcbG6RE9y50pY6d5Rqtr0u20mRZowuy2OG12
      6Hc7BFMuCD2HvYMjfNfCHLgyXCgEew8eEIQB7U5vkkdyuP8ALwhntAOcHj3Ecn1arent0Gs3
      aLR7tLvTng+9Vp1GuzdT1+x+h5N6C6vXxpuma47J/we1SsjtIRkOLAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Load' width='192'>
      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
      lDJ9vHmK/v8Ho1tQ6mXQdbkAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Price' width='192'>
      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
      6gFBdesZ///OR/vtPyHvNQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Price (table)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='State of Charge' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAbV0lEQVR4nO2dyXNjSX7fP2/BQpAA9yJZRbJY+9I11Ut1qZcZzWha0y211SNfFNJEaMaK
      udh/gC926GIdfLJPvjh8scNhH2w5dPCop8chqbujepbunuml1q6dS3EFQGIhlre/9AEEimRx
      AVhYSCI/ERVVlXjvIR+Q34fMb/7yl4oQQiCRtClqqysgkbQSKQBJWyMFIGlrpAAkbY0UgKSt
      kQKQtDVSAC0ml8u1ugptjRRAi5HTMK1FCkDS1kgBSNoaKQBJWyMFIGlrpAAkbY0UgKStkQKQ
      tDVSAJK2RgpA0tZIAUiahu85TE1NY5oG6cxqq6sDSAFImojv+4R1lZxhUyjmW10dQApA0kSM
      XJonS8v4tsns7ByO57e6SihyUXxrWV1dJRaLtboabYte/kcul5ORiS3AMIxWV6GtqQggGo22
      sh5tjfwFaB1yDCBpa6QAJG2NFICkrZECkLQ1UgCStkbf/RBJPTCLOZ4srnD21ATTjx+Qt+HS
      hbOtrta+w/d9bNve8/m6rqPr1TdrKYAmEY5E6YqUUqAoeoguTeD7Pr7v47pui2u3f0ilUhiG
      UVMjLuP7pZnlkZGRqs+RAmgSxVyGbDZHRyRPf0+UgqOgqiqqqu7pyz6MCCEoFAqMj4+jaVrN
      53uex+zsLJqmoShKVefIT75JRKI9XDjfU/l/Vwvrsl8xTZNgMLinxg+gqipCCIQQVQtADoIl
      +4ZMJkN3d/eez1cUBU3TKl2hapACkOwLfN/HNE06Ozuf6zqBQKCmQbQUgGRfkM/niUQiVXdd
      tiMYDEoBSA4WQgiy2exzdX/KhEIhLMuq+ngpAEnL8TwPz/MIhULPfa1AIIDjOFUfLwUgaTnl
      RUHP2/2BkgBc1616bYsUgKSlCCHquipuvRVa1fF1eVeJZI9YloWmaXWdDNQ0Dc/zqjpWCkDS
      Uuo1+F1PMBisehwgBSBpGb7vUywW6eqq77x4MBis2gmSAmgSQggcpxT05nsubpU/0YcZwzAI
      h8Ooan2bYS1zATIWqEkkF+dILKc4ceEycw/vYhOshEO3azaOYrFIZ2dn3e8/GAySTqeruq4U
      QJNwPZ/+nii2JxgaGuLe5FzFraglduUwYVkWnZ2ddb9/RVFwXbeq60oBNInho0dJLGcICwtb
      UTh//jyqqlYCuNoRz/OeK/pzO8rXUxRl1+6VFECTULUAw0ODAHR0dLS4Nq2n/MvXKPHruo7n
      ebsKQA6CJS2h3DjrMfu7FdVGhUoBSFqC4zgEAoGGXT8UCkkBSPYvtm0TDAYbdv1q5wKkACQt
      odECqDYqVApA0hJs265L+PN26LpeVVSoFICkJbiu21D7V1EUFEWRApDsPxptgcLTBfK75VyS
      ApA0Hc/zasrds1eqiQmSApA0HcdxmpIMTApAsi9ptANUppq5ACkASdNplgCqmQ2WAmgSqcQC
      N27cwPQEU4/uc/vug1ZXqWU02gItU14auZMTJIPhmoRheYwP91C0BUL4eB5tmx3acZxKyHKz
      3m+7oDgpgCZx5Egfs4sphqImvT296HZ7Zocur4EIBAINd4GAyme73WfcPp98iwmEOjk5Ucp7
      2RmJ0Nvi+rSKRkeBbqbsBG035pBjAElTaXQU6GZ2c4KkACRNpVkOUJndokKlACRNpdkC2C0q
      VApA0lSaZYGW2c0KlQKQNBXXdZvqepUH3FIAkpZTjgKtdyKs3dgpKlQKQNI0mm2BltlpHCAF
      IGka9bRAi6bD0kquqmN3igqVApA0jXo5QI7r8e//5zX+0999VlX6w52yRUsBSJpGPQTg+4L/
      +L9/zXcvH0fTVJKZwq7n7BQVKgUgaRqWZT2XBSqE4L/87HecGOnlnauneeuVE3z01dSu55UX
      yG+FFECTWF6c5frXX1N0BfGFJ3z+xdetrlLTeR4LVAjB3358GxT4i+9fQlEUXr84xm/vzeF5
      OyfB3WnbJBkM1yRsV3DsSC+WK+jr6cEPxtouHNr3fYQQe7rff/ziMZMLaf71X7xR2f4ooCmM
      DsS4N5Pg3PjAjuerqopt288sxJcCaBJDw0MsJFL0+yauEmCovwNVoW3CoctpUPZyr3dnknxy
      8wl/89O3CAY2NuC3r57m4+tTvHByeMdr6LqOEOKZ95ddoCahBUKMHRshEonQ0VFq/O3EXi1Q
      IQR/d+0b/tUPX32m8QNcnBjk8UIaw9o5C9x2VqgUgKQp7NUBSqQLGLbD8eGeLV/XVJUrZ4/y
      xf2FHa8jBSBpKXsNgnv/0/u898a5HWePv//yCT7+enLHOQEpAElLsSyr5l8Aw3K4NRnn6vlj
      Ox53dCCKZXusrBrbHlPeQX4zUgCSprAXC/Ta9Wm+c/k4urZzM1UUhe++OMEnN6a3PUZV1S03
      z5YCkDScsgdfSxSo5/t8+NUk77x6qqrj37w0xmffzOJtszFeOVnu5o3zpAAkDWcvUaB3phKM
      Hekm1hmu6vhoJMRAdydTi5ktX98uWa4UgKTh1GqBCiF4/9P7/PDNczW9zx9eOcmHXz7e9vWt
      wqKlACQNp1YLNJ7KY1guE9tYn9tx+eQQD2ZXMO2tZ5q3coKkABrEvRtf8NWNezw77Go/arVA
      P/j8If/s9TM1L5wJ6BovnDjCjUdLW74uBdBELKPA5NRsq6uxL6jFAi2aDren4lw9t7P1uR1v
      vXyCj77aek5ACqCJWK5Ad9PcvDsNgBA+plnKT+N7Lqa1+xaeh4VaLNBPbkzz5qVxdH1vu8cc
      H+4hWzDJ5M1nXitniFiPFECDGBoe4sjoBCMDMQCSC3NMPX5A3hFMPX7IcipTeUqVbcLD+sf3
      /Upmhp3+uJ7HR19P8oMrJ/f8XgBvXhrnV7dmnnmtbIOWo1KFEDIatFHMPZlBix5lcLAPAE9A
      NBLGcX0cxyG9tMTRoYFKAzmslLdD2i4efz23J+OMDsSIdgSf6zP59qUx/sP/+jXv/t7pZ8YR
      mqZt2KFGCqBBBDWV6blFXr16GYChkaOspLN0KA6nTp0mazgVb7yRm8W1Gtu2CQQCu96jEIIP
      Pn/Ej9669NyfR393J7HOEPPL+WeC6AKBwIYN+mQXqEEcO3GaI31Rys8fVdMZHOgnHA4TCEcY
      6O1uaf2aRbUW6FIqj2E5nBipT97st145yUdfTT5TvnmBvBRAAxBCsLSwSKSrq9VVaTnVWqB7
      tT634+XTI9yeTmC7Gwe9mxfISwE0gOT8FMt5E8PYPjqxXajGAi2aDt9MxXl1j9bnVoSCOmeO
      9XN7Mr6hfLMVKgXQAFZXUlz+vTcJ+A6Hd3hbHdVYoJ/cmOaNS+ME9mh9bscfXjnJh5u6QZvD
      IaQAGsCpSy+SeHSH0TPnad5WEPuPanKBep7PR19P8vaV6qI+a+HU0T6S6QKrxaf7A6iqusFh
      kgJoAHOPH3Lz3kPmZ2fbOhSibIHuxJ3pBKOD1Ud91oKqKrx2cZRPbz+dkd8cFi0F0ABGz1zg
      lRfO4PqCNlv7voFyFOh2A9ty1Od7b5ylUflyv/viBL+8OV2Zg1AUBV3XK90gKYAGoCgKtu1g
      5nNtPQbYzQJdSuUxbbdu1udWDHRHCAY0FpafJtJdPw6QAmgQp86c48UrL3F4p7h2ZzcL9IPP
      HvDua/WzPrdCUZS1RfNPUyiunwuQAmgQv/3kn/jF+x+zc7aaw81OFmjBtLk7k+RKHa3P7bhy
      7hhfP1rEXUuhuN4KlQJoAL7n0DM0zqmJkbYeA7iuu+1KsF/emOH1F8YI1tn63IpIKMDEcA93
      Z5LADgLwXRvTdnfcV7UWhBAUi8W6XQ+o+/UKuQzLqQy2vfFZLYTAcV2E72I7tfXkfc8lm0nj
      aXrbdoHWR4FuxvP9tajP+luf2/GDK6f48MvSnMD6sOgNMxRGOs3DdI7uoAaeS6y3n9RyisHB
      PlaLNuPHds6/uBU3r1/nyNFjdOgQ6IySTSTpOTJENpNl4vg4ao05Ah/dvYXaNcix/k4KjoJi
      F9A7YxirGYbHJghvkT5vJ+KLi4RiPczPZVHw6O7rR9U0zPwqS0sLjI8Pk8qHwC9yYmIctYr+
      qh7sQPMMHj2Y5I03r6ACK/F55haTnL30IvHpByjhGMdHR2qq60FiJwv09mSCscFuuhtgfW7H
      mdF+/usHX1EwbSKhwNbh0KoWYHSwm/nZBYQPhgtHenqIJ+KogQgCav5JP3HyOLPzSTpDCgHH
      oqt7gJWFeSwlgCcEao1XHB47zvTMHBnNoeAopaAyI01q1aDPdmsWQEdnlFgsSjK/QCZvEwgF
      MRxBhyZQFMjlDYy8AYrAp7o+o2MVSBd9+nufxgK5rkckHMSwHKI9vSwl08DI2muHLzu0aZro
      ur5lLp6//809fvTWJTyvuff98plhPrv9hO+9NIGmaViWhSKq2WNGUhO2WWB+fhFb6Jw7PQGA
      8D2KhkUoFMT3XFyhEAmHWF1dJRaLtbbCDSCbzeI4DgMDG9OWL67k+M//93f8zU+/3/TN8pbW
      3vvf/fT7xONxotGoXA/QCGbu3eVRIk1QC3Pi9ARBQFE1OjsjpQN0nebtld4atrNAS9bnswtV
      msFQXxcCQSJTqAyEpQvUAE5cfIGXX3qFV1+93LaxQFtth1Q0nZL1ebbx1udWlFMoXrs+TSgU
      kgJoFPlshl9d+5hPrn3atvMAWyXD+uTGdMn6rHGcVk9evzjGb+/OoQcCWJYlBdAIegZHuPKt
      c3T19bVlH3P9IvQyvi+abn1uRWc4yNGBGJMLmVLKxpbW5hAz9fAe8YVlDp+/sztbhUDfmoo3
      3frcCkUprRP4aC00QgqgAQjf58joSY4O97XlB1wOgiv/AggheP8393nvzXMNi/qshYvHB3m8
      kMITUgANwXUMpqam8VW1LT/gzVGgS6k8lu1uu81RswnoGi+dHuHm1HJbfj+NR9GIdHYQ7SxN
      HrYbmwXwwWcPePf1s1XNojeLt145yZ1pKYCGYBULeK7DrZs3Sefab2H8egvUsBzuTCd49dzR
      FtdqI0cHovR2R6UAGkFXTz89PT0c6evi8aOZVlen6ay3QK/dmObNF+q/4P15URWFl84ekwJo
      BFYxR6gjQkf3EV59qbZNHg46G/JwCsE/ffGYt6+21vrcjlekABpDKBIl2hFm8MggZdvDd23m
      FpYQlDJFpzNbb+Vz0Flvgd6ejDM+1EMs0lrrczs6QgEpgEYghCC9vMTtW/crg+ClxUUCvkHG
      9EkllphbTFSyFB8m1lugP/v1Pf50n1ifW6EoSltOVDac7PIiydUirFsOE9BUFhMpjnYPkVtd
      JZPJVlJ0HKZw6HIY9EIyi2G7HBuM7uv7kwJoAIVsGiXczZmjA5XVDgMjo/QPj6IoMHDmPBOn
      n4YK1Lp/7n7GdV3C4TD/55cPee+NswT2+b3JLlAD6Ih20xXSCYbDFQEoioKqKpVG34pw4GZg
      2zZC0bg5Gefq+dFWV2dX5IKYFnPYFsRMTU1xL25TMF3+7A9eaHV1dkX+AkjqihCCf/xykneu
      nm51VapCCkBSNzzP49F8ionhHqKRg7HmTQpAUjds22Y6nuNPv33+wIxxpAAkdcO2bUaH+jg+
      tD+iPqtBCkBSF4QQJFKrvHJu9MA8/UEKQFInbMfj+oM5emKdra5KTUgBSOrCx9enCGpUtSPk
      fkIKQPLc+ELwD797xJnR/gPV/QEpAEkduDOVYGwwRiR8sJ7+IAXQNFzbYGpmFgGkk0vMLSZb
      XaW6IITgZ7++x7tXT25YCH9Q2N+RSoeIeDxJd1CQNnwCuk46meLoUD++72/YtfCgkcwUKJg2
      I30RbNs+cPciBdAkwkGN2cVlxroGKRaLuK6Dqqqoqnqg1wS8/5v7/MnrZyvrgA/avUgBNIn+
      oWP0D63lxIyOM7QuPeZuW4nuVwzL4dZUgr969xXiS4vEYrEDdy9yDCDZM9duTPOdbx1HU5Vd
      d4Tcr0gBSPaE5/t8+OUk76wteBdC7Lgj/H7l4NVYsi/4ZjrJ6GCMWGf4wDZ+kAKQ7AEhBH//
      m3v88M3zwO4bYreSUhaO7QfmchAsqZlEukDBdCo7vO8nAZTausBwBSnDJW16+EJwYSBMUHv2
      eS8FIKkJIQQ//+wBf/L62Uq6k612g2l2ndY3eMPxCQcU+sI6J3qCmK7g+pLBhYEwXUFtQ5oW
      KQBJTZi2y63JOP/ij16qlNm2TTQabWo9bM9nxfBIGS5526dDV+jr0DnZGySiqxtmpLuCEAmo
      3EkajMWCDHc93blGCkBSE9duTPPtS+Poa90JIURTukC+EGRNj2XDJWN6aKpCf4fGeCxIV7BU
      l53CMCIBlZeHI9xbNlm1PE73hVBlYixJLXi+z0dfTvLXP/nehvJGuEDlbs2K4bJSdLF9QXdI
      Y6BD52RPCFWpPbWMriq8MBjmyarNb+cLaKoUgKQGvplOcmwwRnfX01yf9Wz8ji/IGC7LhkvO
      9glrCv0dOucHwoQ0pS6BdoqiMB4LMhYLoiC7QJIqKVmf9/nRW5c2lNu2/cxukLVcM2f7rBgu
      acNFAD1hnZGuIOdCKgpKQ/KKKopSSVgmBdAkbCPH9Pwyp0+fIJNcYtX0mRjbX5tG7EQ8lcew
      nlqfZbbbEHs7TNcnbXqsFF0M16czoNLfoXPsSAcBtT5P+VqQAmgSieUMw9066aJPNBojZ6Yr
      odCe57W6ervy888e8EdXTz0T7myaJsFgcNt78AXknFJfPmO6qEBvWGM8pq+5NeUjBb7f/EhS
      KYAm0RUOML2YZOxkPzMzkygdPZVw6P0eRlA0Hb6ZTvCTd158pq62bROLxSrlAjCcUrcmZbg4
      viAW0unv0JnoDqKr+2vBjBRAk+gZHKZncBiA3gsb+9H7fRXVr27N8PoL4wQDG5uLEALHcVD1
      AMuGy0rRI2d7hHSVvrDGuf4OwnrzuzW1IAUg2RHP8/noqyn+7Y9/v1LmC0He9kkZDnnb41bS
      pCekM9ylcya4N4uyVUgBSHbkznSCY4NRwuEQS3mHFcOl6PhEAirduqC7I8TYcOTANPjNSAFI
      tsTzBau2x+O0xYVLZ7i7bJYGr91BOgMqqqKQy+UwwqED2/hBCkCyxvqAspThYnsC0zBZWErx
      L18eR1ef9eRN0yQc3p8b4FWLFECbIgDXE2Qtj+WiS972CGqlgLLTfWE6dIX/9ov7vDwxQEDb
      +glvWdaB39xDCqCN8IWgUJ55XYuT7w5pDK0NXrV1FmXRtPlmOsGP335xy2uVHaC9zgLvF6QA
      DjFCCGxPlGZe1w1e+zt0LgwEdoyv+eXNGV67OEYwsHWWh/Iqq/0+h7EbUgCHCCFKT/mc7a3N
      vHqoikJvWGNsLWxYrWLA6vkl6/Pf/OXvb3uM67qHYnfLg38HbY4QAnMtbDhluliuIBrU6I/o
      jMdC2/bfd+LOVIJjgzF6ox3bHnMYBsAgBXDgEELgCcisdWtylkdgbfB6qjdM5DlnXoUQ/PzT
      B/z5pqjPzbR6GWS9kAI4APhCUHR8VoouKdPDWxu8HononO7dOHh9XspRnyc3RX1u5jA4QCAF
      0DQ8x2IhvsLo6FGsYg6HANHI1l0IIQTW2uA1ZbgUHJ+IrtIf0bk4ECCoqQ2Jkwf44POH/PFr
      Z3b8FSk7QPslE8TzIAXQJOJLccKqT8b0CXmCgpGjMxxECFFxVJaLT1dDBdTy4DVQymSw4WqC
      RuSgNSyHO1MJfvz25R1z6awPiT5oyXA3IwXQJIK6wvxSmmPRIxTyGWYTWYaPDKIoSqVBmZ5g
      pCvAaV1hfa9G+D7NaGbXrk/x2sVjaKqyY5pzy7LQdf3ApULfCimAJjEwMsbAyFjpP7FxBtct
      BitnVB6LtS6zsu8LPvp6mr/+yfd2zfDsui7hcPjAZYLeioM9iyGpG7en4owd6aana3dr87BY
      oCAFIFnj/U/v894bZ6s69rBYoCAFIAGWUnkMy2ViF+sTSoNe13UPfAxQGSkACT//9D7vvnam
      qjAJ3/dLaUUO8BqA9UgBtDnLmQJ3Z5JcPX9s94PhUESArkcKoM35H/9wgx+99S0CenWOzmHq
      /4MUQFvzaH6FbMHilbPVJ+iSApAcCoQQ/Pf/d52/+uOXUGuIJZICkBwKPv9mjiO9nUwM91R9
      zmFzgEAKoC1xXI+//fg2f/mDyzW5OYfNAQIpgLbkF58/5LWLozsueNmKw+YAgRRA03CsIo+n
      niCA1XSShfhyS+qRK1p8+OUk//w7F2p+kh+mEIgyMhiuSSQSK/RFBGnDJ58zEELg+31rf5ei
      KhPLKRCNjbC8M53kvatjFHJZCjWem8/n6e3trdTX9/3Kovjt/l0Ol1YUpeZ/N+M9pACaREdI
      48limrHIILgWBaeUFXr9U1hVVZQG/yhfPj1CYIvtQquhp6eHSCRS5xq1FkUc9BUNB5zV1dVD
      sbTwoCLHAJK2RgpA0tZIAUjaGikASVsjBSBpayo2aC6XO/ApLg4ihmFUXCAhxJaedSPKNr9f
      vcsOSv0rAohGo8/7XUqek60mfzZ/YZvLyv9fP59QPnZ9me/7aJp2aMo2f157LZNdoH2CZxvM
      LyYQgsqX7rsO6ewqQGXSzHMspmdm8YWobLHqWkUmp57grzX8sngyqRQ+pS9b0zQQLo/u38ew
      S3v6lsoEi3MzmM7TMtc2eHD/PunVYqVMCMH87AzmunOFECzMPsFy/UpZLpPC9gRL87NYbqnB
      FVYzmI5HJr2C55eOK+azGJZLcmmebN5A0zTMQo6CabM094TMWpltFMgXTYRnk87m0TQNxyqy
      mjdYSSyyEF9eq7NJNlfAyGdZSqTQNA3Psciu5lman2FyZq5U5tpksjkKq2kWkykpgP3C/GIC
      1yrireuGOo5LPp/fcJzn+WiKi2mvy86GgplfIW8+LfMdk3vfPMRdd65fWCZRVAgGnn7tRjbJ
      k3iG9Zm39GAHI4O9sC73v++YJJNJEivpp2WewcLCEpOTT57WL58hZ65iekEW5+cBcIt5cpZD
      MZdlTT94pknOLBIMdZDJlK7pOg75Qh4QLC+XYqUc1yeXyzI/N89yeqVU5kE+l2ZxcYHQWmyS
      4/oUclkePnhAOY2Y43rk86sMHR1DX7sV1/HI53Mk4nES8bgUwH4hoPgsZ3IbMsK5jsHszCy2
      97Rh51JxFpcLrM9J5VgmtuPiuk93a19Np3E9i3zBrJR5epQePcfSSrFSpgWChAOCePJpwwZB
      Om9uyBHkCw/PFzi2UylTtTD9fVE6uzorZZlsmqVEhnRyATVQWjizmk2zuBRnJZkgmSq9T241
      zfzCEvfu3iMULkWlFnIZ5uYXMS0L07QAMApZnswvks/nSKUyCMAqrPJkbpHe3j7m5uYAsI08
      T+YW6OjsZGlpqfS5mEWezM6RSiaI9Q2WymyD2dknFC0H27b5/3BScqOrS2dpAAAAAElFTkSu
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Weighted Load' width='192'>
      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
      rkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
